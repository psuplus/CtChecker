Args: ../../../..//Debug+Asserts/bin/opt -load ../../../..//projects/poolalloc/Debug+Asserts/lib/LLVMDataStructure.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Constraints.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/sourcesinkanalysis.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/pointstointerface.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Deps.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Security.dylib -vulnerablebranch -debug 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
Merged 13 call nodes.
Merged 5 call nodes.
Merged 6 call nodes.
Merged 4 call nodes.
Merged 6 call nodes.
Merged 5 call nodes.
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.objectsize.i64.p0i8 from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Visiting single node SCC #: 1 fn: BN_exp
  [BU] Calculating graph for: BN_exp
  [BU] Done inlining: BN_exp [18+0]
Visiting single node SCC #: 3 fn: BN_mod_exp_mont_word
  [BU] Calculating graph for: BN_mod_exp_mont_word
  [BU] Done inlining: BN_mod_exp_mont_word [27+0]
Visiting single node SCC #: 6 fn: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Done inlining: MOD_EXP_CTIME_COPY_TO_PREBUF [12+0]
Visiting single node SCC #: 11 fn: constant_time_msb
  [BU] Calculating graph for: constant_time_msb
  [BU] Done inlining: constant_time_msb [1+0]
Visiting single node SCC #: 10 fn: constant_time_is_zero
  [BU] Calculating graph for: constant_time_is_zero
  [BU] Done inlining: constant_time_is_zero [1+0]
Visiting single node SCC #: 9 fn: constant_time_eq
  [BU] Calculating graph for: constant_time_eq
  [BU] Done inlining: constant_time_eq [2+0]
Visiting single node SCC #: 8 fn: constant_time_eq_int
  [BU] Calculating graph for: constant_time_eq_int
  [BU] Done inlining: constant_time_eq_int [2+0]
Visiting single node SCC #: 7 fn: MOD_EXP_CTIME_COPY_FROM_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_FROM_PREBUF
  [BU] Done inlining: MOD_EXP_CTIME_COPY_FROM_PREBUF [21+0]
Visiting single node SCC #: 5 fn: BN_mod_exp_mont_consttime
  [BU] Calculating graph for: BN_mod_exp_mont_consttime
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[21+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[21+0] into 'BN_mod_exp_mont_consttime' [31+0]
  [BU] Done inlining: BN_mod_exp_mont_consttime [31+0]
Visiting single node SCC #: 4 fn: BN_mod_exp_mont
  [BU] Calculating graph for: BN_mod_exp_mont
    Inlining graph for BN_mod_exp_mont_consttime[31+0] into 'BN_mod_exp_mont' [34+0]
  [BU] Done inlining: BN_mod_exp_mont [34+0]
Visiting single node SCC #: 12 fn: BN_mod_exp_recp
  [BU] Calculating graph for: BN_mod_exp_recp
  [BU] Done inlining: BN_mod_exp_recp [27+0]
Visiting single node SCC #: 2 fn: BN_mod_exp
  [BU] Calculating graph for: BN_mod_exp
    Inlining graph for BN_mod_exp_mont_word[27+0] into 'BN_mod_exp' [13+0]
    Inlining graph for BN_mod_exp_mont[34+0] into 'BN_mod_exp' [15+0]
    Inlining graph for BN_mod_exp_recp[27+0] into 'BN_mod_exp' [16+0]
  [BU] Done inlining: BN_mod_exp [14+0]
Visiting single node SCC #: 13 fn: BN_mod_exp_simple
  [BU] Calculating graph for: BN_mod_exp_simple
  [BU] Done inlining: BN_mod_exp_simple [25+0]
[TD] Inlining callers into 'BN_mod_exp_simple'
[TD] Inlining callers into 'BN_mod_exp'
[TD] Inlining callers into 'BN_mod_exp_recp'
   [TD] Inlining graph into Fn 'BN_mod_exp_recp' from Fn 'BN_mod_exp': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_mod_exp_mont_consttime'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_consttime' from Fn 'BN_mod_exp_mont': 6 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_FROM_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'constant_time_eq_int'
   [TD] Inlining graph into Fn 'constant_time_eq_int' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 2 args
[TD] Inlining callers into 'constant_time_eq'
   [TD] Inlining graph into Fn 'constant_time_eq' from Fn 'constant_time_eq_int': 2 args
[TD] Inlining callers into 'constant_time_is_zero'
   [TD] Inlining graph into Fn 'constant_time_is_zero' from Fn 'constant_time_eq': 1 args
[TD] Inlining callers into 'constant_time_msb'
   [TD] Inlining graph into Fn 'constant_time_msb' from Fn 'constant_time_is_zero': 1 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_TO_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont_word'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_word' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_exp'
Running on llvm.dbg.declare in context []
Running on BN_get_flags in context []
Running on ERR_put_error in context []
Running on BN_mod_exp_mont_word in context []
Running on BN_CTX_start in context []
Running on BN_CTX_get in context []
Running on BN_copy in context []
Running on BN_num_bits in context []
Running on BN_mod_exp_mont in context []
Running on BN_is_odd in context []
Running on BN_set_word in context []
Running on BN_sqr in context []
Running on BN_is_bit_set in context []
Running on BN_mul in context []
Running on BN_CTX_end in context []
Running on BN_mod_exp in context []
Using taint reachable signature for:   %call = call i32 @BN_is_odd(%struct.bignum_st* %0), !dbg !98
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !96
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
EDGE: [0: tymap-size 1]:i64
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !96
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !96
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call3 = call i32 @BN_get_flags(%struct.bignum_st* %5, i32 4), !dbg !110
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !109
Creating ConsElem Map for :	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %5 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !109
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !109
Using taint reachable signature for:   %call6 = call i32 @BN_get_flags(%struct.bignum_st* %6, i32 4), !dbg !114
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !113
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
EDGE: [0: tymap-size 1]:i64
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !113
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !113
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call9 = call i32 @BN_get_flags(%struct.bignum_st* %7, i32 4), !dbg !118
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !117
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %7 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !117
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !117
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7fa021d26d20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d26d20:s0 -> Node0x7fa021d269c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d269c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d26db0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d26db0:s0 -> Node0x7fa021d26ae0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d26ae0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0}}"];
	Node0x7fa021d26ae0:s0 -> Node0x7fa021d27440;
Creating ConsElem Map for :	Node0x7fa021d26e80 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d26e80:s0 -> Node0x7fa021d26b70;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d26b70 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d26fc0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d26fc0:s0 -> Node0x7fa021d26c00;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d26c00 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0}}"];
	Node0x7fa021d26c00:s0 -> Node0x7fa021d27540;
Creating ConsElem Map for :	Node0x7fa021d27100 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d27100:s0 -> Node0x7fa021d26c90;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7fa021d26c90 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !103
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !103
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !100
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021f320d0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[8,12]0x7fa021f333b0
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 3, !dbg !107
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 3, !dbg !107
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !106
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021f320d0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[16,20]0x7fa021f334b0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !125
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !125
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !124
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021f320d0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021f33330
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %9, i64 0, !dbg !124
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %9, i64 0, !dbg !124
 allocation intermediate:   %9 = load i64*, i64** %d, align 8, !dbg !125
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !125
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !125
=>  %8 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !124
 allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !124
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,  : CRE: elem 0:default:0x7fa021f28ac0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021f33330
Creating ConsElem Map for :	Node0x7fa021d27340 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d27240 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on BN_mod_exp_recp in context []
Running on BN_is_one in context []
Running on BN_RECP_CTX_init in context []
Running on BN_RECP_CTX_set in context []
Running on BN_nnmod in context []
Running on BN_is_zero in context []
Running on BN_mod_mul_reciprocal in context []
Running on BN_RECP_CTX_free in context []
Running on BN_mod_exp_mont_consttime in context []
Running on BN_MONT_CTX_new in context []
Running on BN_MONT_CTX_set in context []
Running on BN_ucmp in context []
Running on BN_to_montgomery in context []
Running on BN_mod_mul_montgomery in context []
Running on bn_wexpand in context []
Running on bn_correct_top in context []
Running on BN_value_one in context []
Running on BN_from_montgomery in context []
Running on BN_MONT_CTX_free in context []
Running on CRYPTO_malloc in context []
Running on __memset_chk in context []
Running on llvm.objectsize.i64.p0i8 in context []
Running on BN_div in context []
Running on OPENSSL_cleanse in context []
Running on CRYPTO_free in context []
Running on BN_mul_word in context []
Running on BN_mod_exp_simple in context []
Running on BN_mod_mul in context []
Running on BN_exp in context []
Running on BN_mod_exp_mont_word in context [BN_mod_exp ]
Using taint reachable signature for:   %call = call i32 @BN_get_flags(%struct.bignum_st* %0, i32 4), !dbg !120
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !118
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !118
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !118
Using taint reachable signature for:   %call1 = call i32 @BN_get_flags(%struct.bignum_st* %1, i32 4), !dbg !124
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !123
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !123
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !123
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 117, i32 66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1126), !dbg !127
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Creating ConsElem Map for :	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call3 = call i32 @BN_is_odd(%struct.bignum_st* %2), !dbg !132
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !130
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !130
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !130
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 117, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1134), !dbg !134
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call10 = call i32 @BN_num_bits(%struct.bignum_st* %9), !dbg !147
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !146
REACHABLE SOURCE:   %9 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !146
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !146
Using taint reachable signature for:   %call13 = call i32 @BN_is_one(%struct.bignum_st* %11), !dbg !156
RSINKGEP INSTRUCTION   %11 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !153
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %11 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !153
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %11 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !153
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call16 = call i32 @BN_set_word(%struct.bignum_st* %12, i64 0), !dbg !160
RSINKGEP INSTRUCTION   %12 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !160
Creating ConsElem Map for :	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %12 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !160
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %12 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !160
Using taint reachable signature for:   %call17 = call i32 @BN_set_word(%struct.bignum_st* %13, i64 1), !dbg !162
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !162
REACHABLE SOURCE:   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !162
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !162
Using taint reachable signature for:   %call22 = call i32 @BN_set_word(%struct.bignum_st* %16, i64 0), !dbg !171
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !171
REACHABLE SOURCE:   %16 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !171
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !171
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %18), !dbg !177
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !176
Creating ConsElem Map for :	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !176
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !176
Using taint reachable signature for:   %call24 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19), !dbg !179
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !178
REACHABLE SOURCE:   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !178
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !178
Using taint reachable signature for:   %call25 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %20), !dbg !182
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !181
REACHABLE SOURCE:   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !181
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !181
Using taint reachable signature for:   %call26 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %21), !dbg !185
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !184
REACHABLE SOURCE:   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !184
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !184
Using taint reachable signature for:   %call37 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !205
Using taint reachable signature for:   %call41 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %27, %struct.bignum_st* %28, %struct.bignum_ctx* %29), !dbg !216
RSINKGEP INSTRUCTION   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !212
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !214
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !215
Creating ConsElem Map for :	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !212
REACHABLE SOURCE:   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !214
REACHABLE SOURCE:   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !215
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !212
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !214
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !215
Using taint reachable signature for:   %call51 = call i32 @BN_set_word(%struct.bignum_st* %39, i64 %40), !dbg !247
RSINKGEP INSTRUCTION   %39 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
Creating ConsElem Map for :	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %39 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %39 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
Using taint reachable signature for:   %call53 = call i32 @BN_to_montgomery(%struct.bignum_st* %41, %struct.bignum_st* %42, %struct.bn_mont_ctx_st* %43, %struct.bignum_ctx* %44), !dbg !247
RSINKGEP INSTRUCTION   %44 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !247
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
RSINKGEP INSTRUCTION   %42 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
RSINKGEP INSTRUCTION   %43 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !247
REACHABLE SOURCE:   %44 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !247
REACHABLE SOURCE:   %41 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
REACHABLE SOURCE:   %42 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
REACHABLE SOURCE:   %43 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !247
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %44 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !247
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
RSINKGEP INSTRUCTION   %42 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !247
RSINKGEP INSTRUCTION   %43 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !247
Using taint reachable signature for:   %call58 = call i32 @BN_mul_word(%struct.bignum_st* %45, i64 %46), !dbg !254
RSINKGEP INSTRUCTION   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !254
REACHABLE SOURCE:   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !254
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !254
Using taint reachable signature for:   %call61 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %47, %struct.bignum_st* %48, %struct.bignum_st* %49, %struct.bignum_ctx* %50), !dbg !254
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !254
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !254
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !254
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !254
REACHABLE SOURCE:   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !254
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !254
REACHABLE SOURCE:   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !254
REACHABLE SOURCE:   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !254
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !254
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !254
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !254
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !254
Using taint reachable signature for:   %call70 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %56, %struct.bignum_st* %57, %struct.bignum_st* %58, %struct.bn_mont_ctx_st* %59, %struct.bignum_ctx* %60), !dbg !273
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !272
RSINKGEP INSTRUCTION   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !271
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !270
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !269
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !266
REACHABLE SOURCE:   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !272
REACHABLE SOURCE:   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !271
REACHABLE SOURCE:   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !270
REACHABLE SOURCE:   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !269
REACHABLE SOURCE:   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !266
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !272
RSINKGEP INSTRUCTION   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !271
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !270
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !269
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !266
Using taint reachable signature for:   %call75 = call i32 @BN_is_bit_set(%struct.bignum_st* %61, i32 %62), !dbg !280
RSINKGEP INSTRUCTION   %61 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !277
REACHABLE SOURCE:   %61 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !277
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %61 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !277
Using taint reachable signature for:   %call84 = call i32 @BN_set_word(%struct.bignum_st* %69, i64 %70), !dbg !298
RSINKGEP INSTRUCTION   %69 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
REACHABLE SOURCE:   %69 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %69 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
Using taint reachable signature for:   %call87 = call i32 @BN_to_montgomery(%struct.bignum_st* %71, %struct.bignum_st* %72, %struct.bn_mont_ctx_st* %73, %struct.bignum_ctx* %74), !dbg !298
RSINKGEP INSTRUCTION   %71 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !298
RSINKGEP INSTRUCTION   %73 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !298
REACHABLE SOURCE:   %71 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
REACHABLE SOURCE:   %72 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
REACHABLE SOURCE:   %74 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !298
REACHABLE SOURCE:   %73 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !298
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %71 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !298
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !298
RSINKGEP INSTRUCTION   %73 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !298
Using taint reachable signature for:   %call92 = call i32 @BN_mul_word(%struct.bignum_st* %75, i64 %76), !dbg !305
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !305
REACHABLE SOURCE:   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !305
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !305
Using taint reachable signature for:   %call95 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %77, %struct.bignum_st* %78, %struct.bignum_st* %79, %struct.bignum_ctx* %80), !dbg !305
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !305
RSINKGEP INSTRUCTION   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !305
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !305
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !305
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !305
REACHABLE SOURCE:   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !305
REACHABLE SOURCE:   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !305
REACHABLE SOURCE:   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !305
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !305
RSINKGEP INSTRUCTION   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !305
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !305
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !305
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call107 = call i32 @BN_set_word(%struct.bignum_st* %89, i64 %90), !dbg !327
RSINKGEP INSTRUCTION   %89 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
REACHABLE SOURCE:   %89 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %89 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
Using taint reachable signature for:   %call110 = call i32 @BN_to_montgomery(%struct.bignum_st* %91, %struct.bignum_st* %92, %struct.bn_mont_ctx_st* %93, %struct.bignum_ctx* %94), !dbg !327
RSINKGEP INSTRUCTION   %94 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !327
RSINKGEP INSTRUCTION   %93 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !327
RSINKGEP INSTRUCTION   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
RSINKGEP INSTRUCTION   %91 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
REACHABLE SOURCE:   %94 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !327
REACHABLE SOURCE:   %93 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !327
REACHABLE SOURCE:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
REACHABLE SOURCE:   %91 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %94 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !327
RSINKGEP INSTRUCTION   %93 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !327
RSINKGEP INSTRUCTION   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
RSINKGEP INSTRUCTION   %91 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !327
Using taint reachable signature for:   %call115 = call i32 @BN_mul_word(%struct.bignum_st* %95, i64 %96), !dbg !334
RSINKGEP INSTRUCTION   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !334
REACHABLE SOURCE:   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !334
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !334
Using taint reachable signature for:   %call118 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %97, %struct.bignum_st* %98, %struct.bignum_st* %99, %struct.bignum_ctx* %100), !dbg !334
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !334
RSINKGEP INSTRUCTION   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !334
RSINKGEP INSTRUCTION   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !334
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !334
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !334
REACHABLE SOURCE:   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !334
REACHABLE SOURCE:   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !334
REACHABLE SOURCE:   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !334
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !334
RSINKGEP INSTRUCTION   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !334
RSINKGEP INSTRUCTION   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !334
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !334
Using taint reachable signature for:   %call127 = call i32 @BN_set_word(%struct.bignum_st* %105, i64 1), !dbg !343
RSINKGEP INSTRUCTION   %105 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !343
REACHABLE SOURCE:   %105 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !343
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %105 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !343
Using taint reachable signature for:   %call132 = call i32 @BN_from_montgomery(%struct.bignum_st* %106, %struct.bignum_st* %107, %struct.bn_mont_ctx_st* %108, %struct.bignum_ctx* %109), !dbg !355
RSINKGEP INSTRUCTION   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !349
RSINKGEP INSTRUCTION   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !353
RSINKGEP INSTRUCTION   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !352
RSINKGEP INSTRUCTION   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !354
REACHABLE SOURCE:   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !349
REACHABLE SOURCE:   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !353
REACHABLE SOURCE:   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !352
REACHABLE SOURCE:   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !354
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !349
RSINKGEP INSTRUCTION   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !353
RSINKGEP INSTRUCTION   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !352
RSINKGEP INSTRUCTION   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !354
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %111), !dbg !365
RSINKGEP INSTRUCTION   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !364
REACHABLE SOURCE:   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !364
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !364
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %112), !dbg !367
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !366
REACHABLE SOURCE:   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !366
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !366
Creating ConsElem Map for :	Node0x7fa021d28a10 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d28a10:s0 -> Node0x7fa021d28620;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d28620 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d28aa0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d28b30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d28b30:s0 -> Node0x7fa021d28740;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d28740 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d28c70 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d28c70:s0 -> Node0x7fa021d287d0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d287d0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d287d0:s0 -> Node0x7fa021d29d40;
Creating ConsElem Map for :	Node0x7fa021d28db0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d28db0:s0 -> Node0x7fa021d28860;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7fa021d28860 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d28ef0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d28ef0:s0 -> Node0x7fa021d288f0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d29030 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d29030:s0 -> Node0x7fa021d288f0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7fa021d288f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d29370 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d28980 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !139
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !139
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !137
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[8,12]0x7fa021e66cd0
DSOURCEGEP INSTRUCTION   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !143
[Source:]   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !143
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !142
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021e66c50
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 0, !dbg !142
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 0, !dbg !142
 allocation intermediate:   %6 = load i64*, i64** %d8, align 8, !dbg !143
=>  %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !143
 allocation intermediate:   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !143
=>  %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !142
 allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !142
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x7fa021e5c540
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021e66c50
Creating ConsElem Map for :	Node0x7fa021d29270 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d29770 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d29770:s0 -> Node0x7fa021d29e40;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d29e40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d298b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d298b0:s0 -> Node0x7fa021d29f10;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d299f0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d299f0:s0 -> Node0x7fa021d29f10;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d29470 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d29570 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d29170 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d29670 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d29b30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d29b30:s0 -> Node0x7fa021d29f10;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d29f10 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Running on BN_mod_exp_mont in context [BN_mod_exp ]
Using taint reachable signature for:   %call = call i32 @BN_get_flags(%struct.bignum_st* %0, i32 4), !dbg !129
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !127
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !127
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !127
Using taint reachable signature for:   %call1 = call i32 @BN_get_flags(%struct.bignum_st* %1, i32 4), !dbg !133
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !132
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !132
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !132
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call4 = call i32 @BN_get_flags(%struct.bignum_st* %2, i32 4), !dbg !137
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !136
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !136
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !136
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call7 = call i32 @BN_is_odd(%struct.bignum_st* %9), !dbg !151
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !149
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %9 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !149
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !149
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 109, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 328), !dbg !153
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call10 = call i32 @BN_num_bits(%struct.bignum_st* %10), !dbg !157
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !156
REACHABLE SOURCE:   %10 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !156
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !156
Using taint reachable signature for:   %call13 = call i32 @BN_is_one(%struct.bignum_st* %12), !dbg !166
RSINKGEP INSTRUCTION   %12 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !163
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %12 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !163
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %12 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !163
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call16 = call i32 @BN_set_word(%struct.bignum_st* %13, i64 0), !dbg !170
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !170
REACHABLE SOURCE:   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !170
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !170
Using taint reachable signature for:   %call17 = call i32 @BN_set_word(%struct.bignum_st* %14, i64 1), !dbg !172
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !172
REACHABLE SOURCE:   %14 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !172
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !172
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %16), !dbg !178
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !177
REACHABLE SOURCE:   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !177
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !177
Using taint reachable signature for:   %call20 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %17), !dbg !180
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !179
REACHABLE SOURCE:   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !179
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !179
Using taint reachable signature for:   %call21 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %18), !dbg !183
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !182
REACHABLE SOURCE:   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !182
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !182
Using taint reachable signature for:   %call22 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19), !dbg !186
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !185
REACHABLE SOURCE:   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !185
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !185
Using taint reachable signature for:   %call34 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !204
Using taint reachable signature for:   %call38 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %25, %struct.bignum_st* %26, %struct.bignum_ctx* %27), !dbg !215
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !214
RSINKGEP INSTRUCTION   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !211
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !213
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !214
REACHABLE SOURCE:   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !211
REACHABLE SOURCE:   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !213
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !214
RSINKGEP INSTRUCTION   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !211
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !213
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call45 = call i32 @BN_ucmp(%struct.bignum_st* %30, %struct.bignum_st* %31), !dbg !224
RSINKGEP INSTRUCTION   %30 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !222
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %31 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !223
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %30 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !222
REACHABLE SOURCE:   %31 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !223
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %30 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !222
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %31 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !223
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call49 = call i32 @BN_nnmod(%struct.bignum_st* %32, %struct.bignum_st* %33, %struct.bignum_st* %34, %struct.bignum_ctx* %35), !dbg !233
RSINKGEP INSTRUCTION   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !227
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !231
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !232
RSINKGEP INSTRUCTION   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !230
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !227
REACHABLE SOURCE:   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !231
REACHABLE SOURCE:   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !232
REACHABLE SOURCE:   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !230
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !227
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !231
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !232
RSINKGEP INSTRUCTION   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !230
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call56 = call i32 @BN_is_zero(%struct.bignum_st* %38), !dbg !243
RSINKGEP INSTRUCTION   %38 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !241
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %38 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !241
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %38 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !241
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call59 = call i32 @BN_set_word(%struct.bignum_st* %39, i64 0), !dbg !245
RSINKGEP INSTRUCTION   %39 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !245
REACHABLE SOURCE:   %39 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !245
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %39 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !245
Using taint reachable signature for:   %call62 = call i32 @BN_to_montgomery(%struct.bignum_st* %40, %struct.bignum_st* %41, %struct.bn_mont_ctx_st* %42, %struct.bignum_ctx* %43), !dbg !254
RSINKGEP INSTRUCTION   %40 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx61, align 8, !dbg !249
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !251
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %42 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !252
RSINKGEP INSTRUCTION   %43 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !253
REACHABLE SOURCE:   %40 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx61, align 8, !dbg !249
REACHABLE SOURCE:   %41 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !251
REACHABLE SOURCE:   %42 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !252
REACHABLE SOURCE:   %43 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !253
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %40 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx61, align 8, !dbg !249
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !251
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %42 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !252
RSINKGEP INSTRUCTION   %43 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !253
Using taint reachable signature for:   %call83 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %49, %struct.bignum_st* %50, %struct.bignum_st* %51, %struct.bn_mont_ctx_st* %52, %struct.bignum_ctx* %53), !dbg !270
RSINKGEP INSTRUCTION   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !269
RSINKGEP INSTRUCTION   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !268
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !267
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !266
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !263
Creating ConsElem Map for :	Node0x7fa021d2e140 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !269
REACHABLE SOURCE:   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !268
REACHABLE SOURCE:   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !267
REACHABLE SOURCE:   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !266
REACHABLE SOURCE:   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !263
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d2e140 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !269
RSINKGEP INSTRUCTION   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !268
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !267
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !266
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !263
Using taint reachable signature for:   %call88 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %57), !dbg !288
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !285
REACHABLE SOURCE:   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !285
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !285
Using taint reachable signature for:   %call97 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %60, %struct.bignum_st* %62, %struct.bignum_st* %63, %struct.bn_mont_ctx_st* %64, %struct.bignum_ctx* %65), !dbg !302
RSINKGEP INSTRUCTION   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !298
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !299
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !300
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !301
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !295
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !298
REACHABLE SOURCE:   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !299
REACHABLE SOURCE:   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !300
REACHABLE SOURCE:   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !301
REACHABLE SOURCE:   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !295
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d2e140 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !298
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !299
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !300
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !301
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !295
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call109 = call %struct.bignum_st* @bn_wexpand(%struct.bignum_st* %74, i32 %75), !dbg !329
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !325
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Creating ConsElem Map for :	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
EDGE: [0: tymap-size 1]:i64
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Creating ConsElem Map for :	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %74 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !325
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !325
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   call void @bn_correct_top(%struct.bignum_st* %93), !dbg !362
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !361
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %93 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !361
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !361
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !366
Using taint reachable signature for:   %call134 = call i32 @BN_to_montgomery(%struct.bignum_st* %94, %struct.bignum_st* %call133, %struct.bn_mont_ctx_st* %95, %struct.bignum_ctx* %96), !dbg !369
RSINKGEP INSTRUCTION   %95 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !367
RSINKGEP INSTRUCTION   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !366
RSINKGEP INSTRUCTION   %94 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !364
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %96 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !368
Creating ConsElem Map for :	Node0x7fa021d2e650 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %95 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !367
REACHABLE SOURCE:   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !366
REACHABLE SOURCE:   %94 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !364
REACHABLE SOURCE:   %96 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !368
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d2e650 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %95 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !367
RSINKGEP INSTRUCTION   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !366
RSINKGEP INSTRUCTION   %94 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !364
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %96 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !368
Using taint reachable signature for:   %call140 = call i32 @BN_is_bit_set(%struct.bignum_st* %97, i32 %98), !dbg !379
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !373
REACHABLE SOURCE:   %97 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !373
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !373
Using taint reachable signature for:   %call145 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %100, %struct.bignum_st* %101, %struct.bignum_st* %102, %struct.bn_mont_ctx_st* %103, %struct.bignum_ctx* %104), !dbg !393
RSINKGEP INSTRUCTION   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !389
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !390
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !391
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !392
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !386
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !389
REACHABLE SOURCE:   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !390
REACHABLE SOURCE:   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !391
REACHABLE SOURCE:   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !392
REACHABLE SOURCE:   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !386
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !389
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !390
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !391
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !392
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !386
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call162 = call i32 @BN_is_bit_set(%struct.bignum_st* %112, i32 %sub161), !dbg !429
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !424
REACHABLE SOURCE:   %112 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !424
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !424
Using taint reachable signature for:   %call176 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %125, %struct.bignum_st* %126, %struct.bignum_st* %127, %struct.bn_mont_ctx_st* %128, %struct.bignum_ctx* %129), !dbg !464
RSINKGEP INSTRUCTION   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !463
RSINKGEP INSTRUCTION   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !462
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !461
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !460
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !457
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !463
REACHABLE SOURCE:   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !462
REACHABLE SOURCE:   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !461
REACHABLE SOURCE:   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !460
REACHABLE SOURCE:   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !457
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !463
RSINKGEP INSTRUCTION   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !462
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !461
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !460
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !457
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call186 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %131, %struct.bignum_st* %132, %struct.bignum_st* %134, %struct.bn_mont_ctx_st* %135, %struct.bignum_ctx* %136), !dbg !479
RSINKGEP INSTRUCTION   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !477
RSINKGEP INSTRUCTION   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !476
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !478
RSINKGEP INSTRUCTION   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !473
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !471
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !477
REACHABLE SOURCE:   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !476
REACHABLE SOURCE:   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !478
REACHABLE SOURCE:   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !473
REACHABLE SOURCE:   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !471
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !477
RSINKGEP INSTRUCTION   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !476
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !478
RSINKGEP INSTRUCTION   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !473
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !471
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call196 = call i32 @BN_from_montgomery(%struct.bignum_st* %140, %struct.bignum_st* %141, %struct.bn_mont_ctx_st* %142, %struct.bignum_ctx* %143), !dbg !498
RSINKGEP INSTRUCTION   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !493
RSINKGEP INSTRUCTION   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !495
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !496
RSINKGEP INSTRUCTION   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !497
REACHABLE SOURCE:   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !493
REACHABLE SOURCE:   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !495
REACHABLE SOURCE:   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !496
REACHABLE SOURCE:   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !497
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !493
RSINKGEP INSTRUCTION   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !495
Added child elem: 	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !496
RSINKGEP INSTRUCTION   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !497
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %145), !dbg !508
RSINKGEP INSTRUCTION   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !507
REACHABLE SOURCE:   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !507
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !507
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %146), !dbg !510
RSINKGEP INSTRUCTION   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !509
REACHABLE SOURCE:   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !509
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !509
Creating ConsElem Map for :	Node0x7fa021d2cd20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2cd20:s0 -> Node0x7fa021d2c8a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2c8a0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d2cdb0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2cdb0:s0 -> Node0x7fa021d2c9c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2c9c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d2c9c0:s0 -> Node0x7fa021f28930;
Creating ConsElem Map for :	Node0x7fa021d2ce40 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2ce40:s0 -> Node0x7fa021d2ca50;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2ca50 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d2ced0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2ced0:s0 -> Node0x7fa021d2cae0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2cae0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d2cae0:s0 -> Node0x7fa021d2e380;
Creating ConsElem Map for :	Node0x7fa021d2cf60 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2cf60:s0 -> Node0x7fa021d2cb70;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7fa021d2cb70 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d2cff0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2cff0:s0 -> Node0x7fa021d2cc00;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7fa021d2cc00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d2d430 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2d930 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2df30 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2df30:s0 -> Node0x7fa021d2cc00;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7fa021d2cc00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d2cc90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2d330 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2da30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2da30:s0 -> Node0x7fa021d2e140;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2e140 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d2db70 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2db70:s0 -> Node0x7fa021d2e210;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !187
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !187
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x7fa021d2c9c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d2c9c0:s0 -> Node0x7fa021f28930;
Trying to find element at offset 0
Tainting at offset: 0
Created 32 constraint variable(s) for node of size 8
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !187
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !187
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x7fa021d2c9c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d2c9c0:s0 -> Node0x7fa021f28930;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %arrayidx27 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !194
[Source:]   %arrayidx27 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !194
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46270
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021e76fe0
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %28, i32 0, i32 3, !dbg !220
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %28, i32 0, i32 3, !dbg !220
StructType: allocation intermediate:   %28 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !218
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[16,20]0x7fa021d46490
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021f320d0
DSOURCEGEP INSTRUCTION   %arrayidx48 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !227
[Source:]   %arrayidx48 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !227
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46270
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021e76fe0
DSOURCEGEP INSTRUCTION   %arrayidx53 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !236
[Source:]   %arrayidx53 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !236
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46270
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021e76fe0
Creating ConsElem Map for :	Node0x7fa021d2dcb0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d2dcb0:s0 -> Node0x7fa021d2c9c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d2c9c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d2c9c0:s0 -> Node0x7fa021f28930;
DSOURCEGEP INSTRUCTION   %arrayidx61 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !249
[Source:]   %arrayidx61 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !249
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46270
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021e76fe0
Creating ConsElem Map for :	Node0x7fa021d2d730 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !266
[Source:]   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !266
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46270
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021e76fe0
DSOURCEGEP INSTRUCTION   %arrayidx82 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !267
[Source:]   %arrayidx82 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !267
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021d2ddf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021d2ddf0:s0 -> Node0x7fa021d2c9c0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46270
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021e76fe0
Creating ConsElem Map for :	Node0x7fa021d2d230 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2d130 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !290
[Sink:]   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !290
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !290
[Sink:]   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !290
DSOURCEGEP INSTRUCTION   %arrayidx93 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom92, !dbg !295
[Source:]   %arrayidx93 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom92, !dbg !295
DSOURCEGEP INSTRUCTION   %arrayidx96 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom95, !dbg !298
[Source:]   %arrayidx96 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom95, !dbg !298
Creating ConsElem Map for :	Node0x7fa021d2d830 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2d530 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d2d630 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %68, i32 0, i32 1, !dbg !316
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %68, i32 0, i32 1, !dbg !316
StructType: allocation intermediate:   %68 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !315
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[8,12]0x7fa021d46c40
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %d105 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %71, i32 0, i32 0, !dbg !322
[Source:]   %d105 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %71, i32 0, i32 0, !dbg !322
StructType: allocation intermediate:   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !321
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46bf0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %arrayidx106 = getelementptr inbounds i64, i64* %72, i64 %idxprom104, !dbg !321
[Source:]   %arrayidx106 = getelementptr inbounds i64, i64* %72, i64 %idxprom104, !dbg !321
DSOURCEGEP INSTRUCTION   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !334
[Source:]   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !334
StructType: allocation intermediate:   %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !333
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46bf0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %arrayidx114 = getelementptr inbounds i64, i64* %77, i64 0, !dbg !333
[Source:]   %arrayidx114 = getelementptr inbounds i64, i64* %77, i64 0, !dbg !333
 allocation intermediate:   %77 = load i64*, i64** %d113, align 8, !dbg !334
=>  %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !334
 allocation intermediate:   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !334
=>  %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !333
 allocation intermediate:   %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !333
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46bf0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x7fa021e5c540
DSOURCEGEP INSTRUCTION   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !337
[Source:]   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !337
StructType: allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !336
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  : CMRE: elem 0:default:0x7fa021d442c0
DSINKGEP INSTRUCTION   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !336
[Sink:]   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !336
 allocation intermediate:   %80 = load i64*, i64** %d116, align 8, !dbg !337
=>  %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !337
 allocation intermediate:   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !337
=>  %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !336
 allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !336
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !336
[Sink:]   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !336
 allocation intermediate:   %80 = load i64*, i64** %d116, align 8, !dbg !337
=>  %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !337
 allocation intermediate:   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !337
=>  %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !336
 allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !336
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021d2e550 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %d122 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %84, i32 0, i32 0, !dbg !349
[Source:]   %d122 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %84, i32 0, i32 0, !dbg !349
StructType: allocation intermediate:   %84 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !348
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x7fa021d46bf0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %arrayidx123 = getelementptr inbounds i64, i64* %85, i64 %idxprom121, !dbg !348
[Source:]   %arrayidx123 = getelementptr inbounds i64, i64* %85, i64 %idxprom121, !dbg !348
DSOURCEGEP INSTRUCTION   %d126 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %88, i32 0, i32 0, !dbg !353
[Source:]   %d126 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %88, i32 0, i32 0, !dbg !353
StructType: allocation intermediate:   %88 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !352
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  : CMRE: elem 0:default:0x7fa021d442c0
DSINKGEP INSTRUCTION   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !352
[Sink:]   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !352
DSINKGEP INSTRUCTION   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !352
[Sink:]   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !352
DSINKGEP INSTRUCTION   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !359
[Sink:]   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !359
StructType:::IS STRUCT TY:: allocation intermediate:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !358
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !359
[Sink:]   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !359
StructType:::IS STRUCT TY:: allocation intermediate:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !358
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7fa021d2e210 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x7fa021d2e210:s0 -> Node0x7fa021d2e550;
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %arrayidx185 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom184, !dbg !476
[Source:]   %arrayidx185 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom184, !dbg !476
Running on BN_mod_exp_recp in context [BN_mod_exp ]
Using taint reachable signature for:   %call = call i32 @BN_get_flags(%struct.bignum_st* %0, i32 4), !dbg !131
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !129
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !129
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !129
Using taint reachable signature for:   %call1 = call i32 @BN_get_flags(%struct.bignum_st* %1, i32 4), !dbg !135
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !134
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !134
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !134
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call4 = call i32 @BN_get_flags(%struct.bignum_st* %2, i32 4), !dbg !139
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !138
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !138
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !138
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 125, i32 66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 185), !dbg !142
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call6 = call i32 @BN_num_bits(%struct.bignum_st* %3), !dbg !146
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !145
REACHABLE SOURCE:   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !145
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !145
Using taint reachable signature for:   %call9 = call i32 @BN_is_one(%struct.bignum_st* %5), !dbg !155
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !152
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !152
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !152
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call11 = call i32 @BN_set_word(%struct.bignum_st* %6, i64 0), !dbg !159
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !159
REACHABLE SOURCE:   %6 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !159
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !159
Using taint reachable signature for:   %call12 = call i32 @BN_set_word(%struct.bignum_st* %7, i64 1), !dbg !161
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !161
REACHABLE SOURCE:   %7 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !161
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !161
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %9), !dbg !167
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !166
REACHABLE SOURCE:   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !166
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !166
Using taint reachable signature for:   %call15 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %10), !dbg !169
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !168
REACHABLE SOURCE:   %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !168
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !168
Using taint reachable signature for:   %call16 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %11), !dbg !172
RSINKGEP INSTRUCTION   %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !171
REACHABLE SOURCE:   %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !171
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !171
Using taint reachable signature for:   call void @BN_RECP_CTX_init(%struct.bn_recp_ctx_st* %recp), !dbg !181
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Creating ConsElem Map for :	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Using taint reachable signature for:   %call25 = call %struct.bignum_st* @BN_copy(%struct.bignum_st* %16, %struct.bignum_st* %17), !dbg !190
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !189
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !186
Creating ConsElem Map for :	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
REACHABLE SOURCE:   %17 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !189
REACHABLE SOURCE:   %16 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !186
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !189
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !186
Using taint reachable signature for:   %call30 = call i32 @BN_RECP_CTX_set(%struct.bn_recp_ctx_st* %recp, %struct.bignum_st* %19, %struct.bignum_ctx* %20), !dbg !199
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !196
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !198
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %19 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !196
REACHABLE SOURCE:   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !198
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !196
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !198
Using taint reachable signature for:   %call35 = call i32 @BN_RECP_CTX_set(%struct.bn_recp_ctx_st* %recp, %struct.bignum_st* %21, %struct.bignum_ctx* %22), !dbg !208
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !204
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %22 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !207
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %21 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !204
REACHABLE SOURCE:   %22 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !207
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !204
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %22 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !207
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Using taint reachable signature for:   %call41 = call i32 @BN_nnmod(%struct.bignum_st* %23, %struct.bignum_st* %24, %struct.bignum_st* %25, %struct.bignum_ctx* %26), !dbg !217
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !216
RSINKGEP INSTRUCTION   %25 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !215
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %24 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !214
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %23 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx40, align 8, !dbg !212
Creating ConsElem Map for :	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %26 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !216
REACHABLE SOURCE:   %25 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !215
REACHABLE SOURCE:   %24 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !214
REACHABLE SOURCE:   %23 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx40, align 8, !dbg !212
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !216
RSINKGEP INSTRUCTION   %25 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !215
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %24 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !214
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %23 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx40, align 8, !dbg !212
Using taint reachable signature for:   %call46 = call i32 @BN_is_zero(%struct.bignum_st* %27), !dbg !222
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx45, align 8, !dbg !220
REACHABLE SOURCE:   %27 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx45, align 8, !dbg !220
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx45, align 8, !dbg !220
Using taint reachable signature for:   %call49 = call i32 @BN_set_word(%struct.bignum_st* %28, i64 0), !dbg !224
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !224
REACHABLE SOURCE:   %28 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !224
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !224
Using taint reachable signature for:   %call68 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %34, %struct.bignum_st* %35, %struct.bignum_st* %36, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %37), !dbg !240
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx66, align 8, !dbg !237
RSINKGEP INSTRUCTION   %36 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx67, align 8, !dbg !238
RSINKGEP INSTRUCTION   %37 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !239
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !234
REACHABLE SOURCE:   %35 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx66, align 8, !dbg !237
REACHABLE SOURCE:   %36 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx67, align 8, !dbg !238
REACHABLE SOURCE:   %37 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !239
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %34 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !234
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx66, align 8, !dbg !237
RSINKGEP INSTRUCTION   %36 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx67, align 8, !dbg !238
RSINKGEP INSTRUCTION   %37 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !239
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !234
Using taint reachable signature for:   %call73 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %41), !dbg !258
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !255
REACHABLE SOURCE:   %41 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !255
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !255
Using taint reachable signature for:   %call82 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %44, %struct.bignum_st* %46, %struct.bignum_st* %47, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %48), !dbg !271
RSINKGEP INSTRUCTION   %44 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx78, align 8, !dbg !265
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !269
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !270
RSINKGEP INSTRUCTION   %46 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !268
REACHABLE SOURCE:   %44 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx78, align 8, !dbg !265
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %47 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !269
REACHABLE SOURCE:   %48 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !270
REACHABLE SOURCE:   %46 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !268
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %44 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx78, align 8, !dbg !265
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !269
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !270
RSINKGEP INSTRUCTION   %46 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !268
Using taint reachable signature for:   %call88 = call i32 @BN_set_word(%struct.bignum_st* %51, i64 1), !dbg !284
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !284
REACHABLE SOURCE:   %51 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !284
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !284
Using taint reachable signature for:   %call93 = call i32 @BN_is_bit_set(%struct.bignum_st* %52, i32 %53), !dbg !295
RSINKGEP INSTRUCTION   %52 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !289
REACHABLE SOURCE:   %52 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !289
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %52 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !289
Using taint reachable signature for:   %call98 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %55, %struct.bignum_st* %56, %struct.bignum_st* %57, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %58), !dbg !307
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !306
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !305
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !304
RSINKGEP INSTRUCTION   %55 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !302
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %58 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !306
REACHABLE SOURCE:   %57 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !305
REACHABLE SOURCE:   %56 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !304
REACHABLE SOURCE:   %55 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !302
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !306
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !305
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !304
RSINKGEP INSTRUCTION   %55 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !302
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Using taint reachable signature for:   %call115 = call i32 @BN_is_bit_set(%struct.bignum_st* %66, i32 %sub114), !dbg !343
RSINKGEP INSTRUCTION   %66 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !338
REACHABLE SOURCE:   %66 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !338
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %66 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !338
Using taint reachable signature for:   %call129 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %79, %struct.bignum_st* %80, %struct.bignum_st* %81, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %82), !dbg !377
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !371
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !374
RSINKGEP INSTRUCTION   %82 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !376
RSINKGEP INSTRUCTION   %81 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !375
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !371
REACHABLE SOURCE:   %80 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !374
REACHABLE SOURCE:   %82 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !376
REACHABLE SOURCE:   %81 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !375
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !371
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !374
RSINKGEP INSTRUCTION   %82 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !376
RSINKGEP INSTRUCTION   %81 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !375
Using taint reachable signature for:   %call139 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %84, %struct.bignum_st* %85, %struct.bignum_st* %87, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %88), !dbg !391
RSINKGEP INSTRUCTION   %87 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx138, align 8, !dbg !389
RSINKGEP INSTRUCTION   %88 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !390
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %84 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !384
RSINKGEP INSTRUCTION   %85 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !386
REACHABLE SOURCE:   %87 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx138, align 8, !dbg !389
REACHABLE SOURCE:   %88 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !390
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %84 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !384
REACHABLE SOURCE:   %85 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !386
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %87 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx138, align 8, !dbg !389
RSINKGEP INSTRUCTION   %88 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !390
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %84 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !384
RSINKGEP INSTRUCTION   %85 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !386
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %92), !dbg !408
RSINKGEP INSTRUCTION   %92 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !407
REACHABLE SOURCE:   %92 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !407
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %92 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !407
Using taint reachable signature for:   call void @BN_RECP_CTX_free(%struct.bn_recp_ctx_st* %recp), !dbg !409
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7fa021f228a0 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Creating ConsElem Map for :	Node0x7fa021f176e0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021f176e0:s0 -> Node0x7fa021f1d4c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021f1d4c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021f17820 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021f17820:s0 -> Node0x7fa021f1d5e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021f1d5e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021f1d5e0:s0 -> Node0x7fa021f28810;
Creating ConsElem Map for :	Node0x7fa021f17960 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021f17960:s0 -> Node0x7fa021f1d670;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021f1d670 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021f17aa0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021f17aa0:s0 -> Node0x7fa021f1d740;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021f1d740 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021f1d740:s0 -> Node0x7fa021f288a0;
Creating ConsElem Map for :	Node0x7fa021f17be0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021f17be0:s0 -> Node0x7fa021f1d840;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7fa021f1d840 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021f22020 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f22520 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f1d910 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f21f20 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f22620 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021f22620:s0 -> Node0x7fa021f22a40;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !173
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !173
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
Created 32 constraint variable(s) for node of size 8
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !173
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !173
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021f22b40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %arrayidx19 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !178
[Source:]   %arrayidx19 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !178
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021d5d380
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7fa021e867b0
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %14, i32 0, i32 3, !dbg !184
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %14, i32 0, i32 3, !dbg !184
StructType: allocation intermediate:   %14 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !182
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[16,20]0x7fa021d5abf0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSINKGEP INSTRUCTION   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !194
[Sink:]   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !194
StructType:::IS STRUCT TY:: allocation intermediate:   %18 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !193
=>  %aa = alloca %struct.bignum_st*, align 8
FINAL:   %aa = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !194
[Sink:]   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !194
StructType:::IS STRUCT TY:: allocation intermediate:   %18 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !193
=>  %aa = alloca %struct.bignum_st*, align 8
FINAL:   %aa = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7fa021f22a40 [shape=record,shape=Mrecord,label="{16: i32,  : ME\n}"];
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %arrayidx40 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !212
[Source:]   %arrayidx40 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !212
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021d5d380
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7fa021e867b0
DSOURCEGEP INSTRUCTION   %arrayidx45 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !220
[Source:]   %arrayidx45 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !220
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021d5d380
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7fa021e867b0
Creating ConsElem Map for :	Node0x7fa021f22320 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx66 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !237
[Source:]   %arrayidx66 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !237
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021d5d380
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7fa021e867b0
DSOURCEGEP INSTRUCTION   %arrayidx67 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !238
[Source:]   %arrayidx67 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !238
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7fa021f22760 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7fa021f22760:s0 -> Node0x7fa021f22b40;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7fa021d5d380
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7fa021e867b0
Creating ConsElem Map for :	Node0x7fa021f21e20 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f21d50 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !260
[Sink:]   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !260
DSINKGEP INSTRUCTION   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !260
[Sink:]   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !260
DSOURCEGEP INSTRUCTION   %arrayidx78 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom77, !dbg !265
[Source:]   %arrayidx78 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom77, !dbg !265
DSOURCEGEP INSTRUCTION   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom80, !dbg !268
[Source:]   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom80, !dbg !268
Creating ConsElem Map for :	Node0x7fa021f22420 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f22120 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f22220 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx138 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom137, !dbg !389
[Source:]   %arrayidx138 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom137, !dbg !389
Running on BN_mod_exp_mont_consttime in context [BN_mod_exp_mont ]
Using taint reachable signature for:   %call = call i32 @BN_is_odd(%struct.bignum_st* %0), !dbg !124
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !122
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !122
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !122
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 124, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 622), !dbg !126
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call3 = call i32 @BN_num_bits(%struct.bignum_st* %3), !dbg !133
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !132
REACHABLE SOURCE:   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !132
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !132
Using taint reachable signature for:   %call5 = call i32 @BN_is_one(%struct.bignum_st* %5), !dbg !142
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !139
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !139
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !139
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call8 = call i32 @BN_set_word(%struct.bignum_st* %6, i64 0), !dbg !146
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !146
REACHABLE SOURCE:   %6 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !146
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !146
Using taint reachable signature for:   %call9 = call i32 @BN_set_word(%struct.bignum_st* %7, i64 1), !dbg !148
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !148
REACHABLE SOURCE:   %7 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !148
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !148
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %9), !dbg !154
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !153
REACHABLE SOURCE:   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !153
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !153
Using taint reachable signature for:   %call15 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !162
Using taint reachable signature for:   %call19 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %12, %struct.bignum_st* %13, %struct.bignum_ctx* %14), !dbg !173
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !172
RSINKGEP INSTRUCTION   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !169
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !171
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !172
REACHABLE SOURCE:   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !169
REACHABLE SOURCE:   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !171
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !172
RSINKGEP INSTRUCTION   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !169
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !171
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call56 = call i8* @CRYPTO_malloc(i64 %conv55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 718), !dbg !203
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Unsupported intrinsic: llvm.objectsize
Using taint reachable signature for:   %call63 = call i8* @__memset_chk(i8* %34, i32 0, i64 %conv62, i64 %37) #5, !dbg !211
RSINKGEP INSTRUCTION   %34 = load i8*, i8** %powerbuf, align 8, !dbg !211
Creating ConsElem Map for :	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %34 = load i8*, i8** %powerbuf, align 8, !dbg !211
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %34 = load i8*, i8** %powerbuf, align 8, !dbg !211
Using taint reachable signature for:   %call102 = call %struct.bignum_st* @BN_value_one(), !dbg !285
Using taint reachable signature for:   %call103 = call i32 @BN_to_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %call102, %struct.bn_mont_ctx_st* %64, %struct.bignum_ctx* %65), !dbg !289
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !287
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !288
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %call102 = call %struct.bignum_st* @BN_value_one(), !dbg !285
Creating ConsElem Map for :	Node0x7fa021d33c40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
EDGE: [0: tymap-size 1]:i64
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !287
REACHABLE SOURCE:   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !288
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %call102 = call %struct.bignum_st* @BN_value_one(), !dbg !285
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021d33c40 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !287
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !288
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %call102 = call %struct.bignum_st* @BN_value_one(), !dbg !285
Using taint reachable signature for:   %call110 = call i32 @BN_ucmp(%struct.bignum_st* %68, %struct.bignum_st* %69), !dbg !298
RSINKGEP INSTRUCTION   %69 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !297
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %68 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !296
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %69 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !297
REACHABLE SOURCE:   %68 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !296
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %69 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !297
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %68 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !296
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call114 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %am, %struct.bignum_st* %70, %struct.bignum_st* %71, %struct.bignum_ctx* %72), !dbg !301
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !301
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !301
RSINKGEP INSTRUCTION   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !301
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %70 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !301
REACHABLE SOURCE:   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !301
REACHABLE SOURCE:   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !301
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !301
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !301
RSINKGEP INSTRUCTION   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !301
Added child elem: 	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call118 = call i32 @BN_to_montgomery(%struct.bignum_st* %am, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %73, %struct.bignum_ctx* %74), !dbg !309
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !308
RSINKGEP INSTRUCTION   %73 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !306
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %74 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !308
REACHABLE SOURCE:   %73 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !306
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !308
RSINKGEP INSTRUCTION   %73 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !306
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call123 = call i32 @BN_to_montgomery(%struct.bignum_st* %am, %struct.bignum_st* %75, %struct.bn_mont_ctx_st* %76, %struct.bignum_ctx* %77), !dbg !317
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !316
RSINKGEP INSTRUCTION   %76 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !315
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !313
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %77 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !316
REACHABLE SOURCE:   %76 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !315
REACHABLE SOURCE:   %75 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !313
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !316
RSINKGEP INSTRUCTION   %76 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !315
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !313
Added child elem: 	Node0x7fa021f289c0 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call139 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %85, %struct.bignum_ctx* %86), !dbg !343
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !339
RSINKGEP INSTRUCTION   %86 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !342
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !339
REACHABLE SOURCE:   %86 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !342
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !339
RSINKGEP INSTRUCTION   %86 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !342
Using taint reachable signature for:   %call151 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %92, %struct.bignum_ctx* %93), !dbg !365
RSINKGEP INSTRUCTION   %92 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !361
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %92 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !361
REACHABLE SOURCE:   %93 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %92 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !361
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call168 = call i32 @BN_is_bit_set(%struct.bignum_st* %104, i32 %105), !dbg !396
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !394
REACHABLE SOURCE:   %104 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !394
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !394
Using taint reachable signature for:   %call184 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %115, %struct.bignum_ctx* %116), !dbg !428
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %115 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !424
RSINKGEP INSTRUCTION   %116 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !427
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %115 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !424
REACHABLE SOURCE:   %116 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !427
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %115 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !424
RSINKGEP INSTRUCTION   %116 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !427
Using taint reachable signature for:   %call189 = call i32 @BN_is_bit_set(%struct.bignum_st* %118, i32 %119), !dbg !435
RSINKGEP INSTRUCTION   %118 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !433
REACHABLE SOURCE:   %118 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !433
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %118 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !433
Using taint reachable signature for:   %call199 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %126, %struct.bignum_ctx* %127), !dbg !453
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !452
RSINKGEP INSTRUCTION   %126 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !450
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %127 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !452
REACHABLE SOURCE:   %126 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !450
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !452
RSINKGEP INSTRUCTION   %126 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !450
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call203 = call i32 @BN_from_montgomery(%struct.bignum_st* %128, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %129, %struct.bignum_ctx* %130), !dbg !460
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %128 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !456
RSINKGEP INSTRUCTION   %130 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !459
RSINKGEP INSTRUCTION   %129 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !458
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %128 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !456
REACHABLE SOURCE:   %130 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !459
REACHABLE SOURCE:   %129 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !458
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %128 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !456
RSINKGEP INSTRUCTION   %130 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !459
RSINKGEP INSTRUCTION   %129 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !458
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %132), !dbg !470
RSINKGEP INSTRUCTION   %132 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !469
REACHABLE SOURCE:   %132 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !469
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %132 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !469
Using taint reachable signature for:   call void @OPENSSL_cleanse(i8* %134, i64 %conv214), !dbg !478
RSINKGEP INSTRUCTION   %134 = load i8*, i8** %powerbuf, align 8, !dbg !475
REACHABLE SOURCE:   %134 = load i8*, i8** %powerbuf, align 8, !dbg !475
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %134 = load i8*, i8** %powerbuf, align 8, !dbg !475
Using taint reachable signature for:   call void @CRYPTO_free(i8* %136, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1091), !dbg !479
RSINKGEP INSTRUCTION   %136 = load i8*, i8** %powerbufFree, align 8, !dbg !479
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE:   %136 = load i8*, i8** %powerbufFree, align 8, !dbg !479
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x7fa021f26420 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %136 = load i8*, i8** %powerbufFree, align 8, !dbg !479
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %137), !dbg !482
RSINKGEP INSTRUCTION   %137 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !481
REACHABLE SOURCE:   %137 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !481
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %137 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !481
Creating ConsElem Map for :	Node0x7fa021d32690 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d32690:s0 -> Node0x7fa021d32210;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d32210 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d32720 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d32720:s0 -> Node0x7fa021d32330;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
Creating ConsElem Map for :	Node0x7fa021d327b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d327b0:s0 -> Node0x7fa021d323c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d32840 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d32840:s0 -> Node0x7fa021d32450;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Creating ConsElem Map for :	Node0x7fa021d328d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d328d0:s0 -> Node0x7fa021d324e0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7fa021d324e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d32960 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d32960:s0 -> Node0x7fa021d32570;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d32b10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d32f10 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d32f10:s0 -> Node0x7fa021d32570;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7fa021d32570 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7fa021d33150 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d33150:s0 -> Node0x7fa021d339a0;
EDGE: [0: tymap-size 1]:i8
	Node0x7fa021d339a0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n}"];
Creating ConsElem Map for :	Node0x7fa021d33290 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d33390 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d33390:s0 -> Node0x7fa021d339a0;
EDGE: [0: tymap-size 1]:i8
	Node0x7fa021d339a0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n}"];
Creating ConsElem Map for :	Node0x7fa021d32600 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !130
[Source:]   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !130
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !129
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
Creating ConsElem Map for :	Node0x7fa021d32e10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d32a80 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d32c10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d33050 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !225
[Sink:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !225
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !225
[Sink:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !225
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %d73 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !227
[Source:]   %d73 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !227
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
CONSTRAINING: COLLAPSED: SCMRE2: elem 0:default:0x7fa021d68100
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSINKGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !230
[Sink:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !230
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !230
[Sink:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !230
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !232
[Sink:]   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !232
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !232
[Sink:]   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !232
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !234
[Sink:]   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !234
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !234
[Sink:]   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !234
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !237
[Sink:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !237
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !237
[Sink:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !237
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !239
[Sink:]   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !239
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !239
[Sink:]   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !239
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !241
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !241
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !241
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !241
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !243
[Sink:]   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !243
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !243
[Sink:]   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !243
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !245
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !245
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !245
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !245
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !247
[Sink:]   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !247
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !247
[Sink:]   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !247
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %d82 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 0, !dbg !253
[Source:]   %d82 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 0, !dbg !253
StructType: allocation intermediate:   %47 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !252
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %48, i64 %idxprom, !dbg !252
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %48, i64 %idxprom, !dbg !252
DSOURCEGEP INSTRUCTION   %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !258
[Source:]   %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !258
StructType: allocation intermediate:   %50 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !256
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %arrayidx87 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !256
[Source:]   %arrayidx87 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !256
 allocation intermediate:   %51 = load i64*, i64** %d86, align 8, !dbg !258
=>  %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !258
 allocation intermediate:   %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !258
=>  %50 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !256
 allocation intermediate:   %50 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !256
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x7fa021e5c540
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !260
[Source:]   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !260
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
CONSTRAINING: COLLAPSED: SCMRE2: elem 0:default:0x7fa021d68100
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSINKGEP INSTRUCTION   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !261
[Sink:]   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !261
 allocation intermediate:   %53 = load i64*, i64** %d89, align 8, !dbg !260
=>  %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !260
 allocation intermediate:   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !260
=>  %tmp = alloca %struct.bignum_st, align 8
FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !261
[Sink:]   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !261
 allocation intermediate:   %53 = load i64*, i64** %d89, align 8, !dbg !260
=>  %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !260
 allocation intermediate:   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !260
=>  %tmp = alloca %struct.bignum_st, align 8
FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
Creating ConsElem Map for :	Node0x7fa021d329f0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d94 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %57, i32 0, i32 0, !dbg !273
[Source:]   %d94 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %57, i32 0, i32 0, !dbg !273
StructType: allocation intermediate:   %57 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !272
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021e5c8e0
DSOURCEGEP INSTRUCTION   %arrayidx95 = getelementptr inbounds i64, i64* %58, i64 %idxprom93, !dbg !272
[Source:]   %arrayidx95 = getelementptr inbounds i64, i64* %58, i64 %idxprom93, !dbg !272
DSOURCEGEP INSTRUCTION   %d98 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !277
[Source:]   %d98 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !277
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
CONSTRAINING: COLLAPSED: SCMRE2: elem 0:default:0x7fa021d68100
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSINKGEP INSTRUCTION   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !276
[Sink:]   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !276
DSINKGEP INSTRUCTION   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !276
[Sink:]   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !276
DSINKGEP INSTRUCTION   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !282
[Sink:]   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !282
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !282
[Sink:]   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !282
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %neg108 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %66, i32 0, i32 3, !dbg !294
[Source:]   %neg108 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %66, i32 0, i32 3, !dbg !294
StructType: allocation intermediate:   %66 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !292
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7fa021d32330 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32330:s0 -> Node0x7fa021f289c0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x7fa021f320d0
Creating ConsElem Map for :	Node0x7fa021d32d10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on MOD_EXP_CTIME_COPY_TO_PREBUF in context [BN_mod_exp_mont_consttime ]
Creating ConsElem Map for :	Node0x7fa021d37250 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d37250:s0 -> Node0x7fa021d370a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021d370a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d370a0:s0 -> Node0x7fa021f28b70;
Creating ConsElem Map for :	Node0x7fa021d372e0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d37370 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d37370:s0 -> Node0x7fa021f28b70;
EDGE: [0: tymap-size 1]:i8
	Node0x7fa021f28b70 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7fa021d37400 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d37490 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d37640 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d376d0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021d376d0:s0 -> Node0x7fa021f28b70;
EDGE: [0: tymap-size 1]:i64
	Node0x7fa021f28b70 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !109
[Source:]   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !109
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !108
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7fa021d7b6a0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSOURCEGEP INSTRUCTION   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !113
[Source:]   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !113
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !112
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7fa021d7b6a0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
Creating ConsElem Map for :	Node0x7fa021d37520 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021d375b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 0, !dbg !129
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 0, !dbg !129
StructType: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !128
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7fa021d7b600
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %13, i64 %idxprom, !dbg !128
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %13, i64 %idxprom, !dbg !128
DSINKGEP INSTRUCTION   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !131
[Sink:]   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !131
DSINKGEP INSTRUCTION   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !131
[Sink:]   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !131
Running on MOD_EXP_CTIME_COPY_FROM_PREBUF in context [BN_mod_exp_mont_consttime ]
Using taint reachable signature for:   %call = call %struct.bignum_st* @bn_wexpand(%struct.bignum_st* %3, i32 %4), !dbg !109
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !106
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %3 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !106
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !106
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   call void @bn_correct_top(%struct.bignum_st* %70), !dbg !285
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !284
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %70 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !284
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !284
Added child elem: 	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7fa021e588b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021e588b0:s0 -> Node0x7fa021e584f0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Creating ConsElem Map for :	Node0x7fa021e589f0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e58af0 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021e58af0:s0 -> Node0x7fa021f28ae0;
EDGE: [0: tymap-size 1]:i8
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7fa021e58c30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e58d30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59030 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59130 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7fa021e59130:s0 -> Node0x7fa021f28ae0;
EDGE: [0: tymap-size 1]:i64
	Node0x7fa021f28ae0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7fa021e587b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e58e30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59270 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e58f30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %11, i64 %idxprom, !dbg !139
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %11, i64 %idxprom, !dbg !139
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %19, i32 0, i32 0, !dbg !154
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %19, i32 0, i32 0, !dbg !154
StructType: allocation intermediate:   %19 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !153
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !153
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !153
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !153
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !153
Creating ConsElem Map for :	Node0x7fa021e59370 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59470 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59570 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59670 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59770 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021e59870 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 %idxprom44, !dbg !232
[Source:]   %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 %idxprom44, !dbg !232
DSOURCEGEP INSTRUCTION   %arrayidx50 = getelementptr inbounds i64, i64* %44, i64 %idxprom49, !dbg !239
[Source:]   %arrayidx50 = getelementptr inbounds i64, i64* %44, i64 %idxprom49, !dbg !239
DSOURCEGEP INSTRUCTION   %arrayidx56 = getelementptr inbounds i64, i64* %49, i64 %idxprom55, !dbg !247
[Source:]   %arrayidx56 = getelementptr inbounds i64, i64* %49, i64 %idxprom55, !dbg !247
DSOURCEGEP INSTRUCTION   %arrayidx62 = getelementptr inbounds i64, i64* %54, i64 %idxprom61, !dbg !255
[Source:]   %arrayidx62 = getelementptr inbounds i64, i64* %54, i64 %idxprom61, !dbg !255
DSOURCEGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %63, i32 0, i32 0, !dbg !273
[Source:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %63, i32 0, i32 0, !dbg !273
StructType: allocation intermediate:   %63 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !272
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x7fa021e8fd60
DSINKGEP INSTRUCTION   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !272
[Sink:]   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !272
DSINKGEP INSTRUCTION   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !272
[Sink:]   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !272
DSINKGEP INSTRUCTION   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !282
[Sink:]   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !282
StructType:::IS STRUCT TY:: allocation intermediate:   %69 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !281
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !282
[Sink:]   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !282
StructType:::IS STRUCT TY:: allocation intermediate:   %69 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !281
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7fa021e584f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021e584f0:s0 -> Node0x7fa021f28ae0;
Trying to find element at offset 8
Running on constant_time_eq_int in context [MOD_EXP_CTIME_COPY_FROM_PREBUF ]
Creating ConsElem Map for :	Node0x7fa021f19a20 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f19b40 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_eq in context [constant_time_eq_int ]
Creating ConsElem Map for :	Node0x7fa021f1dd50 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7fa021f1de70 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_is_zero in context [constant_time_eq ]
Creating ConsElem Map for :	Node0x7fa021f1e140 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_msb in context [constant_time_is_zero ]
Creating ConsElem Map for :	Node0x7fa021f1e460 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7fa021d323c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x7fa021d23a00
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x7fa021d32450 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7fa021d32450:s0 -> Node0x7fa021d33b40;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7fa021d33b40 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
Removing values tied to bits
Size of vector 8809
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Size of vector 8808
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Size of vector 8807
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Size of vector 8803
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Removing values tied to bits
Size of vector 8802
Constraint to find 0: i32,  : SCMR: elem 0:default:
Size of vector 8802
Constraint to find 0: i32,  : SCMR: elem 0:default:
Size of vector 8802
Constraint to find 0: i32,  : SCMR: elem 0:default:
Size of vector 8802
Constraint to find 0: i32,  : SCMR: elem 0:default:
#--------------Results------------------
bn_exp.c line 144
bn_exp.c line 146
bn_exp.c line 147
bn_exp.c line 148
bn_exp.c line 149
bn_exp.c line 146
bn_exp.c line 1124
bn_exp.c line 1123
bn_exp.c line 1133
bn_exp.c line 1137
bn_exp.c line 1143
bn_exp.c line 1151
bn_exp.c line 1161
bn_exp.c line 1161
bn_exp.c line 1161
bn_exp.c line 1169
bn_exp.c line 1182
bn_exp.c line 1184
bn_exp.c line 1184
bn_exp.c line 1188
bn_exp.c line 1188
bn_exp.c line 1195
bn_exp.c line 1200
bn_exp.c line 1202
bn_exp.c line 1204
bn_exp.c line 1204
bn_exp.c line 1208
bn_exp.c line 1208
bn_exp.c line 1218
bn_exp.c line 1220
bn_exp.c line 1220
bn_exp.c line 1224
bn_exp.c line 1224
bn_exp.c line 1230
bn_exp.c line 1233
bn_exp.c line 318
bn_exp.c line 319
bn_exp.c line 317
bn_exp.c line 327
bn_exp.c line 334
bn_exp.c line 347
bn_exp.c line 347
bn_exp.c line 347
bn_exp.c line 359
bn_exp.c line 363
bn_exp.c line 363
bn_exp.c line 364
bn_exp.c line 369
bn_exp.c line 374
bn_exp.c line 379
bn_exp.c line 382
bn_exp.c line 383
bn_exp.c line 383
bn_exp.c line 398
bn_exp.c line 399
bn_exp.c line 403
bn_exp.c line 413
bn_exp.c line 416
bn_exp.c line 418
bn_exp.c line 437
bn_exp.c line 448
bn_exp.c line 449
bn_exp.c line 454
bn_exp.c line 475
bn_exp.c line 182
bn_exp.c line 183
bn_exp.c line 181
bn_exp.c line 192
bn_exp.c line 204
bn_exp.c line 204
bn_exp.c line 208
bn_exp.c line 210
bn_exp.c line 213
bn_exp.c line 216
bn_exp.c line 220
bn_exp.c line 222
bn_exp.c line 230
bn_exp.c line 234
bn_exp.c line 234
bn_exp.c line 247
bn_exp.c line 251
bn_exp.c line 253
bn_exp.c line 271
bn_exp.c line 283
bn_exp.c line 288
bn_exp.c line 621
bn_exp.c line 631
bn_exp.c line 651
bn_exp.c line 709
bn_exp.c line 712
bn_exp.c line 717
bn_exp.c line 726
bn_exp.c line 740
bn_exp.c line 743
bn_exp.c line 748
bn_exp.c line 752
bn_exp.c line 752
bn_exp.c line 753
bn_exp.c line 755
bn_exp.c line 757
bn_exp.c line 1024
bn_exp.c line 1031
bn_exp.c line 1055
bn_exp.c line 1068
bn_exp.c line 1083
bn_exp.c line 1089
bn_exp.c line 522
bn_exp.c line 525
bn_exp.c line 540
bn_exp.c line 544
bn_exp.c line 566
#--------------Statistics----------------
:: Tainted Branches: 111
:: Branch Instructions: 498
:: Conditional Branches: 218
:: Vulnerable Branches: 22.29% [111/498]
