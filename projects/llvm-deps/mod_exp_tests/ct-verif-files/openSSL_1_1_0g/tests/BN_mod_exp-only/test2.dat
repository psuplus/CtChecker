Args: ../../../..//Debug+Asserts/bin/opt -load ../../../..//projects/poolalloc/Debug+Asserts/lib/LLVMDataStructure.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Constraints.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/sourcesinkanalysis.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/pointstointerface.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Deps.dylib -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Security.dylib -vulnerablebranch -debug 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
Merged 13 call nodes.
Merged 5 call nodes.
Merged 6 call nodes.
Merged 4 call nodes.
Merged 6 call nodes.
Merged 5 call nodes.
Merged 1 call nodes.
Attempting to merge two chunks of the same node together!
Merged 3 call nodes.
Removing llvm.dbg.declare from bn_free_d
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from BN_GENCB_get_arg
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_free
Removing llvm.dbg.declare from BN_GENCB_new
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_is_negative
Removing llvm.dbg.declare from BN_is_odd
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_one
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_zero_ex
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_get_word
Removing llvm.dbg.declare from BN_clear
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from BN_secure_new
Removing llvm.dbg.declare from BN_new
Removing llvm.dbg.declare from bn_init
Removing llvm.dbg.declare from BN_free
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_is_zero
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits_word
Removing llvm.dbg.declare from BN_get_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.objectsize.i64.p0i8 from bn2binpad
Removing llvm.objectsize.i64.p0i8 from BN_bn2lebinpad
Removing llvm.objectsize.i64.p0i8 from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from bn_free_d
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from BN_GENCB_get_arg
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_free
Removing llvm.dbg.declare from BN_GENCB_new
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_is_negative
Removing llvm.dbg.declare from BN_is_odd
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_one
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_zero_ex
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_get_word
Removing llvm.dbg.declare from BN_clear
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from BN_secure_new
Removing llvm.dbg.declare from BN_new
Removing llvm.dbg.declare from bn_init
Removing llvm.dbg.declare from BN_free
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_is_zero
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits_word
Removing llvm.dbg.declare from BN_get_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Visiting single node SCC #: 3 fn: BN_num_bits_word
  [BU] Calculating graph for: BN_num_bits_word
  [BU] Done inlining: BN_num_bits_word [3+0]
Visiting single node SCC #: 4 fn: BN_is_zero
  [BU] Calculating graph for: BN_is_zero
  [BU] Done inlining: BN_is_zero [2+0]
Visiting single node SCC #: 2 fn: BN_num_bits
  [BU] Calculating graph for: BN_num_bits
    Inlining graph for BN_is_zero[2+0] into 'BN_num_bits' [5+0]
  [BU] Done inlining: BN_num_bits [5+0]
Visiting single node SCC #: 5 fn: BN_get_flags
  [BU] Calculating graph for: BN_get_flags
  [BU] Done inlining: BN_get_flags [3+0]
Visiting single node SCC #: 9 fn: bn_expand_internal
  [BU] Calculating graph for: bn_expand_internal
    Inlining graph for BN_get_flags[3+0] into 'bn_expand_internal' [15+0]
  [BU] Done inlining: bn_expand_internal [15+0]
Visiting single node SCC #: 10 fn: bn_free_d
  [BU] Calculating graph for: bn_free_d
    Inlining graph for BN_get_flags[3+0] into 'bn_free_d' [4+0]
  [BU] Done inlining: bn_free_d [4+0]
Visiting single node SCC #: 8 fn: bn_expand2
  [BU] Calculating graph for: bn_expand2
    Inlining graph for bn_expand_internal[15+0] into 'bn_expand2' [6+0]
    Inlining graph for bn_free_d[4+0] into 'bn_expand2' [6+0]
  [BU] Done inlining: bn_expand2 [6+0]
Visiting single node SCC #: 7 fn: bn_wexpand
  [BU] Calculating graph for: bn_wexpand
    Inlining graph for bn_expand2[6+0] into 'bn_wexpand' [3+0]
  [BU] Done inlining: bn_wexpand [4+0]
Visiting single node SCC #: 11 fn: BN_set_flags
  [BU] Calculating graph for: BN_set_flags
  [BU] Done inlining: BN_set_flags [3+0]
Visiting single node SCC #: 6 fn: BN_copy
  [BU] Calculating graph for: BN_copy
    Inlining graph for BN_get_flags[3+0] into 'BN_copy' [15+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_copy' [15+0]
    Inlining graph for BN_set_flags[3+0] into 'BN_copy' [14+0]
  [BU] Done inlining: BN_copy [14+0]
Visiting single node SCC #: 13 fn: bn_expand
  [BU] Calculating graph for: bn_expand
    Inlining graph for bn_expand2[6+0] into 'bn_expand' [4+0]
  [BU] Done inlining: bn_expand [5+0]
Visiting single node SCC #: 12 fn: BN_set_word
  [BU] Calculating graph for: BN_set_word
    Inlining graph for bn_expand[5+0] into 'BN_set_word' [6+0]
  [BU] Done inlining: BN_set_word [5+0]
Visiting single node SCC #: 14 fn: BN_is_bit_set
  [BU] Calculating graph for: BN_is_bit_set
  [BU] Done inlining: BN_is_bit_set [7+0]
Visiting single node SCC #: 15 fn: BN_is_odd
  [BU] Calculating graph for: BN_is_odd
  [BU] Done inlining: BN_is_odd [3+0]
Visiting single node SCC #: 1 fn: BN_exp
  [BU] Calculating graph for: BN_exp
    Inlining graph for BN_num_bits[5+0] into 'BN_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_exp' [19+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_exp' [19+0]
    Inlining graph for BN_copy[14+0] into 'BN_exp' [19+0]
    Inlining graph for BN_copy[14+0] into 'BN_exp' [20+0]
    Inlining graph for BN_copy[14+0] into 'BN_exp' [20+0]
    Inlining graph for BN_set_word[5+0] into 'BN_exp' [19+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_exp' [19+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_exp' [19+0]
  [BU] Done inlining: BN_exp [19+0]
Visiting single node SCC #: 19 fn: BN_abs_is_word
  [BU] Calculating graph for: BN_abs_is_word
  [BU] Done inlining: BN_abs_is_word [4+0]
Visiting single node SCC #: 18 fn: BN_is_one
  [BU] Calculating graph for: BN_is_one
    Inlining graph for BN_abs_is_word[4+0] into 'BN_is_one' [2+0]
  [BU] Done inlining: BN_is_one [3+0]
Visiting single node SCC #: 20 fn: BN_to_montgomery
  [BU] Calculating graph for: BN_to_montgomery
  [BU] Done inlining: BN_to_montgomery [8+0]
Visiting single node SCC #: 17 fn: BN_mod_exp_mont_word
  [BU] Calculating graph for: BN_mod_exp_mont_word
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_mont_word' [27+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont_word' [28+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont_word' [28+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont_word' [28+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont_word' [29+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_mont_word' [30+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_mont_word' [30+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp_mont_word' [30+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_word' [30+0]
  [BU] Done inlining: BN_mod_exp_mont_word [30+0]
Visiting single node SCC #: 23 fn: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Done inlining: MOD_EXP_CTIME_COPY_TO_PREBUF [12+0]
Visiting single node SCC #: 28 fn: constant_time_msb
  [BU] Calculating graph for: constant_time_msb
  [BU] Done inlining: constant_time_msb [1+0]
Visiting single node SCC #: 27 fn: constant_time_is_zero
  [BU] Calculating graph for: constant_time_is_zero
  [BU] Done inlining: constant_time_is_zero [1+0]
Visiting single node SCC #: 26 fn: constant_time_eq
  [BU] Calculating graph for: constant_time_eq
  [BU] Done inlining: constant_time_eq [2+0]
Visiting single node SCC #: 25 fn: constant_time_eq_int
  [BU] Calculating graph for: constant_time_eq_int
  [BU] Done inlining: constant_time_eq_int [2+0]
Visiting single node SCC #: 29 fn: bn_correct_top
  [BU] Calculating graph for: bn_correct_top
  [BU] Done inlining: bn_correct_top [5+0]
Visiting single node SCC #: 24 fn: MOD_EXP_CTIME_COPY_FROM_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_FROM_PREBUF
    Inlining graph for bn_wexpand[4+0] into 'MOD_EXP_CTIME_COPY_FROM_PREBUF' [21+0]
    Inlining graph for bn_correct_top[5+0] into 'MOD_EXP_CTIME_COPY_FROM_PREBUF' [20+0]
  [BU] Done inlining: MOD_EXP_CTIME_COPY_FROM_PREBUF [20+0]
Visiting single node SCC #: 30 fn: BN_value_one
  [BU] Calculating graph for: BN_value_one
  [BU] Done inlining: BN_value_one [2+0]
Visiting single node SCC #: 31 fn: BN_ucmp
  [BU] Calculating graph for: BN_ucmp
  [BU] Done inlining: BN_ucmp [12+0]
Visiting single node SCC #: 22 fn: BN_mod_exp_mont_consttime
  [BU] Calculating graph for: BN_mod_exp_mont_consttime
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[20+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[20+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for BN_value_one[2+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_mont_consttime' [32+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont_consttime' [33+0]
    Inlining graph for BN_ucmp[12+0] into 'BN_mod_exp_mont_consttime' [34+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_mont_consttime' [35+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_mont_consttime' [35+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp_mont_consttime' [35+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_consttime' [35+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_consttime' [35+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_consttime' [35+0]
  [BU] Done inlining: BN_mod_exp_mont_consttime [35+0]
Visiting single node SCC #: 21 fn: BN_mod_exp_mont
  [BU] Calculating graph for: BN_mod_exp_mont
    Inlining graph for BN_mod_exp_mont_consttime[35+0] into 'BN_mod_exp_mont' [34+0]
    Inlining graph for BN_value_one[2+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_is_zero[2+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for bn_correct_top[5+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_ucmp[12+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont' [37+0]
  [BU] Done inlining: BN_mod_exp_mont [37+0]
Visiting single node SCC #: 32 fn: BN_mod_exp_recp
  [BU] Calculating graph for: BN_mod_exp_recp
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_recp' [27+0]
    Inlining graph for BN_is_zero[2+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_copy[14+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_recp' [29+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_recp' [30+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_recp' [30+0]
  [BU] Done inlining: BN_mod_exp_recp [30+0]
Visiting single node SCC #: 16 fn: BN_mod_exp
  [BU] Calculating graph for: BN_mod_exp
    Inlining graph for BN_mod_exp_mont_word[30+0] into 'BN_mod_exp' [13+0]
    Inlining graph for BN_mod_exp_mont[37+0] into 'BN_mod_exp' [17+0]
    Inlining graph for BN_mod_exp_recp[30+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp' [18+0]
  [BU] Done inlining: BN_mod_exp [16+0]
Visiting single node SCC #: 33 fn: BN_mod_exp_simple
  [BU] Calculating graph for: BN_mod_exp_simple
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_simple' [25+0]
    Inlining graph for BN_is_zero[2+0] into 'BN_mod_exp_simple' [26+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_simple' [26+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_simple' [26+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_simple' [26+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_simple' [26+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_simple' [27+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_simple' [27+0]
  [BU] Done inlining: BN_mod_exp_simple [28+0]
Visiting single node SCC #: 34 fn: BN_set_params
  [BU] Calculating graph for: BN_set_params
  [BU] Done inlining: BN_set_params [4+0]
Visiting single node SCC #: 35 fn: BN_get_params
  [BU] Calculating graph for: BN_get_params
  [BU] Done inlining: BN_get_params [2+0]
Visiting single node SCC #: 36 fn: BN_clear_free
  [BU] Calculating graph for: BN_clear_free
    Inlining graph for BN_get_flags[3+0] into 'BN_clear_free' [5+0]
    Inlining graph for bn_free_d[4+0] into 'BN_clear_free' [5+0]
  [BU] Done inlining: BN_clear_free [5+0]
Visiting single node SCC #: 37 fn: BN_free
  [BU] Calculating graph for: BN_free
    Inlining graph for BN_get_flags[3+0] into 'BN_free' [3+0]
    Inlining graph for bn_free_d[4+0] into 'BN_free' [3+0]
  [BU] Done inlining: BN_free [4+0]
Visiting single node SCC #: 38 fn: bn_init
  [BU] Calculating graph for: bn_init
  [BU] Done inlining: bn_init [2+0]
Visiting single node SCC #: 39 fn: BN_new
  [BU] Calculating graph for: BN_new
  [BU] Done inlining: BN_new [4+0]
Visiting single node SCC #: 40 fn: BN_secure_new
  [BU] Calculating graph for: BN_secure_new
    Inlining graph for BN_new[4+0] into 'BN_secure_new' [2+0]
  [BU] Done inlining: BN_secure_new [2+0]
Visiting single node SCC #: 41 fn: BN_dup
  [BU] Calculating graph for: BN_dup
    Inlining graph for BN_get_flags[3+0] into 'BN_dup' [6+0]
    Inlining graph for BN_free[4+0] into 'BN_dup' [6+0]
    Inlining graph for BN_new[4+0] into 'BN_dup' [7+0]
    Inlining graph for BN_secure_new[2+0] into 'BN_dup' [7+0]
    Inlining graph for BN_copy[14+0] into 'BN_dup' [7+0]
  [BU] Done inlining: BN_dup [7+0]
Visiting single node SCC #: 42 fn: BN_swap
  [BU] Calculating graph for: BN_swap
  [BU] Done inlining: BN_swap [11+0]
Visiting single node SCC #: 43 fn: BN_clear
  [BU] Calculating graph for: BN_clear
  [BU] Done inlining: BN_clear [3+0]
Visiting single node SCC #: 44 fn: BN_get_word
  [BU] Calculating graph for: BN_get_word
  [BU] Done inlining: BN_get_word [4+0]
Visiting single node SCC #: 45 fn: BN_bin2bn
  [BU] Calculating graph for: BN_bin2bn
    Inlining graph for BN_free[4+0] into 'BN_bin2bn' [13+0]
    Inlining graph for BN_new[4+0] into 'BN_bin2bn' [13+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_bin2bn' [13+0]
    Inlining graph for bn_correct_top[5+0] into 'BN_bin2bn' [12+0]
  [BU] Done inlining: BN_bin2bn [12+0]
Visiting single node SCC #: 47 fn: bn2binpad
  [BU] Calculating graph for: bn2binpad
    Inlining graph for BN_num_bits[5+0] into 'bn2binpad' [10+0]
  [BU] Done inlining: bn2binpad [10+0]
Visiting single node SCC #: 46 fn: BN_bn2binpad
  [BU] Calculating graph for: BN_bn2binpad
    Inlining graph for bn2binpad[10+0] into 'BN_bn2binpad' [6+0]
  [BU] Done inlining: BN_bn2binpad [7+0]
Visiting single node SCC #: 48 fn: BN_bn2bin
  [BU] Calculating graph for: BN_bn2bin
    Inlining graph for bn2binpad[10+0] into 'BN_bn2bin' [4+0]
  [BU] Done inlining: BN_bn2bin [5+0]
Visiting single node SCC #: 49 fn: BN_lebin2bn
  [BU] Calculating graph for: BN_lebin2bn
    Inlining graph for BN_free[4+0] into 'BN_lebin2bn' [13+0]
    Inlining graph for BN_new[4+0] into 'BN_lebin2bn' [13+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_lebin2bn' [13+0]
    Inlining graph for bn_correct_top[5+0] into 'BN_lebin2bn' [12+0]
  [BU] Done inlining: BN_lebin2bn [12+0]
Visiting single node SCC #: 50 fn: BN_bn2lebinpad
  [BU] Calculating graph for: BN_bn2lebinpad
    Inlining graph for BN_num_bits[5+0] into 'BN_bn2lebinpad' [10+0]
  [BU] Done inlining: BN_bn2lebinpad [10+0]
Visiting single node SCC #: 51 fn: BN_cmp
  [BU] Calculating graph for: BN_cmp
  [BU] Done inlining: BN_cmp [12+0]
Visiting single node SCC #: 52 fn: BN_set_bit
  [BU] Calculating graph for: BN_set_bit
    Inlining graph for bn_wexpand[4+0] into 'BN_set_bit' [9+0]
  [BU] Done inlining: BN_set_bit [8+0]
Visiting single node SCC #: 53 fn: BN_clear_bit
  [BU] Calculating graph for: BN_clear_bit
    Inlining graph for bn_correct_top[5+0] into 'BN_clear_bit' [7+0]
  [BU] Done inlining: BN_clear_bit [7+0]
Visiting single node SCC #: 54 fn: BN_mask_bits
  [BU] Calculating graph for: BN_mask_bits
    Inlining graph for bn_correct_top[5+0] into 'BN_mask_bits' [7+0]
  [BU] Done inlining: BN_mask_bits [7+0]
Visiting single node SCC #: 55 fn: BN_set_negative
  [BU] Calculating graph for: BN_set_negative
    Inlining graph for BN_is_zero[2+0] into 'BN_set_negative' [3+0]
  [BU] Done inlining: BN_set_negative [3+0]
Visiting single node SCC #: 56 fn: bn_cmp_words
  [BU] Calculating graph for: bn_cmp_words
  [BU] Done inlining: bn_cmp_words [9+0]
Visiting single node SCC #: 57 fn: bn_cmp_part_words
  [BU] Calculating graph for: bn_cmp_part_words
    Inlining graph for bn_cmp_words[9+0] into 'bn_cmp_part_words' [9+0]
  [BU] Done inlining: bn_cmp_part_words [9+0]
Visiting single node SCC #: 58 fn: BN_consttime_swap
  [BU] Calculating graph for: BN_consttime_swap
  [BU] Done inlining: BN_consttime_swap [14+0]
Visiting single node SCC #: 59 fn: BN_security_bits
  [BU] Calculating graph for: BN_security_bits
  [BU] Done inlining: BN_security_bits [5+0]
Visiting single node SCC #: 60 fn: BN_zero_ex
  [BU] Calculating graph for: BN_zero_ex
  [BU] Done inlining: BN_zero_ex [2+0]
Visiting single node SCC #: 61 fn: BN_is_word
  [BU] Calculating graph for: BN_is_word
    Inlining graph for BN_abs_is_word[4+0] into 'BN_is_word' [3+0]
  [BU] Done inlining: BN_is_word [4+0]
Visiting single node SCC #: 62 fn: BN_is_negative
  [BU] Calculating graph for: BN_is_negative
  [BU] Done inlining: BN_is_negative [2+0]
Visiting single node SCC #: 63 fn: BN_with_flags
  [BU] Calculating graph for: BN_with_flags
  [BU] Done inlining: BN_with_flags [6+0]
Visiting single node SCC #: 64 fn: BN_GENCB_new
  [BU] Calculating graph for: BN_GENCB_new
  [BU] Done inlining: BN_GENCB_new [4+0]
Visiting single node SCC #: 65 fn: BN_GENCB_free
  [BU] Calculating graph for: BN_GENCB_free
  [BU] Done inlining: BN_GENCB_free [3+0]
Visiting single node SCC #: 66 fn: BN_GENCB_set_old
  [BU] Calculating graph for: BN_GENCB_set_old
  [BU] Done inlining: BN_GENCB_set_old [7+0]
Visiting single node SCC #: 67 fn: BN_GENCB_set
  [BU] Calculating graph for: BN_GENCB_set
  [BU] Done inlining: BN_GENCB_set [7+0]
Visiting single node SCC #: 68 fn: BN_GENCB_get_arg
  [BU] Calculating graph for: BN_GENCB_get_arg
  [BU] Done inlining: BN_GENCB_get_arg [3+0]
[TD] Inlining callers into 'BN_GENCB_get_arg'
[TD] Inlining callers into 'BN_GENCB_set'
[TD] Inlining callers into 'BN_GENCB_set_old'
[TD] Inlining callers into 'BN_GENCB_free'
[TD] Inlining callers into 'BN_GENCB_new'
[TD] Inlining callers into 'BN_with_flags'
[TD] Inlining callers into 'BN_is_negative'
[TD] Inlining callers into 'BN_is_word'
[TD] Inlining callers into 'BN_zero_ex'
[TD] Inlining callers into 'BN_security_bits'
[TD] Inlining callers into 'BN_consttime_swap'
[TD] Inlining callers into 'bn_cmp_part_words'
[TD] Inlining callers into 'bn_cmp_words'
   [TD] Inlining graph into Fn 'bn_cmp_words' from Fn 'bn_cmp_part_words': 3 args
[TD] Inlining callers into 'BN_set_negative'
[TD] Inlining callers into 'BN_mask_bits'
[TD] Inlining callers into 'BN_clear_bit'
[TD] Inlining callers into 'BN_set_bit'
[TD] Inlining callers into 'BN_cmp'
[TD] Inlining callers into 'BN_bn2lebinpad'
[TD] Inlining callers into 'BN_lebin2bn'
[TD] Inlining callers into 'BN_bn2bin'
[TD] Inlining callers into 'BN_bn2binpad'
[TD] Inlining callers into 'bn2binpad'
   [TD] Inlining graph into Fn 'bn2binpad' from Fn 'BN_bn2bin': 3 args
   [TD] Inlining graph into Fn 'bn2binpad' from Fn 'BN_bn2binpad': 3 args
[TD] Inlining callers into 'BN_bin2bn'
[TD] Inlining callers into 'BN_get_word'
[TD] Inlining callers into 'BN_clear'
[TD] Inlining callers into 'BN_swap'
[TD] Inlining callers into 'BN_dup'
[TD] Inlining callers into 'BN_secure_new'
   [TD] Inlining graph into Fn 'BN_secure_new' from Fn 'BN_dup': 0 args
[TD] Inlining callers into 'BN_new'
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_bin2bn': 0 args
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_dup': 0 args
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_secure_new': 0 args
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_lebin2bn': 0 args
[TD] Inlining callers into 'bn_init'
[TD] Inlining callers into 'BN_free'
   [TD] Inlining graph into Fn 'BN_free' from Fn 'BN_bin2bn': 1 args
   [TD] Inlining graph into Fn 'BN_free' from Fn 'BN_dup': 1 args
   [TD] Inlining graph into Fn 'BN_free' from Fn 'BN_lebin2bn': 1 args
[TD] Inlining callers into 'BN_clear_free'
[TD] Inlining callers into 'BN_get_params'
[TD] Inlining callers into 'BN_set_params'
[TD] Inlining callers into 'BN_mod_exp_simple'
[TD] Inlining callers into 'BN_mod_exp'
[TD] Inlining callers into 'BN_mod_exp_recp'
   [TD] Inlining graph into Fn 'BN_mod_exp_recp' from Fn 'BN_mod_exp': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_mod_exp_mont_consttime'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_consttime' from Fn 'BN_mod_exp_mont': 6 args
[TD] Inlining callers into 'BN_ucmp'
   [TD] Inlining graph into Fn 'BN_ucmp' from Fn 'BN_mod_exp_mont_consttime': 2 args
   [TD] Inlining graph into Fn 'BN_ucmp' from Fn 'BN_mod_exp_mont': 2 args
[TD] Inlining callers into 'BN_value_one'
   [TD] Inlining graph into Fn 'BN_value_one' from Fn 'BN_mod_exp_mont_consttime': 0 args
   [TD] Inlining graph into Fn 'BN_value_one' from Fn 'BN_mod_exp_mont': 0 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_FROM_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'bn_correct_top'
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_mask_bits': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_clear_bit': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_bin2bn': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_lebin2bn': 1 args
[TD] Inlining callers into 'constant_time_eq_int'
   [TD] Inlining graph into Fn 'constant_time_eq_int' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 2 args
[TD] Inlining callers into 'constant_time_eq'
   [TD] Inlining graph into Fn 'constant_time_eq' from Fn 'constant_time_eq_int': 2 args
[TD] Inlining callers into 'constant_time_is_zero'
   [TD] Inlining graph into Fn 'constant_time_is_zero' from Fn 'constant_time_eq': 1 args
[TD] Inlining callers into 'constant_time_msb'
   [TD] Inlining graph into Fn 'constant_time_msb' from Fn 'constant_time_is_zero': 1 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_TO_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont_word'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_word' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_to_montgomery'
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_consttime': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_consttime': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_consttime': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_word': 4 args
[TD] Inlining callers into 'BN_is_one'
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_simple': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_recp': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_mont_consttime': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_mont_word': 1 args
[TD] Inlining callers into 'BN_abs_is_word'
   [TD] Inlining graph into Fn 'BN_abs_is_word' from Fn 'BN_is_word': 2 args
   [TD] Inlining graph into Fn 'BN_abs_is_word' from Fn 'BN_is_one': 2 args
[TD] Inlining callers into 'BN_exp'
[TD] Inlining callers into 'BN_is_odd'
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp_mont_consttime': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp_mont_word': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_exp': 1 args
[TD] Inlining callers into 'BN_is_bit_set'
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_mont_consttime': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'BN_set_word'
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont_consttime': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'bn_expand'
   [TD] Inlining graph into Fn 'bn_expand' from Fn 'BN_set_word': 2 args
[TD] Inlining callers into 'BN_copy'
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_dup': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_exp': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_exp': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'BN_set_flags'
   [TD] Inlining graph into Fn 'BN_set_flags' from Fn 'BN_copy': 2 args
[TD] Inlining callers into 'bn_wexpand'
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_set_bit': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_bin2bn': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_copy': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_lebin2bn': 2 args
[TD] Inlining callers into 'bn_expand2'
   [TD] Inlining graph into Fn 'bn_expand2' from Fn 'bn_expand': 2 args
   [TD] Inlining graph into Fn 'bn_expand2' from Fn 'bn_wexpand': 2 args
[TD] Inlining callers into 'bn_free_d'
   [TD] Inlining graph into Fn 'bn_free_d' from Fn 'BN_free': 1 args
   [TD] Inlining graph into Fn 'bn_free_d' from Fn 'BN_clear_free': 1 args
   [TD] Inlining graph into Fn 'bn_free_d' from Fn 'bn_expand2': 1 args
[TD] Inlining callers into 'bn_expand_internal'
   [TD] Inlining graph into Fn 'bn_expand_internal' from Fn 'bn_expand2': 2 args
[TD] Inlining callers into 'BN_get_flags'
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_dup': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_free': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_clear_free': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'bn_free_d': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'bn_expand_internal': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_copy': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'BN_num_bits'
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_bn2lebinpad': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'bn2binpad': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_simple': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_recp': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_mont_consttime': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_mont_word': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_exp': 1 args
[TD] Inlining callers into 'BN_is_zero'
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_set_negative': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_mod_exp_simple': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_mod_exp_recp': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_num_bits': 1 args
[TD] Inlining callers into 'BN_num_bits_word'
   [TD] Inlining graph into Fn 'BN_num_bits_word' from Fn 'BN_num_bits': 1 args
Running on BN_exp in context []
Running on llvm.dbg.declare in context []
Running on ERR_put_error in context []
Running on BN_RECP_CTX_free in context []
Running on BN_mod_exp_mont_consttime in context []
Running on BN_MONT_CTX_new in context []
Running on BN_CTX_start in context []
Running on BN_CTX_get in context []
Running on BN_sqr in context []
Running on BN_mul in context []
Running on BN_CTX_end in context []
Running on BN_mod_exp in context []
Creating ConsElem Map for :	Node0x7f9faacb30c0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb30c0:s0 -> Node0x7f9faacb28c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb28c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacb28c0:s0 -> Node0x7f9faacb3a00;
Creating ConsElem Map for :	Node0x7f9faacb3200 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb3200:s0 -> Node0x7f9faacb2ab0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb2ab0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0}}"];
	Node0x7f9faacb2ab0:s0 -> Node0x7f9faacb3900;
Creating ConsElem Map for :	Node0x7f9faacb3340 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb3340:s0 -> Node0x7f9faacb2c80;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb2c80 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0}}"];
	Node0x7f9faacb2c80:s0 -> Node0x7f9faacb3b00;
Creating ConsElem Map for :	Node0x7f9faacb3480 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb3480:s0 -> Node0x7f9faacb2e20;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb2e20 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0}}"];
	Node0x7f9faacb2e20:s0 -> Node0x7f9faacb3c00;
Creating ConsElem Map for :	Node0x7f9faacb35c0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb35c0:s0 -> Node0x7f9faacb2ff0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7f9faacb2ff0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !286
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !286
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !283
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faae78450
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 3, !dbg !290
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 3, !dbg !290
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !289
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faae785d0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !308
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !308
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !307
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faae76900
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %9, i64 0, !dbg !307
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %9, i64 0, !dbg !307
 allocation intermediate:   %9 = load i64*, i64** %d, align 8, !dbg !308
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !308
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !308
=>  %8 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !307
 allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !307
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Created 1 constraint variable(s) for node of size 8
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faae76900
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faacb3800 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb3700 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on BN_mod_exp_mont_word in context []
Running on BN_mod_exp_mont in context []
Running on BN_mod_exp_recp in context []
Running on BN_RECP_CTX_init in context []
Running on BN_RECP_CTX_set in context []
Running on BN_nnmod in context []
Running on BN_mod_mul_reciprocal in context []
Running on BN_MONT_CTX_set in context []
Running on BN_mod_mul_montgomery in context []
Running on BN_from_montgomery in context []
Running on BN_MONT_CTX_free in context []
Running on CRYPTO_malloc in context []
Running on __memset_chk in context []
Running on llvm.objectsize.i64.p0i8 in context []
Running on BN_div in context []
Running on OPENSSL_cleanse in context []
Running on CRYPTO_free in context []
Running on BN_mul_word in context []
Running on BN_mod_exp_simple in context []
Running on BN_mod_mul in context []
Running on BN_set_params in context []
Running on BN_get_params in context []
Running on BN_value_one in context []
Running on BN_num_bits_word in context []
Running on BN_num_bits in context []
Running on BN_is_zero in context []
Running on BN_clear_free in context []
Running on BN_get_flags in context []
Running on BN_free in context []
Running on bn_init in context []
Running on llvm.memcpy.p0i8.p0i8.i64 in context []
Running on BN_new in context []
Running on CRYPTO_zalloc in context []
Running on BN_secure_new in context []
Running on bn_expand2 in context []
Running on BN_dup in context []
Running on BN_copy in context []
Running on bn_wexpand in context []
Running on BN_set_flags in context []
Running on BN_swap in context []
Running on BN_clear in context []
Running on BN_get_word in context []
Running on BN_set_word in context []
Running on BN_bin2bn in context []
Running on bn_correct_top in context []
Running on BN_bn2binpad in context []
Running on BN_bn2bin in context []
Running on BN_lebin2bn in context []
Running on BN_bn2lebinpad in context []
Running on BN_ucmp in context []
Running on BN_cmp in context []
Running on BN_set_bit in context []
Running on BN_clear_bit in context []
Running on BN_is_bit_set in context []
Running on BN_mask_bits in context []
Running on BN_set_negative in context []
Running on bn_cmp_words in context []
Running on bn_cmp_part_words in context []
Running on BN_consttime_swap in context []
Running on __assert_rtn in context []
Running on BN_security_bits in context []
Running on BN_zero_ex in context []
Running on BN_abs_is_word in context []
Running on BN_is_one in context []
Running on BN_is_word in context []
Running on BN_is_odd in context []
Running on BN_is_negative in context []
Running on BN_to_montgomery in context []
Running on BN_with_flags in context []
Running on BN_GENCB_new in context []
Running on BN_GENCB_free in context []
Running on BN_GENCB_set_old in context []
Running on BN_GENCB_set in context []
Running on BN_GENCB_get_arg in context []
Running on CRYPTO_secure_free in context []
Running on CRYPTO_secure_zalloc in context []
Running on BN_is_odd in context [BN_mod_exp ]
Creating ConsElem Map for :	Node0x7f9faacb23b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb23b0:s0 -> Node0x7f9faacb2290;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb2290 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb2290:s0 -> Node0x7f9faacb2440;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb6030
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !274
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
Running on BN_get_flags in context [BN_mod_exp ]
Creating ConsElem Map for :	Node0x7f9faaca8c30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca8c30:s0 -> Node0x7f9faaca8b10;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaca8b10 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca8b10:s0 -> Node0x7f9faafa17e0;
Creating ConsElem Map for :	Node0x7f9faaca8d70 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on BN_mod_exp_mont_word in context [BN_mod_exp ]
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 117, i32 66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1126), !dbg !310
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Creating ConsElem Map for :	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 117, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1134), !dbg !317
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %18), !dbg !360
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !359
Creating ConsElem Map for :	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !359
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !359
Using taint reachable signature for:   %call24 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19), !dbg !362
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !361
REACHABLE SOURCE:   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !361
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !361
Using taint reachable signature for:   %call25 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %20), !dbg !365
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
REACHABLE SOURCE:   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
Using taint reachable signature for:   %call26 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %21), !dbg !368
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !367
REACHABLE SOURCE:   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !367
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !367
Using taint reachable signature for:   %call37 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !388
Using taint reachable signature for:   %call41 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %27, %struct.bignum_st* %28, %struct.bignum_ctx* %29), !dbg !399
RSINKGEP INSTRUCTION   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !398
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !397
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !395
Creating ConsElem Map for :	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
REACHABLE SOURCE:   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !398
REACHABLE SOURCE:   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !397
REACHABLE SOURCE:   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !395
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !398
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !397
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !395
Using taint reachable signature for:   %call58 = call i32 @BN_mul_word(%struct.bignum_st* %45, i64 %46), !dbg !437
RSINKGEP INSTRUCTION   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !437
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call61 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %47, %struct.bignum_st* %48, %struct.bignum_st* %49, %struct.bignum_ctx* %50), !dbg !437
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !437
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !437
REACHABLE SOURCE:   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !437
REACHABLE SOURCE:   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !437
REACHABLE SOURCE:   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !437
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !437
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !437
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call70 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %56, %struct.bignum_st* %57, %struct.bignum_st* %58, %struct.bn_mont_ctx_st* %59, %struct.bignum_ctx* %60), !dbg !456
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !455
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !453
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !454
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !449
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !452
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !455
REACHABLE SOURCE:   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !453
REACHABLE SOURCE:   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !454
REACHABLE SOURCE:   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !449
REACHABLE SOURCE:   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !452
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !455
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !453
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !454
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !449
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !452
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call92 = call i32 @BN_mul_word(%struct.bignum_st* %75, i64 %76), !dbg !488
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !488
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call95 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %77, %struct.bignum_st* %78, %struct.bignum_st* %79, %struct.bignum_ctx* %80), !dbg !488
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !488
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !488
REACHABLE SOURCE:   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !488
REACHABLE SOURCE:   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !488
REACHABLE SOURCE:   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !488
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !488
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call115 = call i32 @BN_mul_word(%struct.bignum_st* %95, i64 %96), !dbg !517
RSINKGEP INSTRUCTION   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !517
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call118 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %97, %struct.bignum_st* %98, %struct.bignum_st* %99, %struct.bignum_ctx* %100), !dbg !517
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !517
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !517
REACHABLE SOURCE:   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !517
REACHABLE SOURCE:   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !517
REACHABLE SOURCE:   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !517
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !517
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !517
Using taint reachable signature for:   %call132 = call i32 @BN_from_montgomery(%struct.bignum_st* %106, %struct.bignum_st* %107, %struct.bn_mont_ctx_st* %108, %struct.bignum_ctx* %109), !dbg !538
RSINKGEP INSTRUCTION   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !532
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !535
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !536
RSINKGEP INSTRUCTION   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !537
REACHABLE SOURCE:   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !532
REACHABLE SOURCE:   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !535
REACHABLE SOURCE:   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !536
REACHABLE SOURCE:   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !537
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !532
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !535
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !536
RSINKGEP INSTRUCTION   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !537
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %111), !dbg !548
RSINKGEP INSTRUCTION   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !547
REACHABLE SOURCE:   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !547
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !547
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %112), !dbg !550
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !549
REACHABLE SOURCE:   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !549
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !549
Creating ConsElem Map for :	Node0x7f9faacb5210 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb5210:s0 -> Node0x7f9faacb4cb0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb4cb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb4cb0:s0 -> Node0x7f9faacb6b30;
Creating ConsElem Map for :	Node0x7f9faacb5350 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5450 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb5450:s0 -> Node0x7f9faacb4dd0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb4dd0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb4dd0:s0 -> Node0x7f9faacb6a30;
Creating ConsElem Map for :	Node0x7f9faacb5590 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb5590:s0 -> Node0x7f9faacb4e60;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb4e60 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb4e60:s0 -> Node0x7f9faacb6660;
Creating ConsElem Map for :	Node0x7f9faacb56d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb56d0:s0 -> Node0x7f9faacb4f70;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7f9faacb4f70 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5810 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb5810:s0 -> Node0x7f9faacb5040;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacb5040 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5950 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb5950:s0 -> Node0x7f9faacb5040;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacb5040 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5c90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5110 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !322
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !322
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !320
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafbbe20
DSOURCEGEP INSTRUCTION   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !326
[Source:]   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !326
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !325
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafbbe00
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 0, !dbg !325
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 0, !dbg !325
 allocation intermediate:   %6 = load i64*, i64** %d8, align 8, !dbg !326
=>  %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !326
 allocation intermediate:   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !326
=>  %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !325
 allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !325
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafbbe00
Creating ConsElem Map for :	Node0x7f9faacb5b90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb6090 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb6090:s0 -> Node0x7f9faacb6760;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb6760 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacb61d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb61d0:s0 -> Node0x7f9faacb6830;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb6830 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacb6830:s0 -> Node0x7f9faacb6c30;
Creating ConsElem Map for :	Node0x7f9faacb6310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb6310:s0 -> Node0x7f9faacb6830;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb6830 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacb6830:s0 -> Node0x7f9faacb6c30;
Creating ConsElem Map for :	Node0x7f9faacb5d90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5e90 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5a90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb5f90 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb6450 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb6450:s0 -> Node0x7f9faacb6830;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb6830 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacb6830:s0 -> Node0x7f9faacb6c30;
Running on BN_mod_exp_mont in context [BN_mod_exp ]
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 109, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 328), !dbg !336
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %16), !dbg !361
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !360
REACHABLE SOURCE:   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !360
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !360
Using taint reachable signature for:   %call20 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %17), !dbg !363
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !362
REACHABLE SOURCE:   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !362
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !362
Using taint reachable signature for:   %call21 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %18), !dbg !366
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !365
REACHABLE SOURCE:   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !365
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !365
Using taint reachable signature for:   %call22 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19), !dbg !369
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !368
REACHABLE SOURCE:   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !368
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !368
Using taint reachable signature for:   %call34 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !387
Using taint reachable signature for:   %call38 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %25, %struct.bignum_st* %26, %struct.bignum_ctx* %27), !dbg !398
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !397
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !396
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !394
REACHABLE SOURCE:   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !397
REACHABLE SOURCE:   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !396
REACHABLE SOURCE:   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !394
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !397
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !396
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !394
Using taint reachable signature for:   %call49 = call i32 @BN_nnmod(%struct.bignum_st* %32, %struct.bignum_st* %33, %struct.bignum_st* %34, %struct.bignum_ctx* %35), !dbg !416
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !415
RSINKGEP INSTRUCTION   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !413
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !414
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !410
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !415
REACHABLE SOURCE:   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !413
REACHABLE SOURCE:   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !414
REACHABLE SOURCE:   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !410
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !415
RSINKGEP INSTRUCTION   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !413
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !414
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !410
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call83 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %49, %struct.bignum_st* %50, %struct.bignum_st* %51, %struct.bn_mont_ctx_st* %52, %struct.bignum_ctx* %53), !dbg !453
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !450
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !451
RSINKGEP INSTRUCTION   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !452
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !446
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !449
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x7f9faacbcde0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !450
REACHABLE SOURCE:   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !451
REACHABLE SOURCE:   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !452
REACHABLE SOURCE:   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !446
REACHABLE SOURCE:   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !449
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacbcde0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !450
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !451
RSINKGEP INSTRUCTION   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !452
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !446
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !449
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call88 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %57), !dbg !471
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !468
REACHABLE SOURCE:   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !468
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !468
Using taint reachable signature for:   %call97 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %60, %struct.bignum_st* %62, %struct.bignum_st* %63, %struct.bn_mont_ctx_st* %64, %struct.bignum_ctx* %65), !dbg !485
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !478
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !481
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !483
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !482
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !484
REACHABLE SOURCE:   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !478
REACHABLE SOURCE:   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !481
REACHABLE SOURCE:   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !483
REACHABLE SOURCE:   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !482
REACHABLE SOURCE:   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !484
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacbcde0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !478
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !481
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !483
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !482
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !484
Using taint reachable signature for:   %call145 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %100, %struct.bignum_st* %101, %struct.bignum_st* %102, %struct.bn_mont_ctx_st* %103, %struct.bignum_ctx* %104), !dbg !576
RSINKGEP INSTRUCTION   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !574
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !573
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !575
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !569
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !572
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !574
REACHABLE SOURCE:   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !573
REACHABLE SOURCE:   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !575
REACHABLE SOURCE:   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !569
REACHABLE SOURCE:   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !572
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !574
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !573
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !575
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !569
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !572
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call176 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %125, %struct.bignum_st* %126, %struct.bignum_st* %127, %struct.bn_mont_ctx_st* %128, %struct.bignum_ctx* %129), !dbg !647
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !644
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !643
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !646
RSINKGEP INSTRUCTION   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !645
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !640
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !644
REACHABLE SOURCE:   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !643
REACHABLE SOURCE:   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !646
REACHABLE SOURCE:   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !645
REACHABLE SOURCE:   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !640
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !644
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !643
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !646
RSINKGEP INSTRUCTION   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !645
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !640
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call186 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %131, %struct.bignum_st* %132, %struct.bignum_st* %134, %struct.bn_mont_ctx_st* %135, %struct.bignum_ctx* %136), !dbg !662
RSINKGEP INSTRUCTION   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !661
RSINKGEP INSTRUCTION   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !659
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !660
RSINKGEP INSTRUCTION   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !656
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !654
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !661
REACHABLE SOURCE:   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !659
REACHABLE SOURCE:   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !660
REACHABLE SOURCE:   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !656
REACHABLE SOURCE:   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !654
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !661
RSINKGEP INSTRUCTION   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !659
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !660
RSINKGEP INSTRUCTION   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !656
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !654
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call196 = call i32 @BN_from_montgomery(%struct.bignum_st* %140, %struct.bignum_st* %141, %struct.bn_mont_ctx_st* %142, %struct.bignum_ctx* %143), !dbg !681
RSINKGEP INSTRUCTION   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !680
RSINKGEP INSTRUCTION   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !679
RSINKGEP INSTRUCTION   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !678
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !676
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !680
REACHABLE SOURCE:   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !679
REACHABLE SOURCE:   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !678
REACHABLE SOURCE:   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !676
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !680
RSINKGEP INSTRUCTION   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !679
RSINKGEP INSTRUCTION   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !678
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !676
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %145), !dbg !691
RSINKGEP INSTRUCTION   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !690
REACHABLE SOURCE:   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !690
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !690
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %146), !dbg !693
RSINKGEP INSTRUCTION   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !692
REACHABLE SOURCE:   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !692
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !692
Creating ConsElem Map for :	Node0x7f9faacbb650 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbb650:s0 -> Node0x7f9faacbadb0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbadb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbadb0:s0 -> Node0x7f9faacbd4b0;
Creating ConsElem Map for :	Node0x7f9faacbb790 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbb790:s0 -> Node0x7f9faacbaed0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbaed0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbaed0:s0 -> Node0x7f9faacbd5b0;
Creating ConsElem Map for :	Node0x7f9faacbb8d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbb8d0:s0 -> Node0x7f9faacbb040;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbb040 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbb040:s0 -> Node0x7f9faacbd6b0;
Creating ConsElem Map for :	Node0x7f9faacbba10 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbba10:s0 -> Node0x7f9faacbb1e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbb1e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbb1e0:s0 -> Node0x7f9faacbd0b0;
Creating ConsElem Map for :	Node0x7f9faacbbb50 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbbb50:s0 -> Node0x7f9faacbb3b0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7f9faacbb3b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacbbc90 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbbc90:s0 -> Node0x7f9faacbb480;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacbb480 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacbc0d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbc5d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbcbd0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbcbd0:s0 -> Node0x7f9faacbb480;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacbb480 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacbb550 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbbfd0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbc6d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbc6d0:s0 -> Node0x7f9faacbcde0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbcde0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacbc810 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbc810:s0 -> Node0x7f9faacbceb0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbceb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacbceb0:s0 -> Node0x7f9faacbd1b0;
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !370
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !370
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x7f9faacbaed0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbaed0:s0 -> Node0x7f9faacbd5b0;
Trying to find element at offset 0
Tainting at offset: 0
Created 32 constraint variable(s) for node of size 8
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !370
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !370
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x7f9faacbaed0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbaed0:s0 -> Node0x7f9faacbd5b0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %arrayidx27 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !377
[Source:]   %arrayidx27 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !377
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc68d0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faafca650
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %28, i32 0, i32 3, !dbg !403
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %28, i32 0, i32 3, !dbg !403
StructType: allocation intermediate:   %28 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !401
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafc6a70
DSOURCEGEP INSTRUCTION   %arrayidx48 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !410
[Source:]   %arrayidx48 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !410
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc68d0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faafca650
DSOURCEGEP INSTRUCTION   %arrayidx53 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !419
[Source:]   %arrayidx53 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !419
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc68d0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faafca650
Creating ConsElem Map for :	Node0x7f9faacbc950 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacbc950:s0 -> Node0x7f9faacbaed0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacbaed0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacbaed0:s0 -> Node0x7f9faacbd5b0;
DSOURCEGEP INSTRUCTION   %arrayidx61 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !432
[Source:]   %arrayidx61 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !432
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc68d0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faafca650
Creating ConsElem Map for :	Node0x7f9faacbc3d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !449
[Source:]   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !449
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc68d0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faafca650
DSOURCEGEP INSTRUCTION   %arrayidx82 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !450
[Source:]   %arrayidx82 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !450
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacbca90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacbca90:s0 -> Node0x7f9faacbaed0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc68d0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faafca650
Creating ConsElem Map for :	Node0x7f9faacbbed0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbbdd0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !473
[Sink:]   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !473
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !473
[Sink:]   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !473
DSOURCEGEP INSTRUCTION   %arrayidx93 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom92, !dbg !478
[Source:]   %arrayidx93 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom92, !dbg !478
DSOURCEGEP INSTRUCTION   %arrayidx96 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom95, !dbg !481
[Source:]   %arrayidx96 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom95, !dbg !481
Creating ConsElem Map for :	Node0x7f9faacbc4d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbc1d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacbc2d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %68, i32 0, i32 1, !dbg !499
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %68, i32 0, i32 1, !dbg !499
StructType: allocation intermediate:   %68 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !498
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafc72b0
DSOURCEGEP INSTRUCTION   %d105 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %71, i32 0, i32 0, !dbg !505
[Source:]   %d105 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %71, i32 0, i32 0, !dbg !505
StructType: allocation intermediate:   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !504
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc7290
DSOURCEGEP INSTRUCTION   %arrayidx106 = getelementptr inbounds i64, i64* %72, i64 %idxprom104, !dbg !504
[Source:]   %arrayidx106 = getelementptr inbounds i64, i64* %72, i64 %idxprom104, !dbg !504
DSOURCEGEP INSTRUCTION   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !517
[Source:]   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !517
StructType: allocation intermediate:   %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !516
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc7290
DSOURCEGEP INSTRUCTION   %arrayidx114 = getelementptr inbounds i64, i64* %77, i64 0, !dbg !516
[Source:]   %arrayidx114 = getelementptr inbounds i64, i64* %77, i64 0, !dbg !516
 allocation intermediate:   %77 = load i64*, i64** %d113, align 8, !dbg !517
=>  %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !517
 allocation intermediate:   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !517
=>  %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !516
 allocation intermediate:   %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !516
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc7290
DSOURCEGEP INSTRUCTION   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !520
[Source:]   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !520
StructType: allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !519
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9faafca0f0
DSINKGEP INSTRUCTION   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !519
[Sink:]   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !519
 allocation intermediate:   %80 = load i64*, i64** %d116, align 8, !dbg !520
=>  %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !520
 allocation intermediate:   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !520
=>  %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !519
 allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !519
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacbceb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacbceb0:s0 -> Node0x7f9faacbd1b0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !519
[Sink:]   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !519
 allocation intermediate:   %80 = load i64*, i64** %d116, align 8, !dbg !520
=>  %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !520
 allocation intermediate:   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !520
=>  %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !519
 allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !519
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacbceb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacbceb0:s0 -> Node0x7f9faacbd1b0;
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %d122 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %84, i32 0, i32 0, !dbg !532
[Source:]   %d122 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %84, i32 0, i32 0, !dbg !532
StructType: allocation intermediate:   %84 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !531
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafc7290
DSOURCEGEP INSTRUCTION   %arrayidx123 = getelementptr inbounds i64, i64* %85, i64 %idxprom121, !dbg !531
[Source:]   %arrayidx123 = getelementptr inbounds i64, i64* %85, i64 %idxprom121, !dbg !531
DSOURCEGEP INSTRUCTION   %d126 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %88, i32 0, i32 0, !dbg !536
[Source:]   %d126 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %88, i32 0, i32 0, !dbg !536
StructType: allocation intermediate:   %88 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !535
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9faafca0f0
DSINKGEP INSTRUCTION   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !535
[Sink:]   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !535
DSINKGEP INSTRUCTION   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !535
[Sink:]   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !535
DSINKGEP INSTRUCTION   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !542
[Sink:]   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !542
StructType:::IS STRUCT TY:: allocation intermediate:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !541
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacbceb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacbceb0:s0 -> Node0x7f9faacbd1b0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !542
[Sink:]   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !542
StructType:::IS STRUCT TY:: allocation intermediate:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !541
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacbceb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacbceb0:s0 -> Node0x7f9faacbd1b0;
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %arrayidx185 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom184, !dbg !659
[Source:]   %arrayidx185 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom184, !dbg !659
Running on BN_mod_exp_recp in context [BN_mod_exp ]
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 125, i32 66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 185), !dbg !325
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %9), !dbg !350
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !349
REACHABLE SOURCE:   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !349
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !349
Using taint reachable signature for:   %call15 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %10), !dbg !352
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !351
REACHABLE SOURCE:   %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !351
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !351
Using taint reachable signature for:   %call16 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %11), !dbg !355
RSINKGEP INSTRUCTION   %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !354
REACHABLE SOURCE:   %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !354
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !354
Using taint reachable signature for:   call void @BN_RECP_CTX_init(%struct.bn_recp_ctx_st* %recp), !dbg !364
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Creating ConsElem Map for :	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Using taint reachable signature for:   %call30 = call i32 @BN_RECP_CTX_set(%struct.bn_recp_ctx_st* %recp, %struct.bignum_st* %19, %struct.bignum_ctx* %20), !dbg !382
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !381
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !379
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !381
REACHABLE SOURCE:   %19 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !379
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !381
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !379
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Using taint reachable signature for:   %call35 = call i32 @BN_RECP_CTX_set(%struct.bn_recp_ctx_st* %recp, %struct.bignum_st* %21, %struct.bignum_ctx* %22), !dbg !391
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !387
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %22 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !390
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %21 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !387
REACHABLE SOURCE:   %22 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !390
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !387
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %22 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !390
Using taint reachable signature for:   %call41 = call i32 @BN_nnmod(%struct.bignum_st* %23, %struct.bignum_st* %24, %struct.bignum_st* %25, %struct.bignum_ctx* %26), !dbg !400
RSINKGEP INSTRUCTION   %25 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !398
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !399
RSINKGEP INSTRUCTION   %23 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx40, align 8, !dbg !395
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %24 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !397
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %25 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !398
REACHABLE SOURCE:   %26 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !399
REACHABLE SOURCE:   %23 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx40, align 8, !dbg !395
REACHABLE SOURCE:   %24 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !397
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %25 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !398
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !399
RSINKGEP INSTRUCTION   %23 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx40, align 8, !dbg !395
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %24 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !397
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call68 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %34, %struct.bignum_st* %35, %struct.bignum_st* %36, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %37), !dbg !423
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !417
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx66, align 8, !dbg !420
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %36 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx67, align 8, !dbg !421
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %37 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !422
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %34 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !417
REACHABLE SOURCE:   %35 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx66, align 8, !dbg !420
REACHABLE SOURCE:   %36 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx67, align 8, !dbg !421
REACHABLE SOURCE:   %37 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !422
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !417
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx66, align 8, !dbg !420
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %36 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx67, align 8, !dbg !421
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %37 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !422
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Using taint reachable signature for:   %call73 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %41), !dbg !441
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !438
REACHABLE SOURCE:   %41 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !438
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !438
Using taint reachable signature for:   %call82 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %44, %struct.bignum_st* %46, %struct.bignum_st* %47, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %48), !dbg !454
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %44 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx78, align 8, !dbg !448
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !452
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %46 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !451
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !453
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %44 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx78, align 8, !dbg !448
REACHABLE SOURCE:   %47 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !452
REACHABLE SOURCE:   %46 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !451
REACHABLE SOURCE:   %48 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !453
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %44 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx78, align 8, !dbg !448
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !452
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %46 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !451
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !453
Using taint reachable signature for:   %call98 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %55, %struct.bignum_st* %56, %struct.bignum_st* %57, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %58), !dbg !490
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !489
RSINKGEP INSTRUCTION   %55 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !485
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !487
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %57 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !488
REACHABLE SOURCE:   %58 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !489
REACHABLE SOURCE:   %55 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !485
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %56 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !487
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !488
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !489
RSINKGEP INSTRUCTION   %55 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !485
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !487
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call129 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %79, %struct.bignum_st* %80, %struct.bignum_st* %81, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %82), !dbg !560
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !557
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !554
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %81 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !558
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %82 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !559
REACHABLE SOURCE:   %80 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !557
REACHABLE SOURCE:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !554
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %81 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !558
REACHABLE SOURCE:   %82 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !559
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !557
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !554
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %81 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !558
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %82 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !559
Using taint reachable signature for:   %call139 = call i32 @BN_mod_mul_reciprocal(%struct.bignum_st* %84, %struct.bignum_st* %85, %struct.bignum_st* %87, %struct.bn_recp_ctx_st* %recp, %struct.bignum_ctx* %88), !dbg !574
RSINKGEP INSTRUCTION   %84 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !567
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %87 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx138, align 8, !dbg !572
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %88 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !573
RSINKGEP INSTRUCTION   %85 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !569
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %84 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !567
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %87 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx138, align 8, !dbg !572
REACHABLE SOURCE:   %88 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !573
REACHABLE SOURCE:   %85 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !569
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %84 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !567
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
RSINKGEP INSTRUCTION   %87 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx138, align 8, !dbg !572
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %88 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !573
RSINKGEP INSTRUCTION   %85 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !569
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %92), !dbg !591
RSINKGEP INSTRUCTION   %92 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !590
REACHABLE SOURCE:   %92 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !590
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %92 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !590
Using taint reachable signature for:   call void @BN_RECP_CTX_free(%struct.bn_recp_ctx_st* %recp), !dbg !592
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
REACHABLE SOURCE:   %recp = alloca %struct.bn_recp_ctx_st, align 8
	Node0x7f9faacce450 [shape=record,shape=Mrecord,label="{VOID: SE\n}"];
RSINKGEP INSTRUCTION   %recp = alloca %struct.bn_recp_ctx_st, align 8
Creating ConsElem Map for :	Node0x7f9faaccd290 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccd290:s0 -> Node0x7f9faacccc30;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacccc30 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacccc30:s0 -> Node0x7f9faaccebf0;
Creating ConsElem Map for :	Node0x7f9faaccd3d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccd3d0:s0 -> Node0x7f9faacccd50;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacccd50 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacccd50:s0 -> Node0x7f9faafa0e10;
Creating ConsElem Map for :	Node0x7f9faaccd510 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccd510:s0 -> Node0x7f9faacccde0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacccde0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacccde0:s0 -> Node0x7f9faacce8f0;
Creating ConsElem Map for :	Node0x7f9faaccd650 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccd650:s0 -> Node0x7f9faacccef0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacccef0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacccef0:s0 -> Node0x7f9faacceaf0;
Creating ConsElem Map for :	Node0x7f9faaccd790 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccd790:s0 -> Node0x7f9faaccd0c0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7f9faaccd0c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faaccdbd0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacce0d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaccd190 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaccdad0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacce1d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacce1d0:s0 -> Node0x7f9faacce5f0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacce5f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacce5f0:s0 -> Node0x7f9faacce9f0;
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !356
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !356
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
Created 32 constraint variable(s) for node of size 8
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
Tainting at offset: 0
Created 32 constraint variable(s) for node of size 24
	Node0x7f9faacce7f0 [shape=record,shape=Mrecord,label="{8: i32,  : RE\n|{<s0>0}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !356
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !356
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacce7f0 [shape=record,shape=Mrecord,label="{8: i32,  : RE\n|{<s0>0}}"];
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %arrayidx19 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !361
[Source:]   %arrayidx19 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !361
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faae8f1b0
CONSTRAINING: 8: i32,  : CRE: elem 0::0x7f9faae901b0
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %14, i32 0, i32 3, !dbg !367
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %14, i32 0, i32 3, !dbg !367
StructType: allocation intermediate:   %14 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !365
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9fad048d80
DSINKGEP INSTRUCTION   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !377
[Sink:]   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !377
StructType:::IS STRUCT TY:: allocation intermediate:   %18 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !376
=>  %aa = alloca %struct.bignum_st*, align 8
FINAL:   %aa = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacce5f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacce5f0:s0 -> Node0x7f9faacce9f0;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !377
[Sink:]   %neg29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %18, i32 0, i32 3, !dbg !377
StructType:::IS STRUCT TY:: allocation intermediate:   %18 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !376
=>  %aa = alloca %struct.bignum_st*, align 8
FINAL:   %aa = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacce5f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x7f9faacce5f0:s0 -> Node0x7f9faacce9f0;
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %arrayidx40 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !395
[Source:]   %arrayidx40 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !395
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faae8f1b0
CONSTRAINING: 8: i32,  : CRE: elem 0::0x7f9faae901b0
DSOURCEGEP INSTRUCTION   %arrayidx45 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !403
[Source:]   %arrayidx45 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !403
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faae8f1b0
CONSTRAINING: 8: i32,  : CRE: elem 0::0x7f9faae901b0
Creating ConsElem Map for :	Node0x7f9faaccded0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx66 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !420
[Source:]   %arrayidx66 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !420
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faae8f1b0
CONSTRAINING: 8: i32,  : CRE: elem 0::0x7f9faae901b0
DSOURCEGEP INSTRUCTION   %arrayidx67 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !421
[Source:]   %arrayidx67 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !421
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x7f9faacce310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x7f9faacce310:s0 -> Node0x7f9faacce7f0;
Trying to find element at offset 0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x7f9faae8f1b0
CONSTRAINING: 8: i32,  : CRE: elem 0::0x7f9faae901b0
Creating ConsElem Map for :	Node0x7f9faaccd9d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaccd8d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !443
[Sink:]   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !443
DSINKGEP INSTRUCTION   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !443
[Sink:]   %arrayidx74 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !443
DSOURCEGEP INSTRUCTION   %arrayidx78 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom77, !dbg !448
[Source:]   %arrayidx78 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom77, !dbg !448
DSOURCEGEP INSTRUCTION   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom80, !dbg !451
[Source:]   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom80, !dbg !451
Creating ConsElem Map for :	Node0x7f9faaccdfd0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaccdcd0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaccddd0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx138 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom137, !dbg !572
[Source:]   %arrayidx138 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom137, !dbg !572
Running on BN_get_flags in context [BN_mod_exp_mont_word ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on BN_is_odd in context [BN_mod_exp_mont_word ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb6030
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !274
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
Running on BN_num_bits in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x7f9faaca7a40 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca7a40:s0 -> Node0x7f9faaca7890;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaca7890 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca7890:s0 -> Node0x7f9faaca7b60;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !271
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad053bb0
Creating ConsElem Map for :	Node0x7f9faaca7ad0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaca79b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad053b30
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
Running on BN_is_one in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x7f9faacb9710 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb9710:s0 -> Node0x7f9faacb95f0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb95f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb95f0:s0 -> Node0x7f9faacb97a0;
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9fad0558b0
Running on BN_set_word in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x7f9faacb03c0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb03c0:s0 -> Node0x7f9faacb0100;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Creating ConsElem Map for :	Node0x7f9faacb0500 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb02c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9faae94a10
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Running on BN_to_montgomery in context [BN_mod_exp_mont_word ]
Using taint reachable signature for:   %call = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %0, %struct.bignum_st* %1, %struct.bignum_st* %RR, %struct.bn_mont_ctx_st* %3, %struct.bignum_ctx* %4), !dbg !281
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
REACHABLE SOURCE:   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
REACHABLE SOURCE:   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
REACHABLE SOURCE:   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSOURCEGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Source:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7f9fad02ddd0
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
Creating ConsElem Map for :	Node0x7f9faacba310 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacba310:s0 -> Node0x7f9faacba040;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacba040 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SGMRE\n@BN_value_one.const_one = internal constant %struct.bignum_st \{ i64* @BN_value_one.data_one, i32 1, i32 1, i32 0, i32 2 \}, align 8\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacba040:s0 -> Node0x7f9faada8820;
Creating ConsElem Map for :	Node0x7f9faacba450 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacba450:s0 -> Node0x7f9faacba040;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacba040 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SGMRE\n@BN_value_one.const_one = internal constant %struct.bignum_st \{ i64* @BN_value_one.data_one, i32 1, i32 1, i32 0, i32 2 \}, align 8\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacba040:s0 -> Node0x7f9faada8820;
Creating ConsElem Map for :	Node0x7f9faacba590 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacba590:s0 -> Node0x7f9faacba1f0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Creating ConsElem Map for :	Node0x7f9faacba6d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacba6d0:s0 -> Node0x7f9faacba280;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7f9faacba280 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Running on BN_is_bit_set in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x7f9faacb18d0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb18d0:s0 -> Node0x7f9faacb16e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb16e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb16e0:s0 -> Node0x7f9faacb1d10;
Creating ConsElem Map for :	Node0x7f9faacb1a10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb1800 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb1b10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb1c10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !286
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad0582b0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !294
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad058190
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
Running on BN_get_flags in context [BN_mod_exp_mont ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on BN_mod_exp_mont_consttime in context [BN_mod_exp_mont ]
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 124, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 622), !dbg !309
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %9), !dbg !337
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !336
REACHABLE SOURCE:   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !336
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !336
Using taint reachable signature for:   %call15 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !345
Using taint reachable signature for:   %call19 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %12, %struct.bignum_st* %13, %struct.bignum_ctx* %14), !dbg !356
RSINKGEP INSTRUCTION   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !352
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !354
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !355
REACHABLE SOURCE:   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !352
REACHABLE SOURCE:   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !354
REACHABLE SOURCE:   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !355
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !352
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !354
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !355
Using taint reachable signature for:   %call56 = call i8* @CRYPTO_malloc(i64 %conv55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 718), !dbg !386
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Unsupported intrinsic: llvm.objectsize
Using taint reachable signature for:   %call63 = call i8* @__memset_chk(i8* %34, i32 0, i64 %conv62, i64 %37) #5, !dbg !394
RSINKGEP INSTRUCTION   %34 = load i8*, i8** %powerbuf, align 8, !dbg !394
REACHABLE SOURCE:   %34 = load i8*, i8** %powerbuf, align 8, !dbg !394
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load i8*, i8** %powerbuf, align 8, !dbg !394
Using taint reachable signature for:   %call114 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %am, %struct.bignum_st* %70, %struct.bignum_st* %71, %struct.bignum_ctx* %72), !dbg !484
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !484
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !484
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !484
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !484
REACHABLE SOURCE:   %70 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !484
REACHABLE SOURCE:   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !484
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !484
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !484
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !484
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call139 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %85, %struct.bignum_ctx* %86), !dbg !526
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !522
RSINKGEP INSTRUCTION   %86 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !525
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !522
REACHABLE SOURCE:   %86 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !525
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %85 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !522
RSINKGEP INSTRUCTION   %86 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !525
Using taint reachable signature for:   %call151 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %92, %struct.bignum_ctx* %93), !dbg !548
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %92 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !544
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !547
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %92 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !544
REACHABLE SOURCE:   %93 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !547
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %92 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !544
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !547
Using taint reachable signature for:   %call184 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %115, %struct.bignum_ctx* %116), !dbg !611
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %115 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !607
RSINKGEP INSTRUCTION   %116 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !610
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %115 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !607
REACHABLE SOURCE:   %116 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !610
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %115 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !607
RSINKGEP INSTRUCTION   %116 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !610
Using taint reachable signature for:   %call199 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %126, %struct.bignum_ctx* %127), !dbg !636
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !635
RSINKGEP INSTRUCTION   %126 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !633
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %127 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !635
REACHABLE SOURCE:   %126 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !633
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !635
RSINKGEP INSTRUCTION   %126 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !633
Using taint reachable signature for:   %call203 = call i32 @BN_from_montgomery(%struct.bignum_st* %128, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %129, %struct.bignum_ctx* %130), !dbg !643
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %128 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !639
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !641
RSINKGEP INSTRUCTION   %130 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !642
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %128 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !639
REACHABLE SOURCE:   %129 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !641
REACHABLE SOURCE:   %130 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !642
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %128 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !639
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !641
RSINKGEP INSTRUCTION   %130 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !642
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %132), !dbg !653
RSINKGEP INSTRUCTION   %132 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !652
REACHABLE SOURCE:   %132 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !652
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %132 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !652
Using taint reachable signature for:   call void @OPENSSL_cleanse(i8* %134, i64 %conv214), !dbg !661
RSINKGEP INSTRUCTION   %134 = load i8*, i8** %powerbuf, align 8, !dbg !658
REACHABLE SOURCE:   %134 = load i8*, i8** %powerbuf, align 8, !dbg !658
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %134 = load i8*, i8** %powerbuf, align 8, !dbg !658
Using taint reachable signature for:   call void @CRYPTO_free(i8* %136, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1091), !dbg !662
RSINKGEP INSTRUCTION   %136 = load i8*, i8** %powerbufFree, align 8, !dbg !662
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE:   %136 = load i8*, i8** %powerbufFree, align 8, !dbg !662
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacd2720 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %136 = load i8*, i8** %powerbufFree, align 8, !dbg !662
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %137), !dbg !665
RSINKGEP INSTRUCTION   %137 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !664
REACHABLE SOURCE:   %137 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !664
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %137 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !664
Creating ConsElem Map for :	Node0x7f9faacc1870 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc1870:s0 -> Node0x7f9faacc13f0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacc13f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc13f0:s0 -> Node0x7f9faacc3400;
Creating ConsElem Map for :	Node0x7f9faacc1900 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc1900:s0 -> Node0x7f9faacc1510;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacc1510 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc1510:s0 -> Node0x7f9faacc3500;
Creating ConsElem Map for :	Node0x7f9faacc1990 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc1990:s0 -> Node0x7f9faacc15a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacc15a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc15a0:s0 -> Node0x7f9faacc3300;
Creating ConsElem Map for :	Node0x7f9faacc1a20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc1a20:s0 -> Node0x7f9faacc1630;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacc1630 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc1630:s0 -> Node0x7f9faacc2f30;
Creating ConsElem Map for :	Node0x7f9faacc1ab0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc1ab0:s0 -> Node0x7f9faacc16c0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x7f9faacc1bc0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc1bc0:s0 -> Node0x7f9faacc1750;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacc1750 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Creating ConsElem Map for :	Node0x7f9faacc1f00 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc2300 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc2300:s0 -> Node0x7f9faacc1750;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x7f9faacc1750 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Creating ConsElem Map for :	Node0x7f9faacc2540 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc2540:s0 -> Node0x7f9faacc2d90;
EDGE: [0: tymap-size 1]:i8
	Node0x7f9faacc2d90 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n}"];
Creating ConsElem Map for :	Node0x7f9faacc2680 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc2780 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc2780:s0 -> Node0x7f9faacc2d90;
EDGE: [0: tymap-size 1]:i8
	Node0x7f9faacc2d90 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n}"];
Creating ConsElem Map for :	Node0x7f9faacc17e0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !313
[Source:]   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !313
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !312
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad05fc00
Creating ConsElem Map for :	Node0x7f9faacc2200 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc1e00 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc2000 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc2440 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !408
[Sink:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !408
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !408
[Sink:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !408
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %d73 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !410
[Source:]   %d73 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !410
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !413
[Sink:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !413
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !413
[Sink:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !413
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !415
[Sink:]   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !415
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !415
[Sink:]   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !415
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !417
[Sink:]   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !417
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !417
[Sink:]   %top77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !417
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !420
[Sink:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !420
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !420
[Sink:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !420
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !422
[Sink:]   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !422
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !422
[Sink:]   %dmax78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !422
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !424
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !424
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !424
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !424
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !426
[Sink:]   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !426
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !426
[Sink:]   %neg79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !426
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !428
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !428
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 20
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !428
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !428
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 20
DSINKGEP INSTRUCTION   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !430
[Sink:]   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !430
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 20
DSINKGEP INSTRUCTION   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !430
[Sink:]   %flags80 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !430
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 20
DSOURCEGEP INSTRUCTION   %d82 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 0, !dbg !436
[Source:]   %d82 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 0, !dbg !436
StructType: allocation intermediate:   %47 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !435
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9fad05fb90
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %48, i64 %idxprom, !dbg !435
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %48, i64 %idxprom, !dbg !435
DSOURCEGEP INSTRUCTION   %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !441
[Source:]   %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !441
StructType: allocation intermediate:   %50 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !439
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9fad05fb90
DSOURCEGEP INSTRUCTION   %arrayidx87 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !439
[Source:]   %arrayidx87 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !439
 allocation intermediate:   %51 = load i64*, i64** %d86, align 8, !dbg !441
=>  %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !441
 allocation intermediate:   %d86 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 0, !dbg !441
=>  %50 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !439
 allocation intermediate:   %50 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !439
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9fad05fb90
DSOURCEGEP INSTRUCTION   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !443
[Source:]   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !443
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !444
[Sink:]   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !444
 allocation intermediate:   %53 = load i64*, i64** %d89, align 8, !dbg !443
=>  %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !443
 allocation intermediate:   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !443
=>  %tmp = alloca %struct.bignum_st, align 8
FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !444
[Sink:]   %arrayidx90 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !444
 allocation intermediate:   %53 = load i64*, i64** %d89, align 8, !dbg !443
=>  %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !443
 allocation intermediate:   %d89 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !443
=>  %tmp = alloca %struct.bignum_st, align 8
FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Creating ConsElem Map for :	Node0x7f9faacc1d00 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d94 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %57, i32 0, i32 0, !dbg !456
[Source:]   %d94 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %57, i32 0, i32 0, !dbg !456
StructType: allocation intermediate:   %57 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !455
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9fad05fb90
DSOURCEGEP INSTRUCTION   %arrayidx95 = getelementptr inbounds i64, i64* %58, i64 %idxprom93, !dbg !455
[Source:]   %arrayidx95 = getelementptr inbounds i64, i64* %58, i64 %idxprom93, !dbg !455
DSOURCEGEP INSTRUCTION   %d98 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !460
[Source:]   %d98 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !460
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !459
[Sink:]   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !459
DSINKGEP INSTRUCTION   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !459
[Sink:]   %arrayidx99 = getelementptr inbounds i64, i64* %61, i64 %idxprom97, !dbg !459
DSINKGEP INSTRUCTION   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !465
[Sink:]   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !465
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !465
[Sink:]   %top100 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !465
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %neg108 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %66, i32 0, i32 3, !dbg !477
[Source:]   %neg108 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %66, i32 0, i32 3, !dbg !477
StructType: allocation intermediate:   %66 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !475
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9fad05f3d0
Creating ConsElem Map for :	Node0x7f9faacc2100 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on BN_is_odd in context [BN_mod_exp_mont ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb6030
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !274
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
Running on BN_num_bits in context [BN_mod_exp_mont ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !271
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad053bb0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad053b30
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
Running on BN_is_one in context [BN_mod_exp_mont ]
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9fad0558b0
Running on BN_set_word in context [BN_mod_exp_mont ]
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9faae94a10
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Running on BN_ucmp in context [BN_mod_exp_mont ]
Creating ConsElem Map for :	Node0x7f9faaccba30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccba30:s0 -> Node0x7f9faaccb630;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaccb630 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaccb630:s0 -> Node0x7f9faaccc230;
Creating ConsElem Map for :	Node0x7f9faaccbb70 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccbb70:s0 -> Node0x7f9faaccb7c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaccb7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaccb7c0:s0 -> Node0x7f9faaccc330;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !282
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !282
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad100200
DSOURCEGEP INSTRUCTION   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 1, !dbg !284
[Source:]   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 1, !dbg !284
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !283
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad100730
Creating ConsElem Map for :	Node0x7f9faaccbcb0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faaccb930 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !294
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !294
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !293
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faaffc050
Creating ConsElem Map for :	Node0x7f9faaccbfb0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccbfb0:s0 -> Node0x7f9faaccc230;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faaccc230 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
DSOURCEGEP INSTRUCTION   %d2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !297
[Source:]   %d2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !297
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !296
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9fad100710
Creating ConsElem Map for :	Node0x7f9faaccc0f0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaccc0f0:s0 -> Node0x7f9faaccc330;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faaccc330 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
DSOURCEGEP INSTRUCTION   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %10, i32 0, i32 1, !dbg !301
[Source:]   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %10, i32 0, i32 1, !dbg !301
StructType: allocation intermediate:   %10 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !299
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad100200
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %14, i64 %idxprom, !dbg !311
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %14, i64 %idxprom, !dbg !311
Creating ConsElem Map for :	Node0x7f9faaccbdb0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx7 = getelementptr inbounds i64, i64* %17, i64 %idxprom6, !dbg !314
[Source:]   %arrayidx7 = getelementptr inbounds i64, i64* %17, i64 %idxprom6, !dbg !314
Creating ConsElem Map for :	Node0x7f9faaccbeb0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Running on BN_is_zero in context [BN_mod_exp_mont ]
Creating ConsElem Map for :	Node0x7f9faaca8780 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca8780:s0 -> Node0x7f9faaca8660;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaca8660 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca8660:s0 -> Node0x7f9faafa16e0;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad102480
Running on BN_to_montgomery in context [BN_mod_exp_mont ]
Using taint reachable signature for:   %call = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %0, %struct.bignum_st* %1, %struct.bignum_st* %RR, %struct.bn_mont_ctx_st* %3, %struct.bignum_ctx* %4), !dbg !281
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
REACHABLE SOURCE:   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
REACHABLE SOURCE:   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
REACHABLE SOURCE:   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSOURCEGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Source:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7f9fad02ddd0
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
Running on bn_wexpand in context [BN_mod_exp_mont ]
Creating ConsElem Map for :	Node0x7f9faacab890 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacab890:s0 -> Node0x7f9faacab770;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacab770 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacab770:s0 -> Node0x7f9faafa09c0;
Creating ConsElem Map for :	Node0x7f9faacab920 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !273
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9faadc7ba0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
Running on bn_correct_top in context [BN_mod_exp_mont ]
Creating ConsElem Map for :	Node0x7f9faacca6b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacca6b0:s0 -> Node0x7f9faacca4c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !274
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !274
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad072680
Creating ConsElem Map for :	Node0x7f9faacca930 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !283
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !283
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad0725e0
Creating ConsElem Map for :	Node0x7f9faacca7f0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacca7f0:s0 -> Node0x7f9faafa1340;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa1340 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSINKGEP INSTRUCTION   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
[Sink:]   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !302
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
[Sink:]   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !302
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %top6 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %13, i32 0, i32 1, !dbg !308
[Source:]   %top6 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %13, i32 0, i32 1, !dbg !308
StructType: allocation intermediate:   %13 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !306
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad072680
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !311
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !311
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 16
Running on BN_value_one in context [BN_mod_exp_mont ]
Running on BN_is_bit_set in context [BN_mod_exp_mont ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !286
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad0582b0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !294
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad058190
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
Running on BN_get_flags in context [BN_mod_exp_recp ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on BN_num_bits in context [BN_mod_exp_recp ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !271
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad053bb0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad053b30
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
Running on BN_is_one in context [BN_mod_exp_recp ]
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9fad0558b0
Running on BN_set_word in context [BN_mod_exp_recp ]
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9faae94a10
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Running on BN_copy in context [BN_mod_exp_recp ]
Creating ConsElem Map for :	Node0x7f9faaca9630 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca9630:s0 -> Node0x7f9faaca9320;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
Creating ConsElem Map for :	Node0x7f9faaca9770 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca9770:s0 -> Node0x7f9faaca9320;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
Creating ConsElem Map for :	Node0x7f9faaca94f0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca94f0:s0 -> Node0x7f9faaca9320;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !287
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !287
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !286
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad076e30
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !293
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !293
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !292
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9fad076d90
Creating ConsElem Map for :	Node0x7f9faaca99b0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca99b0:s0 -> Node0x7f9faacaa130;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
DSOURCEGEP INSTRUCTION   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !296
[Source:]   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !296
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !295
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9fad076d90
Creating ConsElem Map for :	Node0x7f9faaca9af0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faaca9af0:s0 -> Node0x7f9faacaa130;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
DSOURCEGEP INSTRUCTION   %top5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %10, i32 0, i32 1, !dbg !300
[Source:]   %top5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %10, i32 0, i32 1, !dbg !300
StructType: allocation intermediate:   %10 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !298
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad076e30
Creating ConsElem Map for :	Node0x7f9faaca98b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %13, i64 0, !dbg !317
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %13, i64 0, !dbg !317
 allocation intermediate:   %13 = load i64*, i64** %B, align 8, !dbg !317
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faaca9c30 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx7 = getelementptr inbounds i64, i64* %15, i64 1, !dbg !319
[Source:]   %arrayidx7 = getelementptr inbounds i64, i64* %15, i64 1, !dbg !319
 allocation intermediate:   %15 = load i64*, i64** %B, align 8, !dbg !319
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faaca9d30 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx8 = getelementptr inbounds i64, i64* %17, i64 2, !dbg !321
[Source:]   %arrayidx8 = getelementptr inbounds i64, i64* %17, i64 2, !dbg !321
 allocation intermediate:   %17 = load i64*, i64** %B, align 8, !dbg !321
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faaca9e30 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx9 = getelementptr inbounds i64, i64* %19, i64 3, !dbg !323
[Source:]   %arrayidx9 = getelementptr inbounds i64, i64* %19, i64 3, !dbg !323
 allocation intermediate:   %19 = load i64*, i64** %B, align 8, !dbg !323
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faaca9f30 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !326
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !326
 allocation intermediate:   %22 = load i64*, i64** %A, align 8, !dbg !326
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
Created 1 constraint variable(s) for node of size 8
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !326
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !326
 allocation intermediate:   %22 = load i64*, i64** %A, align 8, !dbg !326
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx11 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !329
[Sink:]   %arrayidx11 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !329
 allocation intermediate:   %24 = load i64*, i64** %A, align 8, !dbg !329
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
DSINKGEP INSTRUCTION   %arrayidx11 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !329
[Sink:]   %arrayidx11 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !329
 allocation intermediate:   %24 = load i64*, i64** %A, align 8, !dbg !329
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
DSINKGEP INSTRUCTION   %arrayidx12 = getelementptr inbounds i64, i64* %26, i64 2, !dbg !332
[Sink:]   %arrayidx12 = getelementptr inbounds i64, i64* %26, i64 2, !dbg !332
 allocation intermediate:   %26 = load i64*, i64** %A, align 8, !dbg !332
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
DSINKGEP INSTRUCTION   %arrayidx12 = getelementptr inbounds i64, i64* %26, i64 2, !dbg !332
[Sink:]   %arrayidx12 = getelementptr inbounds i64, i64* %26, i64 2, !dbg !332
 allocation intermediate:   %26 = load i64*, i64** %A, align 8, !dbg !332
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
DSINKGEP INSTRUCTION   %arrayidx13 = getelementptr inbounds i64, i64* %28, i64 3, !dbg !335
[Sink:]   %arrayidx13 = getelementptr inbounds i64, i64* %28, i64 3, !dbg !335
 allocation intermediate:   %28 = load i64*, i64** %A, align 8, !dbg !335
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 3
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
Tainting at offset: 3
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
DSINKGEP INSTRUCTION   %arrayidx13 = getelementptr inbounds i64, i64* %28, i64 3, !dbg !335
[Sink:]   %arrayidx13 = getelementptr inbounds i64, i64* %28, i64 3, !dbg !335
 allocation intermediate:   %28 = load i64*, i64** %A, align 8, !dbg !335
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 3
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
Tainting at offset: 3
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
DSOURCEGEP INSTRUCTION   %top15 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %32, i32 0, i32 1, !dbg !343
[Source:]   %top15 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %32, i32 0, i32 1, !dbg !343
StructType: allocation intermediate:   %32 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !342
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad076e30
DSOURCEGEP INSTRUCTION   %arrayidx16 = getelementptr inbounds i64, i64* %34, i64 2, !dbg !346
[Source:]   %arrayidx16 = getelementptr inbounds i64, i64* %34, i64 2, !dbg !346
 allocation intermediate:   %34 = load i64*, i64** %B, align 8, !dbg !346
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64,   array: CMRE: elem 0::0x7f9fad10aa70
DSINKGEP INSTRUCTION   %arrayidx17 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !348
[Sink:]   %arrayidx17 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !348
 allocation intermediate:   %36 = load i64*, i64** %A, align 8, !dbg !348
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
DSINKGEP INSTRUCTION   %arrayidx17 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !348
[Sink:]   %arrayidx17 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !348
 allocation intermediate:   %36 = load i64*, i64** %A, align 8, !dbg !348
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
DSOURCEGEP INSTRUCTION   %arrayidx19 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !350
[Source:]   %arrayidx19 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !350
 allocation intermediate:   %37 = load i64*, i64** %B, align 8, !dbg !350
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64,   array: CMRE: elem 0::0x7f9fad10aa70
DSINKGEP INSTRUCTION   %arrayidx20 = getelementptr inbounds i64, i64* %39, i64 1, !dbg !351
[Sink:]   %arrayidx20 = getelementptr inbounds i64, i64* %39, i64 1, !dbg !351
 allocation intermediate:   %39 = load i64*, i64** %A, align 8, !dbg !351
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
DSINKGEP INSTRUCTION   %arrayidx20 = getelementptr inbounds i64, i64* %39, i64 1, !dbg !351
[Sink:]   %arrayidx20 = getelementptr inbounds i64, i64* %39, i64 1, !dbg !351
 allocation intermediate:   %39 = load i64*, i64** %A, align 8, !dbg !351
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
DSOURCEGEP INSTRUCTION   %arrayidx22 = getelementptr inbounds i64, i64* %40, i64 0, !dbg !353
[Source:]   %arrayidx22 = getelementptr inbounds i64, i64* %40, i64 0, !dbg !353
 allocation intermediate:   %40 = load i64*, i64** %B, align 8, !dbg !353
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64,   array: CMRE: elem 0::0x7f9fad10aa70
DSINKGEP INSTRUCTION   %arrayidx23 = getelementptr inbounds i64, i64* %42, i64 0, !dbg !354
[Sink:]   %arrayidx23 = getelementptr inbounds i64, i64* %42, i64 0, !dbg !354
 allocation intermediate:   %42 = load i64*, i64** %A, align 8, !dbg !354
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx23 = getelementptr inbounds i64, i64* %42, i64 0, !dbg !354
[Sink:]   %arrayidx23 = getelementptr inbounds i64, i64* %42, i64 0, !dbg !354
 allocation intermediate:   %42 = load i64*, i64** %A, align 8, !dbg !354
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacaa130 [shape=record,shape=Mrecord,label="{0: i64,   array: MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %top29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %45, i32 0, i32 1, !dbg !365
[Source:]   %top29 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %45, i32 0, i32 1, !dbg !365
StructType: allocation intermediate:   %45 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !364
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad076e30
DSINKGEP INSTRUCTION   %top30 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 1, !dbg !367
[Sink:]   %top30 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 1, !dbg !367
StructType:::IS STRUCT TY:: allocation intermediate:   %47 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !366
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top30 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 1, !dbg !367
[Sink:]   %top30 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %47, i32 0, i32 1, !dbg !367
StructType:::IS STRUCT TY:: allocation intermediate:   %47 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !366
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %48, i32 0, i32 3, !dbg !370
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %48, i32 0, i32 3, !dbg !370
StructType: allocation intermediate:   %48 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !369
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[16,20]0x7f9fad076f70
DSINKGEP INSTRUCTION   %neg31 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 3, !dbg !372
[Sink:]   %neg31 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 3, !dbg !372
StructType:::IS STRUCT TY:: allocation intermediate:   %50 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !371
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg31 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 3, !dbg !372
[Sink:]   %neg31 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %50, i32 0, i32 3, !dbg !372
StructType:::IS STRUCT TY:: allocation intermediate:   %50 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !371
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faaca9320 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faaca9320:s0 -> Node0x7f9faacaa130;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Running on BN_is_zero in context [BN_mod_exp_recp ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad102480
Running on BN_is_bit_set in context [BN_mod_exp_recp ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !286
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad0582b0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !294
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad058190
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
Running on BN_is_zero in context [BN_num_bits ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CMRE[8,12]0x7f9fad102480
Running on BN_num_bits_word in context [BN_num_bits ]
Creating ConsElem Map for :	Node0x7f9faaca8090 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom, !dbg !287
[Source:]   %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom, !dbg !287
Created 256 constraint variable(s) for node of size 1
Creating ConsElem Map for :	Node0x7f9faaca7f70 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom10, !dbg !293
[Source:]   %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom10, !dbg !293
DSOURCEGEP INSTRUCTION   %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom20, !dbg !305
[Source:]   %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom20, !dbg !305
DSOURCEGEP INSTRUCTION   %arrayidx28 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom27, !dbg !311
[Source:]   %arrayidx28 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom27, !dbg !311
DSOURCEGEP INSTRUCTION   %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom40, !dbg !327
[Source:]   %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom40, !dbg !327
DSOURCEGEP INSTRUCTION   %arrayidx48 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom47, !dbg !333
[Source:]   %arrayidx48 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom47, !dbg !333
DSOURCEGEP INSTRUCTION   %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom57, !dbg !344
[Source:]   %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom57, !dbg !344
DSOURCEGEP INSTRUCTION   %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom63, !dbg !349
[Source:]   %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom63, !dbg !349
Running on BN_abs_is_word in context [BN_is_one ]
Creating ConsElem Map for :	Node0x7f9faacb9a90 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb9a90:s0 -> Node0x7f9faacb9970;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Creating ConsElem Map for :	Node0x7f9faacb9b20 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !271
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !276
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !276
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !275
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !275
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !275
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !276
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !276
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !276
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !275
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !275
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSOURCEGEP INSTRUCTION   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 1, !dbg !284
[Source:]   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 1, !dbg !284
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !283
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
Running on bn_expand in context [BN_set_word ]
Creating ConsElem Map for :	Node0x7f9faacb0f20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb0f20:s0 -> Node0x7f9faacb0c80;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb0c80 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0c80:s0 -> Node0x7f9faacb1160;
Creating ConsElem Map for :	Node0x7f9faacb1060 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacb0de0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacb0de0:s0 -> Node0x7f9faacb0c80;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacb0c80 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0c80:s0 -> Node0x7f9faacb1160;
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 2, !dbg !282
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 2, !dbg !282
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[12,16]0x7f9fad1531e0
Running on BN_is_odd in context [BN_mod_exp_mont_consttime ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !270
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb6030
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !274
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb60a0
Running on BN_num_bits in context [BN_mod_exp_mont_consttime ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !271
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad053bb0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !283
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad053b30
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !282
Running on BN_is_one in context [BN_mod_exp_mont_consttime ]
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9faafb1220
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x7f9fad0558b0
Running on BN_set_word in context [BN_mod_exp_mont_consttime ]
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !277
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x7f9faae94a10
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !281
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !282
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !282
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !286
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !285
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb0100 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb0100:s0 -> Node0x7f9faacb0600;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Running on BN_value_one in context [BN_mod_exp_mont_consttime ]
Running on BN_to_montgomery in context [BN_mod_exp_mont_consttime ]
Using taint reachable signature for:   %call = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %0, %struct.bignum_st* %1, %struct.bignum_st* %RR, %struct.bn_mont_ctx_st* %3, %struct.bignum_ctx* %4), !dbg !281
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
REACHABLE SOURCE:   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
REACHABLE SOURCE:   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
REACHABLE SOURCE:   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacc16c0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSOURCEGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Source:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x7f9fad02ddd0
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !276
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !275
Added child elem: 	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !280
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !278
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !277
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x7f9faacba1f0 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !279
Running on BN_ucmp in context [BN_mod_exp_mont_consttime ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !282
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !282
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !281
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad100200
DSOURCEGEP INSTRUCTION   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 1, !dbg !284
[Source:]   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 1, !dbg !284
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !283
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad100730
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !294
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !294
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !293
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faaffc050
DSOURCEGEP INSTRUCTION   %d2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !297
[Source:]   %d2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !297
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !296
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9fad100710
DSOURCEGEP INSTRUCTION   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %10, i32 0, i32 1, !dbg !301
[Source:]   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %10, i32 0, i32 1, !dbg !301
StructType: allocation intermediate:   %10 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !299
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9fad100200
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %14, i64 %idxprom, !dbg !311
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %14, i64 %idxprom, !dbg !311
DSOURCEGEP INSTRUCTION   %arrayidx7 = getelementptr inbounds i64, i64* %17, i64 %idxprom6, !dbg !314
[Source:]   %arrayidx7 = getelementptr inbounds i64, i64* %17, i64 %idxprom6, !dbg !314
Running on MOD_EXP_CTIME_COPY_TO_PREBUF in context [BN_mod_exp_mont_consttime ]
Creating ConsElem Map for :	Node0x7f9faacc6b80 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc6b80:s0 -> Node0x7f9faacc69d0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacc69d0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc69d0:s0 -> Node0x7f9faafa1460;
Creating ConsElem Map for :	Node0x7f9faacc6c10 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc6ca0 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc6ca0:s0 -> Node0x7f9faafa1460;
EDGE: [0: tymap-size 1]:i8
	Node0x7f9faafa1460 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7f9faacc6d30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc6dc0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc6f70 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc7000 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc7000:s0 -> Node0x7f9faafa1460;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa1460 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !292
[Source:]   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !292
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !291
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad16d130
DSOURCEGEP INSTRUCTION   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !296
[Source:]   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !296
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !295
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad16d130
Creating ConsElem Map for :	Node0x7f9faacc6e50 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc6ee0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 0, !dbg !312
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 0, !dbg !312
StructType: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !311
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad16d090
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %13, i64 %idxprom, !dbg !311
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %13, i64 %idxprom, !dbg !311
DSINKGEP INSTRUCTION   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !314
[Sink:]   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !314
DSINKGEP INSTRUCTION   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !314
[Sink:]   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !314
Running on BN_is_bit_set in context [BN_mod_exp_mont_consttime ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !288
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !286
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x7f9fad0582b0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !295
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !294
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x7f9fad058190
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !294
Running on MOD_EXP_CTIME_COPY_FROM_PREBUF in context [BN_mod_exp_mont_consttime ]
Creating ConsElem Map for :	Node0x7f9faacc78e0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc78e0:s0 -> Node0x7f9faacc76a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacc76a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc76a0:s0 -> Node0x7f9faafa13d0;
Creating ConsElem Map for :	Node0x7f9faacc79f0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc7af0 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc7af0:s0 -> Node0x7f9faafa13d0;
EDGE: [0: tymap-size 1]:i8
	Node0x7f9faafa13d0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7f9faacc7c30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc7d30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8030 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8130 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacc8130:s0 -> Node0x7f9faafa13d0;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa13d0 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7f9faacc7850 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc7e30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8270 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc7f30 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %11, i64 %idxprom, !dbg !322
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %11, i64 %idxprom, !dbg !322
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %19, i32 0, i32 0, !dbg !337
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %19, i32 0, i32 0, !dbg !337
StructType: allocation intermediate:   %19 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !336
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad173000
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !336
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !336
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !336
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !336
Creating ConsElem Map for :	Node0x7f9faacc8370 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8470 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8570 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8670 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8770 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc8870 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 %idxprom44, !dbg !415
[Source:]   %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 %idxprom44, !dbg !415
DSOURCEGEP INSTRUCTION   %arrayidx50 = getelementptr inbounds i64, i64* %44, i64 %idxprom49, !dbg !422
[Source:]   %arrayidx50 = getelementptr inbounds i64, i64* %44, i64 %idxprom49, !dbg !422
DSOURCEGEP INSTRUCTION   %arrayidx56 = getelementptr inbounds i64, i64* %49, i64 %idxprom55, !dbg !430
[Source:]   %arrayidx56 = getelementptr inbounds i64, i64* %49, i64 %idxprom55, !dbg !430
DSOURCEGEP INSTRUCTION   %arrayidx62 = getelementptr inbounds i64, i64* %54, i64 %idxprom61, !dbg !438
[Source:]   %arrayidx62 = getelementptr inbounds i64, i64* %54, i64 %idxprom61, !dbg !438
DSOURCEGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %63, i32 0, i32 0, !dbg !456
[Source:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %63, i32 0, i32 0, !dbg !456
StructType: allocation intermediate:   %63 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !455
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad173000
DSINKGEP INSTRUCTION   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !455
[Sink:]   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !455
DSINKGEP INSTRUCTION   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !455
[Sink:]   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !455
DSINKGEP INSTRUCTION   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !465
[Sink:]   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !465
StructType:::IS STRUCT TY:: allocation intermediate:   %69 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !464
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacc76a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc76a0:s0 -> Node0x7f9faafa13d0;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !465
[Sink:]   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !465
StructType:::IS STRUCT TY:: allocation intermediate:   %69 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !464
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacc76a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacc76a0:s0 -> Node0x7f9faafa13d0;
Trying to find element at offset 8
Running on bn_expand2 in context [bn_wexpand ]
Using taint reachable signature for:   call void @OPENSSL_cleanse(i8* %10, i64 %mul), !dbg !297
RSINKGEP INSTRUCTION   %10 = bitcast i64* %9 to i8*, !dbg !291
REACHABLE SOURCE:   %10 = bitcast i64* %9 to i8*, !dbg !291
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %10 = bitcast i64* %9 to i8*, !dbg !291
Creating ConsElem Map for :	Node0x7f9faacac110 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacac110:s0 -> Node0x7f9faacabe40;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Creating ConsElem Map for :	Node0x7f9faacac250 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !274
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !274
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !273
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9fad17f040
Creating ConsElem Map for :	Node0x7f9faacac350 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacac350:s0 -> Node0x7f9faafa0a90;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa0a90 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7f9faacabfd0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacabfd0:s0 -> Node0x7f9faacabe40;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !289
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !289
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !287
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad17ef00
DSOURCEGEP INSTRUCTION   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !293
[Source:]   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !293
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !291
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad17ef00
DSOURCEGEP INSTRUCTION   %dmax5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 2, !dbg !295
[Source:]   %dmax5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 2, !dbg !295
StructType: allocation intermediate:   %11 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !294
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9fad17f040
DSINKGEP INSTRUCTION   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
[Sink:]   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !302
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
[Sink:]   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !302
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
[Sink:]   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
StructType:::IS STRUCT TY:: allocation intermediate:   %17 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !306
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 12
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
[Sink:]   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
StructType:::IS STRUCT TY:: allocation intermediate:   %17 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !306
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 12
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
Running on bn_wexpand in context [BN_copy ]
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !273
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9faadc7ba0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
Running on BN_get_flags in context [BN_copy ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on BN_set_flags in context [BN_copy ]
Creating ConsElem Map for :	Node0x7f9faacafbf0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacafbf0:s0 -> Node0x7f9faacafad0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacafad0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacafad0:s0 -> Node0x7f9faafa0930;
Creating ConsElem Map for :	Node0x7f9faacafcc0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 4, !dbg !273
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 4, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !272
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[20,24]0x7f9fad183cd0
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 4, !dbg !273
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 4, !dbg !273
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !272
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 20
	Node0x7f9faacafad0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacafad0:s0 -> Node0x7f9faafa0930;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 4, !dbg !273
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 4, !dbg !273
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !272
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 20
	Node0x7f9faacafad0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacafad0:s0 -> Node0x7f9faafa0930;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
Running on bn_expand2 in context [bn_expand ]
Using taint reachable signature for:   call void @OPENSSL_cleanse(i8* %10, i64 %mul), !dbg !297
RSINKGEP INSTRUCTION   %10 = bitcast i64* %9 to i8*, !dbg !291
REACHABLE SOURCE:   %10 = bitcast i64* %9 to i8*, !dbg !291
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %10 = bitcast i64* %9 to i8*, !dbg !291
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !274
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !274
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !273
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9fad17f040
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !289
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !289
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !287
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad17ef00
DSOURCEGEP INSTRUCTION   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !293
[Source:]   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !293
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !291
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad17ef00
DSOURCEGEP INSTRUCTION   %dmax5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 2, !dbg !295
[Source:]   %dmax5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 2, !dbg !295
StructType: allocation intermediate:   %11 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !294
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9fad17f040
DSINKGEP INSTRUCTION   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
[Sink:]   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !302
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
[Sink:]   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !302
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
[Sink:]   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
StructType:::IS STRUCT TY:: allocation intermediate:   %17 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !306
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 12
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
[Sink:]   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !307
StructType:::IS STRUCT TY:: allocation intermediate:   %17 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !306
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 12
	Node0x7f9faacabe40 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacabe40:s0 -> Node0x7f9faafa0a90;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
Running on bn_wexpand in context [MOD_EXP_CTIME_COPY_FROM_PREBUF ]
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !273
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x7f9faadc7ba0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[12,16]0x7f9faafb1180
Running on constant_time_eq_int in context [MOD_EXP_CTIME_COPY_FROM_PREBUF ]
Creating ConsElem Map for :	Node0x7f9faacc9970 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc9a90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on bn_correct_top in context [MOD_EXP_CTIME_COPY_FROM_PREBUF ]
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !274
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !274
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad072680
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !283
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !283
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad0725e0
DSINKGEP INSTRUCTION   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
[Sink:]   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !302
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
[Sink:]   %top4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 1, !dbg !303
StructType:::IS STRUCT TY:: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !302
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %top6 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %13, i32 0, i32 1, !dbg !308
[Source:]   %top6 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %13, i32 0, i32 1, !dbg !308
StructType: allocation intermediate:   %13 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !306
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad072680
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !311
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 3, !dbg !312
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !311
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x7f9faacca4c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacca4c0:s0 -> Node0x7f9faafa1340;
Trying to find element at offset 16
Running on bn_expand_internal in context [bn_expand2 ]
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 120, i32 114, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 255), !dbg !283
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Creating ConsElem Map for :	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 120, i32 105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 259), !dbg !290
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   %call6 = call i8* @CRYPTO_secure_zalloc(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 263), !dbg !297
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   %call9 = call i8* @CRYPTO_zalloc(i64 %mul8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 265), !dbg !301
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 120, i32 65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 267), !dbg !308
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Creating ConsElem Map for :	Node0x7f9faacad180 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacad180:s0 -> Node0x7f9faacacf50;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacacf50 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacacf50:s0 -> Node0x7f9faafa1650;
Creating ConsElem Map for :	Node0x7f9faacad2c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacad500 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacad500:s0 -> Node0x7f9faafa1650;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7f9faacad070 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacad070:s0 -> Node0x7f9faafa1650;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x7f9faacad3c0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacad3c0:s0 -> Node0x7f9faafa1650;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !312
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !312
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !311
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad099e90
Creating ConsElem Map for :	Node0x7f9faacad640 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacad640:s0 -> Node0x7f9faafa1650;
EDGE: [0: tymap-size 1]:i64
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 1, !dbg !321
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 1, !dbg !321
StructType: allocation intermediate:   %11 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !318
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad09a570
Creating ConsElem Map for :	Node0x7f9faacad780 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %14, i64 0, !dbg !338
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %14, i64 0, !dbg !338
 allocation intermediate:   %14 = load i64*, i64** %B, align 8, !dbg !338
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faacad880 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx20 = getelementptr inbounds i64, i64* %16, i64 1, !dbg !340
[Source:]   %arrayidx20 = getelementptr inbounds i64, i64* %16, i64 1, !dbg !340
 allocation intermediate:   %16 = load i64*, i64** %B, align 8, !dbg !340
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faacad980 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx21 = getelementptr inbounds i64, i64* %18, i64 2, !dbg !342
[Source:]   %arrayidx21 = getelementptr inbounds i64, i64* %18, i64 2, !dbg !342
 allocation intermediate:   %18 = load i64*, i64** %B, align 8, !dbg !342
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faacada80 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx22 = getelementptr inbounds i64, i64* %20, i64 3, !dbg !344
[Source:]   %arrayidx22 = getelementptr inbounds i64, i64* %20, i64 3, !dbg !344
 allocation intermediate:   %20 = load i64*, i64** %B, align 8, !dbg !344
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
Creating ConsElem Map for :	Node0x7f9faacadb80 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !347
[Sink:]   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !347
 allocation intermediate:   %23 = load i64*, i64** %A, align 8, !dbg !347
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
Created 1 constraint variable(s) for node of size 1
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !347
[Sink:]   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !347
 allocation intermediate:   %23 = load i64*, i64** %A, align 8, !dbg !347
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !350
[Sink:]   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !350
 allocation intermediate:   %25 = load i64*, i64** %A, align 8, !dbg !350
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !350
[Sink:]   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !350
 allocation intermediate:   %25 = load i64*, i64** %A, align 8, !dbg !350
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !353
[Sink:]   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !353
 allocation intermediate:   %27 = load i64*, i64** %A, align 8, !dbg !353
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !353
[Sink:]   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !353
 allocation intermediate:   %27 = load i64*, i64** %A, align 8, !dbg !353
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !356
[Sink:]   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !356
 allocation intermediate:   %29 = load i64*, i64** %A, align 8, !dbg !356
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 3
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
Tainting at offset: 3
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !356
[Sink:]   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !356
 allocation intermediate:   %29 = load i64*, i64** %A, align 8, !dbg !356
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 3
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
Tainting at offset: 3
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %top28 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %33, i32 0, i32 1, !dbg !364
[Source:]   %top28 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %33, i32 0, i32 1, !dbg !364
StructType: allocation intermediate:   %33 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !363
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x7f9faafb0c80
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x7f9fad09a570
DSOURCEGEP INSTRUCTION   %arrayidx29 = getelementptr inbounds i64, i64* %35, i64 2, !dbg !367
[Source:]   %arrayidx29 = getelementptr inbounds i64, i64* %35, i64 2, !dbg !367
 allocation intermediate:   %35 = load i64*, i64** %B, align 8, !dbg !367
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: COLLAPSED: SCMRE2: elem 0::0x7f9fad09f8b0
DSINKGEP INSTRUCTION   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !369
[Sink:]   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !369
 allocation intermediate:   %37 = load i64*, i64** %A, align 8, !dbg !369
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !369
[Sink:]   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !369
 allocation intermediate:   %37 = load i64*, i64** %A, align 8, !dbg !369
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %arrayidx32 = getelementptr inbounds i64, i64* %38, i64 1, !dbg !371
[Source:]   %arrayidx32 = getelementptr inbounds i64, i64* %38, i64 1, !dbg !371
 allocation intermediate:   %38 = load i64*, i64** %B, align 8, !dbg !371
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: COLLAPSED: SCMRE2: elem 0::0x7f9fad09f8b0
DSINKGEP INSTRUCTION   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !372
[Sink:]   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !372
 allocation intermediate:   %40 = load i64*, i64** %A, align 8, !dbg !372
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !372
[Sink:]   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !372
 allocation intermediate:   %40 = load i64*, i64** %A, align 8, !dbg !372
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %arrayidx35 = getelementptr inbounds i64, i64* %41, i64 0, !dbg !374
[Source:]   %arrayidx35 = getelementptr inbounds i64, i64* %41, i64 0, !dbg !374
 allocation intermediate:   %41 = load i64*, i64** %B, align 8, !dbg !374
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0::0x7f9faae7a290
CONSTRAINING: COLLAPSED: SCMRE2: elem 0::0x7f9fad09f8b0
DSINKGEP INSTRUCTION   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !375
[Sink:]   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !375
 allocation intermediate:   %43 = load i64*, i64** %A, align 8, !dbg !375
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !375
[Sink:]   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !375
 allocation intermediate:   %43 = load i64*, i64** %A, align 8, !dbg !375
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x7f9faafa1650 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
Running on bn_free_d in context [bn_expand2 ]
Using taint reachable signature for:   call void @CRYPTO_secure_free(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 174), !dbg !273
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
RSINKGEP INSTRUCTION   %3 = bitcast i64* %2 to i8*, !dbg !273
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE:   %3 = bitcast i64* %2 to i8*, !dbg !273
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
RSINKGEP INSTRUCTION   %3 = bitcast i64* %2 to i8*, !dbg !273
Using taint reachable signature for:   call void @CRYPTO_free(i8* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 176), !dbg !274
RSINKGEP INSTRUCTION   %6 = bitcast i64* %5 to i8*, !dbg !274
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE:   %6 = bitcast i64* %5 to i8*, !dbg !274
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x7f9faacadc80 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %6 = bitcast i64* %5 to i8*, !dbg !274
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Creating ConsElem Map for :	Node0x7f9faacaf3e0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x7f9faacaf3e0:s0 -> Node0x7f9faacaf2c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x7f9faacaf2c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacaf2c0:s0 -> Node0x7f9faafa1590;
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 0, !dbg !273
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 0, !dbg !273
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad190720
DSOURCEGEP INSTRUCTION   %d1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !274
[Source:]   %d1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !274
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !274
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x7f9faafb0ef0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x7f9fad190720
Running on constant_time_eq in context [constant_time_eq_int ]
Creating ConsElem Map for :	Node0x7f9faacc9c60 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x7f9faacc9d80 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on BN_get_flags in context [bn_expand_internal ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on BN_get_flags in context [bn_free_d ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !272
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !271
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[20,24]0x7f9faafb12c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x7f9faafb54c0
Running on constant_time_is_zero in context [constant_time_eq ]
Creating ConsElem Map for :	Node0x7f9faacc9f50 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_msb in context [constant_time_is_zero ]
Creating ConsElem Map for :	Node0x7f9faacca1b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on bn2binpad in context []
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
DONE
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x7f9faacb9970 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x7f9faacb9970:s0 -> Node0x7f9faacb9bb0;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Trying to find element at offset 0
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x7f9faacb9bb0 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8] : addr 0x7f9faafb0ef0
DONE
Removing values tied to bits
Size of vector 18444
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Size of vector 18443
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Size of vector 18442
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Size of vector 18441
Constraint to find 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Constraint erased: 0: i32,  : SCMR: elem 0:default:
Removing values tied to bits
Size of vector 18437
Constraint to find 0: i32,  : SCMR: elem 0:default:
Size of vector 18437
Constraint to find 0: i32,  : SCMR: elem 0:default:
Size of vector 18437
Constraint to find 0: i32,  : SCMR: elem 0:default:
Size of vector 18437
Constraint to find 0: i32,  : SCMR: elem 0:default:
#--------------Results------------------
bn_exp.c line 144
bn_exp.c line 146
bn_exp.c line 147
bn_exp.c line 148
bn_exp.c line 149
bn_exp.c line 146
bn_exp.c line 1124
bn_exp.c line 1123
bn_exp.c line 1133
bn_exp.c line 1137
bn_exp.c line 1143
bn_exp.c line 1151
bn_exp.c line 1161
bn_exp.c line 1161
bn_exp.c line 1161
bn_exp.c line 1169
bn_exp.c line 1182
bn_exp.c line 1184
bn_exp.c line 1188
bn_exp.c line 1188
bn_exp.c line 1195
bn_exp.c line 1200
bn_exp.c line 1202
bn_exp.c line 1204
bn_exp.c line 1208
bn_exp.c line 1208
bn_exp.c line 1218
bn_exp.c line 1220
bn_exp.c line 1224
bn_exp.c line 1224
bn_exp.c line 1233
bn_exp.c line 318
bn_exp.c line 319
bn_exp.c line 317
bn_exp.c line 327
bn_exp.c line 334
bn_exp.c line 347
bn_exp.c line 347
bn_exp.c line 347
bn_exp.c line 359
bn_exp.c line 363
bn_exp.c line 363
bn_exp.c line 364
bn_exp.c line 369
bn_exp.c line 374
bn_exp.c line 379
bn_exp.c line 382
bn_exp.c line 383
bn_exp.c line 383
bn_exp.c line 398
bn_exp.c line 399
bn_exp.c line 403
bn_exp.c line 413
bn_exp.c line 416
bn_exp.c line 418
bn_exp.c line 437
bn_exp.c line 448
bn_exp.c line 449
bn_exp.c line 454
bn_exp.c line 475
bn_exp.c line 182
bn_exp.c line 183
bn_exp.c line 181
bn_exp.c line 192
bn_exp.c line 204
bn_exp.c line 204
bn_exp.c line 208
bn_exp.c line 210
bn_exp.c line 213
bn_exp.c line 216
bn_exp.c line 220
bn_exp.c line 222
bn_exp.c line 230
bn_exp.c line 234
bn_exp.c line 234
bn_exp.c line 251
bn_exp.c line 253
bn_exp.c line 271
bn_exp.c line 283
bn_exp.c line 288
bn_exp.c line 621
bn_exp.c line 631
bn_exp.c line 651
bn_exp.c line 709
bn_exp.c line 712
bn_exp.c line 717
bn_exp.c line 726
bn_exp.c line 740
bn_exp.c line 743
bn_exp.c line 748
bn_exp.c line 752
bn_exp.c line 752
bn_exp.c line 753
bn_exp.c line 755
bn_exp.c line 757
bn_exp.c line 1024
bn_exp.c line 1031
bn_exp.c line 1055
bn_exp.c line 1068
bn_exp.c line 1083
bn_exp.c line 1089
bn_exp.c line 522
bn_exp.c line 525
bn_exp.c line 540
bn_exp.c line 544
bn_exp.c line 566
bn_lib.c line 111
bn_lib.c line 112
bn_lib.c line 113
bn_lib.c line 118
bn_lib.c line 143
bn_lib.c line 144
bn_lib.c line 152
bn_lib.c line 166
bn_lib.c line 330
bn_lib.c line 332
bn_lib.c line 334
bn_lib.c line 373
bn_lib.c line 375
bn_lib.c line 381
bn_lib.c line 409
bn_lib.c line 1027
bn_lib.c line 475
bn_lib.c line 1035
bn_lib.c line 1036
bn_lib.c line 1038
bn_lib.c line 1043
bn_lib.c line 641
bn_lib.c line 645
bn_lib.c line 648
bn_lib.c line 750
bn_lib.c line 926
bn_lib.c line 926
bn_lib.c line 936
bn_lib.c line 946
bn_lib.c line 173
bn_lib.c line 254
bn_lib.c line 258
bn_lib.c line 262
bn_lib.c line 266
bn_lib.c line 274
bn_lib.c line 275
include/bn_lcl.h line 679
#--------------Statistics----------------
:: Tainted Branches: 143
:: Branch Instructions: 887
:: Conditional Branches: 357
:: Vulnerable Branches: 16.12% [143/887]
