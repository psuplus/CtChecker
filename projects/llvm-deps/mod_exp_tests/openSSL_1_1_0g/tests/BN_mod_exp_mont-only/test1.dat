Args: ../../../..//Debug+Asserts/bin/opt -load ../../../..//projects/poolalloc/Debug+Asserts/lib/LLVMDataStructure.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Constraints.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/sourcesinkanalysis.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/pointstointerface.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Deps.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Security.so -vulnerablebranch -debug 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
Merged 13 call nodes.
Merged 5 call nodes.
Merged 6 call nodes.
Merged 4 call nodes.
Merged 6 call nodes.
Merged 5 call nodes.
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Visiting single node SCC #: 1 fn: BN_exp
  [BU] Calculating graph for: BN_exp
  [BU] Done inlining: BN_exp [18+0]
Visiting single node SCC #: 3 fn: BN_mod_exp_mont_word
  [BU] Calculating graph for: BN_mod_exp_mont_word
  [BU] Done inlining: BN_mod_exp_mont_word [27+0]
Visiting single node SCC #: 6 fn: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Done inlining: MOD_EXP_CTIME_COPY_TO_PREBUF [12+0]
Visiting single node SCC #: 11 fn: constant_time_msb
  [BU] Calculating graph for: constant_time_msb
  [BU] Done inlining: constant_time_msb [1+0]
Visiting single node SCC #: 10 fn: constant_time_is_zero
  [BU] Calculating graph for: constant_time_is_zero
  [BU] Done inlining: constant_time_is_zero [1+0]
Visiting single node SCC #: 9 fn: constant_time_eq
  [BU] Calculating graph for: constant_time_eq
  [BU] Done inlining: constant_time_eq [2+0]
Visiting single node SCC #: 8 fn: constant_time_eq_int
  [BU] Calculating graph for: constant_time_eq_int
  [BU] Done inlining: constant_time_eq_int [2+0]
Visiting single node SCC #: 7 fn: MOD_EXP_CTIME_COPY_FROM_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_FROM_PREBUF
  [BU] Done inlining: MOD_EXP_CTIME_COPY_FROM_PREBUF [21+0]
Visiting single node SCC #: 5 fn: BN_mod_exp_mont_consttime
  [BU] Calculating graph for: BN_mod_exp_mont_consttime
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[21+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[21+0] into 'BN_mod_exp_mont_consttime' [30+0]
  [BU] Done inlining: BN_mod_exp_mont_consttime [30+0]
Visiting single node SCC #: 4 fn: BN_mod_exp_mont
  [BU] Calculating graph for: BN_mod_exp_mont
    Inlining graph for BN_mod_exp_mont_consttime[30+0] into 'BN_mod_exp_mont' [34+0]
  [BU] Done inlining: BN_mod_exp_mont [34+0]
Visiting single node SCC #: 12 fn: BN_mod_exp_recp
  [BU] Calculating graph for: BN_mod_exp_recp
  [BU] Done inlining: BN_mod_exp_recp [27+0]
Visiting single node SCC #: 2 fn: BN_mod_exp
  [BU] Calculating graph for: BN_mod_exp
    Inlining graph for BN_mod_exp_mont_word[27+0] into 'BN_mod_exp' [13+0]
    Inlining graph for BN_mod_exp_mont[34+0] into 'BN_mod_exp' [15+0]
    Inlining graph for BN_mod_exp_recp[27+0] into 'BN_mod_exp' [16+0]
  [BU] Done inlining: BN_mod_exp [14+0]
Visiting single node SCC #: 13 fn: BN_mod_exp_simple
  [BU] Calculating graph for: BN_mod_exp_simple
  [BU] Done inlining: BN_mod_exp_simple [25+0]
[TD] Inlining callers into 'BN_mod_exp_simple'
[TD] Inlining callers into 'BN_mod_exp'
[TD] Inlining callers into 'BN_mod_exp_recp'
   [TD] Inlining graph into Fn 'BN_mod_exp_recp' from Fn 'BN_mod_exp': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_mod_exp_mont_consttime'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_consttime' from Fn 'BN_mod_exp_mont': 6 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_FROM_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'constant_time_eq_int'
   [TD] Inlining graph into Fn 'constant_time_eq_int' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 2 args
[TD] Inlining callers into 'constant_time_eq'
   [TD] Inlining graph into Fn 'constant_time_eq' from Fn 'constant_time_eq_int': 2 args
[TD] Inlining callers into 'constant_time_is_zero'
   [TD] Inlining graph into Fn 'constant_time_is_zero' from Fn 'constant_time_eq': 1 args
[TD] Inlining callers into 'constant_time_msb'
   [TD] Inlining graph into Fn 'constant_time_msb' from Fn 'constant_time_is_zero': 1 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_TO_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont_word'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_word' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_exp'
Running on BN_exp in context []
Running on llvm.dbg.declare in context []
Running on BN_get_flags in context []
Running on ERR_put_error in context []
Running on BN_CTX_start in context []
Running on BN_CTX_get in context []
Running on BN_copy in context []
Running on BN_num_bits in context []
Running on BN_is_odd in context []
Running on BN_set_word in context []
Running on BN_sqr in context []
Running on BN_is_bit_set in context []
Running on BN_mul in context []
Running on BN_CTX_end in context []
Running on BN_mod_exp in context []
Running on BN_mod_exp_mont_word in context []
Running on BN_mod_exp_mont in context []
Using taint reachable signature for:   %call = call i32 @BN_get_flags(%struct.bignum_st* %0, i32 4), !dbg !126
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !124
Creating ConsElem Map for :	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !124
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !124
Using taint reachable signature for:   %call1 = call i32 @BN_get_flags(%struct.bignum_st* %1, i32 4), !dbg !131
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !129
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
EDGE: [0: tymap-size 1]:i64
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !129
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !129
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call4 = call i32 @BN_get_flags(%struct.bignum_st* %2, i32 4), !dbg !135
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !134
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
EDGE: [0: tymap-size 1]:i64
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !134
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %2 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !134
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call7 = call i32 @BN_is_odd(%struct.bignum_st* %9), !dbg !149
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !147
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %9 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !147
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !147
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 109, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 328), !dbg !151
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Creating ConsElem Map for :	Node0x59eccc0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x59eccc0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call10 = call i32 @BN_num_bits(%struct.bignum_st* %10), !dbg !155
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !154
REACHABLE SOURCE:   %10 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !154
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %10 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !154
Using taint reachable signature for:   %call13 = call i32 @BN_is_one(%struct.bignum_st* %12), !dbg !164
RSINKGEP INSTRUCTION   %12 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !161
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %12 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !161
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %12 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !161
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call16 = call i32 @BN_set_word(%struct.bignum_st* %13, i64 0), !dbg !168
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !168
Creating ConsElem Map for :	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !168
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !168
Using taint reachable signature for:   %call17 = call i32 @BN_set_word(%struct.bignum_st* %14, i64 1), !dbg !170
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !170
REACHABLE SOURCE:   %14 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !170
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !170
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %16), !dbg !176
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !175
Creating ConsElem Map for :	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !175
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %16 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !175
Using taint reachable signature for:   %call20 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %17), !dbg !178
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !177
REACHABLE SOURCE:   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !177
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %17 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !177
Using taint reachable signature for:   %call21 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %18), !dbg !181
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !180
REACHABLE SOURCE:   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !180
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !180
Using taint reachable signature for:   %call22 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19), !dbg !184
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !183
REACHABLE SOURCE:   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !183
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !183
Using taint reachable signature for:   %call34 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !204
Using taint reachable signature for:   %call38 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %25, %struct.bignum_st* %26, %struct.bignum_ctx* %27), !dbg !215
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !214
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !213
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !211
Creating ConsElem Map for :	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !214
REACHABLE SOURCE:   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !213
REACHABLE SOURCE:   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !211
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !214
RSINKGEP INSTRUCTION   %26 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !213
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %25 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !211
Using taint reachable signature for:   %call45 = call i32 @BN_ucmp(%struct.bignum_st* %30, %struct.bignum_st* %31), !dbg !225
RSINKGEP INSTRUCTION   %30 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !222
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %31 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !224
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %30 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !222
REACHABLE SOURCE:   %31 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !224
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %30 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !222
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %31 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !224
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call49 = call i32 @BN_nnmod(%struct.bignum_st* %32, %struct.bignum_st* %33, %struct.bignum_st* %34, %struct.bignum_ctx* %35), !dbg !234
RSINKGEP INSTRUCTION   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !228
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !231
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !232
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !233
REACHABLE SOURCE:   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !228
REACHABLE SOURCE:   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !231
REACHABLE SOURCE:   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !232
REACHABLE SOURCE:   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !233
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %32 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx48, align 8, !dbg !228
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %33 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !231
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %34 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !232
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %35 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !233
Using taint reachable signature for:   %call56 = call i32 @BN_is_zero(%struct.bignum_st* %38), !dbg !244
RSINKGEP INSTRUCTION   %38 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !242
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %38 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !242
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %38 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !242
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call59 = call i32 @BN_set_word(%struct.bignum_st* %39, i64 0), !dbg !246
RSINKGEP INSTRUCTION   %39 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !246
REACHABLE SOURCE:   %39 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !246
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %39 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !246
Using taint reachable signature for:   %call62 = call i32 @BN_to_montgomery(%struct.bignum_st* %40, %struct.bignum_st* %41, %struct.bn_mont_ctx_st* %42, %struct.bignum_ctx* %43), !dbg !255
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !252
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %40 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx61, align 8, !dbg !250
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %43 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !254
RSINKGEP INSTRUCTION   %42 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !253
REACHABLE SOURCE:   %41 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !252
REACHABLE SOURCE:   %40 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx61, align 8, !dbg !250
REACHABLE SOURCE:   %43 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !254
REACHABLE SOURCE:   %42 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !253
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %41 = load %struct.bignum_st*, %struct.bignum_st** %aa, align 8, !dbg !252
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %40 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx61, align 8, !dbg !250
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %43 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !254
RSINKGEP INSTRUCTION   %42 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !253
Using taint reachable signature for:   %call83 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %49, %struct.bignum_st* %50, %struct.bignum_st* %51, %struct.bn_mont_ctx_st* %52, %struct.bignum_ctx* %53), !dbg !291
RSINKGEP INSTRUCTION   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !290
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !287
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !284
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !288
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !289
Creating ConsElem Map for :	Node0x59d8130 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !290
REACHABLE SOURCE:   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !287
REACHABLE SOURCE:   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !284
REACHABLE SOURCE:   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !288
REACHABLE SOURCE:   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !289
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59d8130 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %53 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !290
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx81, align 8, !dbg !287
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !284
RSINKGEP INSTRUCTION   %51 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx82, align 8, !dbg !288
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %52 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !289
Using taint reachable signature for:   %call88 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %57), !dbg !311
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !308
REACHABLE SOURCE:   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !308
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !308
Using taint reachable signature for:   %call97 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %60, %struct.bignum_st* %62, %struct.bignum_st* %63, %struct.bn_mont_ctx_st* %64, %struct.bignum_ctx* %65), !dbg !325
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !318
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !322
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !323
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !324
RSINKGEP INSTRUCTION   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !321
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !318
REACHABLE SOURCE:   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !322
REACHABLE SOURCE:   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !323
REACHABLE SOURCE:   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !324
REACHABLE SOURCE:   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !321
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59d8130 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx93, align 8, !dbg !318
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_st*, %struct.bignum_st** %d, align 8, !dbg !322
RSINKGEP INSTRUCTION   %64 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !323
RSINKGEP INSTRUCTION   %65 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !324
RSINKGEP INSTRUCTION   %62 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx96, align 8, !dbg !321
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call109 = call %struct.bignum_st* @bn_wexpand(%struct.bignum_st* %74, i32 %75), !dbg !352
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !348
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Creating ConsElem Map for :	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
EDGE: [0: tymap-size 1]:i64
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Creating ConsElem Map for :	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %74 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !348
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %74 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !348
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   call void @bn_correct_top(%struct.bignum_st* %93), !dbg !387
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !386
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %93 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !386
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %93 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !386
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !391
Using taint reachable signature for:   %call134 = call i32 @BN_to_montgomery(%struct.bignum_st* %94, %struct.bignum_st* %call133, %struct.bn_mont_ctx_st* %95, %struct.bignum_ctx* %96), !dbg !394
RSINKGEP INSTRUCTION   %96 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !393
RSINKGEP INSTRUCTION   %95 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !392
RSINKGEP INSTRUCTION   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !391
RSINKGEP INSTRUCTION   %94 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !389
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Creating ConsElem Map for :	Node0x59d8770 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %96 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !393
REACHABLE SOURCE:   %95 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !392
REACHABLE SOURCE:   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !391
REACHABLE SOURCE:   %94 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !389
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59d8770 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %96 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !393
RSINKGEP INSTRUCTION   %95 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !392
RSINKGEP INSTRUCTION   %call133 = call %struct.bignum_st* @BN_value_one(), !dbg !391
RSINKGEP INSTRUCTION   %94 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !389
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call140 = call i32 @BN_is_bit_set(%struct.bignum_st* %97, i32 %98), !dbg !404
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !398
REACHABLE SOURCE:   %97 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !398
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !398
Using taint reachable signature for:   %call145 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %100, %struct.bignum_st* %101, %struct.bignum_st* %102, %struct.bn_mont_ctx_st* %103, %struct.bignum_ctx* %104), !dbg !418
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !411
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !414
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !415
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !416
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !417
REACHABLE SOURCE:   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !411
REACHABLE SOURCE:   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !414
REACHABLE SOURCE:   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !415
REACHABLE SOURCE:   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !416
REACHABLE SOURCE:   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !417
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !411
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %101 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !414
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !415
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %103 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !416
RSINKGEP INSTRUCTION   %104 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !417
Using taint reachable signature for:   %call162 = call i32 @BN_is_bit_set(%struct.bignum_st* %112, i32 %sub161), !dbg !456
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !451
REACHABLE SOURCE:   %112 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !451
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !451
Using taint reachable signature for:   %call176 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %125, %struct.bignum_st* %126, %struct.bignum_st* %127, %struct.bn_mont_ctx_st* %128, %struct.bignum_ctx* %129), !dbg !493
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !489
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !486
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !492
RSINKGEP INSTRUCTION   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !491
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !490
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !489
REACHABLE SOURCE:   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !486
REACHABLE SOURCE:   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !492
REACHABLE SOURCE:   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !491
REACHABLE SOURCE:   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !490
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !489
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !486
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %129 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !492
RSINKGEP INSTRUCTION   %128 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !491
RSINKGEP INSTRUCTION   %127 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !490
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call186 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %131, %struct.bignum_st* %132, %struct.bignum_st* %134, %struct.bn_mont_ctx_st* %135, %struct.bignum_ctx* %136), !dbg !508
RSINKGEP INSTRUCTION   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !505
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !506
RSINKGEP INSTRUCTION   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !507
RSINKGEP INSTRUCTION   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !502
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !500
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
REACHABLE SOURCE:   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !505
REACHABLE SOURCE:   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !506
REACHABLE SOURCE:   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !507
REACHABLE SOURCE:   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !502
REACHABLE SOURCE:   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !500
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %134 = load %struct.bignum_st*, %struct.bignum_st** %arrayidx185, align 8, !dbg !505
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %135 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !506
RSINKGEP INSTRUCTION   %136 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !507
RSINKGEP INSTRUCTION   %132 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !502
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %131 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !500
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Using taint reachable signature for:   %call196 = call i32 @BN_from_montgomery(%struct.bignum_st* %140, %struct.bignum_st* %141, %struct.bn_mont_ctx_st* %142, %struct.bignum_ctx* %143), !dbg !527
RSINKGEP INSTRUCTION   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !524
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !525
RSINKGEP INSTRUCTION   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !526
RSINKGEP INSTRUCTION   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !522
REACHABLE SOURCE:   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !524
REACHABLE SOURCE:   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !525
REACHABLE SOURCE:   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !526
REACHABLE SOURCE:   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !522
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %141 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !524
Added child elem: 	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
RSINKGEP INSTRUCTION   %142 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !525
RSINKGEP INSTRUCTION   %143 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !526
RSINKGEP INSTRUCTION   %140 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !522
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %145), !dbg !537
RSINKGEP INSTRUCTION   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !536
REACHABLE SOURCE:   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !536
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %145 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !536
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %146), !dbg !539
RSINKGEP INSTRUCTION   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !538
REACHABLE SOURCE:   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !538
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %146 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !538
Creating ConsElem Map for :	Node0x59d6830 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d6830:s0 -> Node0x59d6230;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d6230 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59d68f0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d68f0:s0 -> Node0x59d63b0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d63b0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59d63b0:s0 -> Node0x59efac0;
Creating ConsElem Map for :	Node0x59d69b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d69b0:s0 -> Node0x59d6470;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d6470 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59d6a70 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d6a70:s0 -> Node0x59d6530;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d6530 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59d6530:s0 -> Node0x59d83f0;
Creating ConsElem Map for :	Node0x59d6b30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x59d6b30:s0 -> Node0x59d65f0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x59d65f0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59d6bf0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d6bf0:s0 -> Node0x59d66b0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x59d66b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59d7130 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d7770 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d7eb0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d7eb0:s0 -> Node0x59d66b0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x59d66b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59d6770 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d6ff0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d78b0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d78b0:s0 -> Node0x59d8130;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d8130 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59d7a30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d7a30:s0 -> Node0x59d8230;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !185
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !185
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x59d63b0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59d63b0:s0 -> Node0x59efac0;
Trying to find element at offset 0
Tainting at offset: 0
Created 32 constraint variable(s) for node of size 8
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !185
[Sink:]   %arrayidx = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !185
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Tainting at offset: 0
	Node0x59d63b0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59d63b0:s0 -> Node0x59efac0;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %arrayidx27 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !193
[Source:]   %arrayidx27 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !193
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b1eda0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x5cd4fc0
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %28, i32 0, i32 3, !dbg !220
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %28, i32 0, i32 3, !dbg !220
StructType: allocation intermediate:   %28 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !218
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a04160
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[16,20]0x5b1ef70
DSOURCEGEP INSTRUCTION   %arrayidx48 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !228
[Source:]   %arrayidx48 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !228
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b1eda0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x5cd4fc0
DSOURCEGEP INSTRUCTION   %arrayidx53 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !237
[Source:]   %arrayidx53 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !237
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b1eda0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x5cd4fc0
Creating ConsElem Map for :	Node0x59d7bb0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59d7bb0:s0 -> Node0x59d63b0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59d63b0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59d63b0:s0 -> Node0x59efac0;
DSOURCEGEP INSTRUCTION   %arrayidx61 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !250
[Source:]   %arrayidx61 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !250
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b1eda0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x5cd4fc0
Creating ConsElem Map for :	Node0x59d74f0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !287
[Source:]   %arrayidx81 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !287
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b1eda0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x5cd4fc0
DSOURCEGEP INSTRUCTION   %arrayidx82 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !288
[Source:]   %arrayidx82 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 0, !dbg !288
ArrayType:FINAL:   %val = alloca [32 x %struct.bignum_st*], align 16
Trying to find element at offset 0
	Node0x59d7d30 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,   array: SMR\n|{<s0>0}}"];
	Node0x59d7d30:s0 -> Node0x59d63b0;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b1eda0
CONSTRAINING: 0: %struct.bignum_st*,   array: SCMR: elem 0::0x5cd4fc0
Creating ConsElem Map for :	Node0x59d6eb0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d6d70 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !313
[Sink:]   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !313
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !313
[Sink:]   %arrayidx89 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom, !dbg !313
DSOURCEGEP INSTRUCTION   %arrayidx93 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom92, !dbg !318
[Source:]   %arrayidx93 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom92, !dbg !318
DSOURCEGEP INSTRUCTION   %arrayidx96 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom95, !dbg !321
[Source:]   %arrayidx96 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom95, !dbg !321
Creating ConsElem Map for :	Node0x59d7630 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d7270 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59d73b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %68, i32 0, i32 1, !dbg !339
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %68, i32 0, i32 1, !dbg !339
StructType: allocation intermediate:   %68 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !338
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[8,12]0x5b75930
DSOURCEGEP INSTRUCTION   %d105 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %71, i32 0, i32 0, !dbg !345
[Source:]   %d105 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %71, i32 0, i32 0, !dbg !345
StructType: allocation intermediate:   %71 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !344
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b75990
DSOURCEGEP INSTRUCTION   %arrayidx106 = getelementptr inbounds i64, i64* %72, i64 %idxprom104, !dbg !344
[Source:]   %arrayidx106 = getelementptr inbounds i64, i64* %72, i64 %idxprom104, !dbg !344
DSOURCEGEP INSTRUCTION   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !357
[Source:]   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !357
StructType: allocation intermediate:   %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !356
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b75990
DSOURCEGEP INSTRUCTION   %arrayidx114 = getelementptr inbounds i64, i64* %77, i64 0, !dbg !356
[Source:]   %arrayidx114 = getelementptr inbounds i64, i64* %77, i64 0, !dbg !356
 allocation intermediate:   %77 = load i64*, i64** %d113, align 8, !dbg !357
=>  %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !357
 allocation intermediate:   %d113 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %76, i32 0, i32 0, !dbg !357
=>  %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !356
 allocation intermediate:   %76 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !356
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5a09f80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b75990
DSOURCEGEP INSTRUCTION   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !360
[Source:]   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !360
StructType: allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !359
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  : CMRE: elem 0:default:0x5a03ab0
DSINKGEP INSTRUCTION   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !359
[Sink:]   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !359
 allocation intermediate:   %80 = load i64*, i64** %d116, align 8, !dbg !360
=>  %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !360
 allocation intermediate:   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !360
=>  %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !359
 allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !359
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !359
[Sink:]   %arrayidx117 = getelementptr inbounds i64, i64* %80, i64 0, !dbg !359
 allocation intermediate:   %80 = load i64*, i64** %d116, align 8, !dbg !360
=>  %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !360
 allocation intermediate:   %d116 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %79, i32 0, i32 0, !dbg !360
=>  %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !359
 allocation intermediate:   %79 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !359
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59d8630 [shape=record,shape=Mrecord,label="{0: i64,   array: ME\n}"];
Trying to find element at offset 0
DSOURCEGEP INSTRUCTION   %d122 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %84, i32 0, i32 0, !dbg !374
[Source:]   %d122 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %84, i32 0, i32 0, !dbg !374
StructType: allocation intermediate:   %84 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !373
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE[0,8]0x5b75990
DSOURCEGEP INSTRUCTION   %arrayidx123 = getelementptr inbounds i64, i64* %85, i64 %idxprom121, !dbg !373
[Source:]   %arrayidx123 = getelementptr inbounds i64, i64* %85, i64 %idxprom121, !dbg !373
DSOURCEGEP INSTRUCTION   %d126 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %88, i32 0, i32 0, !dbg !378
[Source:]   %d126 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %88, i32 0, i32 0, !dbg !378
StructType: allocation intermediate:   %88 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !377
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  : CMRE: elem 0:default:0x5a03ab0
DSINKGEP INSTRUCTION   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !377
[Sink:]   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !377
DSINKGEP INSTRUCTION   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !377
[Sink:]   %arrayidx127 = getelementptr inbounds i64, i64* %89, i64 %idxprom125, !dbg !377
DSINKGEP INSTRUCTION   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !384
[Sink:]   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !384
StructType:::IS STRUCT TY:: allocation intermediate:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !383
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !384
[Sink:]   %top131 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %92, i32 0, i32 1, !dbg !384
StructType:::IS STRUCT TY:: allocation intermediate:   %92 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !383
=>  %r = alloca %struct.bignum_st*, align 8
FINAL:   %r = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x59d8230 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  : MRE\n|{<s0>0}}"];
	Node0x59d8230:s0 -> Node0x59d8630;
Trying to find element at offset 8
DSOURCEGEP INSTRUCTION   %arrayidx185 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom184, !dbg !505
[Source:]   %arrayidx185 = getelementptr inbounds [32 x %struct.bignum_st*], [32 x %struct.bignum_st*]* %val, i32 0, i64 %idxprom184, !dbg !505
Running on BN_mod_exp_recp in context []
Running on BN_is_one in context []
Running on BN_RECP_CTX_init in context []
Running on BN_RECP_CTX_set in context []
Running on BN_nnmod in context []
Running on BN_is_zero in context []
Running on BN_mod_mul_reciprocal in context []
Running on BN_RECP_CTX_free in context []
Running on BN_mod_exp_mont_consttime in context []
Running on BN_MONT_CTX_new in context []
Running on BN_MONT_CTX_set in context []
Running on BN_ucmp in context []
Running on BN_to_montgomery in context []
Running on BN_mod_mul_montgomery in context []
Running on bn_wexpand in context []
Running on bn_correct_top in context []
Running on BN_value_one in context []
Running on BN_from_montgomery in context []
Running on BN_MONT_CTX_free in context []
Running on CRYPTO_malloc in context []
Running on llvm.memset.p0i8.i64 in context []
Running on BN_div in context []
Running on OPENSSL_cleanse in context []
Running on CRYPTO_free in context []
Running on BN_mul_word in context []
Running on BN_mod_exp_simple in context []
Running on BN_mod_mul in context []
Running on BN_mod_exp_mont_consttime in context [BN_mod_exp_mont ]
Using taint reachable signature for:   %call = call i32 @BN_is_odd(%struct.bignum_st* %0), !dbg !121
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !119
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !119
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !119
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 124, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 622), !dbg !123
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x59eccc0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call3 = call i32 @BN_num_bits(%struct.bignum_st* %3), !dbg !130
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !129
REACHABLE SOURCE:   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !129
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !129
Using taint reachable signature for:   %call5 = call i32 @BN_is_one(%struct.bignum_st* %5), !dbg !139
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !136
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !136
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !136
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call8 = call i32 @BN_set_word(%struct.bignum_st* %6, i64 0), !dbg !143
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !143
REACHABLE SOURCE:   %6 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !143
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %6 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !143
Using taint reachable signature for:   %call9 = call i32 @BN_set_word(%struct.bignum_st* %7, i64 1), !dbg !145
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !145
REACHABLE SOURCE:   %7 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !145
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %7 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !145
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %9), !dbg !151
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !150
REACHABLE SOURCE:   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !150
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !150
Using taint reachable signature for:   %call15 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !159
Using taint reachable signature for:   %call19 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %12, %struct.bignum_st* %13, %struct.bignum_ctx* %14), !dbg !170
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !168
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !169
RSINKGEP INSTRUCTION   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !166
REACHABLE SOURCE:   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !168
REACHABLE SOURCE:   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !169
REACHABLE SOURCE:   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !166
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %13 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !168
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !169
RSINKGEP INSTRUCTION   %12 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !166
Using taint reachable signature for:   %call56 = call i8* @CRYPTO_malloc(i64 %conv55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 718), !dbg !220
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x59eccc0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   %call101 = call %struct.bignum_st* @BN_value_one(), !dbg !306
Using taint reachable signature for:   %call102 = call i32 @BN_to_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %call101, %struct.bn_mont_ctx_st* %62, %struct.bignum_ctx* %63), !dbg !310
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %call101 = call %struct.bignum_st* @BN_value_one(), !dbg !306
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !309
RSINKGEP INSTRUCTION   %62 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !308
Creating ConsElem Map for :	Node0x59de6a0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
EDGE: [0: tymap-size 1]:i64
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %call101 = call %struct.bignum_st* @BN_value_one(), !dbg !306
REACHABLE SOURCE:   %63 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !309
REACHABLE SOURCE:   %62 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !308
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59de6a0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %call101 = call %struct.bignum_st* @BN_value_one(), !dbg !306
RSINKGEP INSTRUCTION   %63 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !309
RSINKGEP INSTRUCTION   %62 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !308
Using taint reachable signature for:   %call109 = call i32 @BN_ucmp(%struct.bignum_st* %66, %struct.bignum_st* %67), !dbg !320
RSINKGEP INSTRUCTION   %67 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !319
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %66 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !317
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %67 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !319
REACHABLE SOURCE:   %66 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !317
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %67 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !319
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %66 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !317
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call113 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %am, %struct.bignum_st* %68, %struct.bignum_st* %69, %struct.bignum_ctx* %70), !dbg !323
RSINKGEP INSTRUCTION   %68 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !323
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !323
RSINKGEP INSTRUCTION   %69 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !323
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %68 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !323
REACHABLE SOURCE:   %70 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !323
REACHABLE SOURCE:   %69 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !323
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %68 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !323
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !323
RSINKGEP INSTRUCTION   %69 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !323
Added child elem: 	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call117 = call i32 @BN_to_montgomery(%struct.bignum_st* %am, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %71, %struct.bignum_ctx* %72), !dbg !331
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !330
RSINKGEP INSTRUCTION   %71 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !328
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !330
REACHABLE SOURCE:   %71 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !328
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %72 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !330
RSINKGEP INSTRUCTION   %71 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !328
Using taint reachable signature for:   %call122 = call i32 @BN_to_montgomery(%struct.bignum_st* %am, %struct.bignum_st* %73, %struct.bn_mont_ctx_st* %74, %struct.bignum_ctx* %75), !dbg !339
RSINKGEP INSTRUCTION   %73 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !335
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %74 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !337
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !338
REACHABLE SOURCE:   %73 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !335
REACHABLE SOURCE:   %74 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !337
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %75 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !338
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %73 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !335
Added child elem: 	Node0x59efb80 [shape=record,shape=Mrecord,label="{0: i64,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %74 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !337
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !338
Using taint reachable signature for:   %call138 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %83, %struct.bignum_ctx* %84), !dbg !365
RSINKGEP INSTRUCTION   %84 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
RSINKGEP INSTRUCTION   %83 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !361
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %84 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
REACHABLE SOURCE:   %83 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !361
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %84 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !364
RSINKGEP INSTRUCTION   %83 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !361
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call150 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %90, %struct.bignum_ctx* %91), !dbg !389
RSINKGEP INSTRUCTION   %90 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !385
RSINKGEP INSTRUCTION   %91 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !388
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %90 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !385
REACHABLE SOURCE:   %91 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !388
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %90 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !385
RSINKGEP INSTRUCTION   %91 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !388
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call167 = call i32 @BN_is_bit_set(%struct.bignum_st* %102, i32 %103), !dbg !422
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !420
REACHABLE SOURCE:   %102 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !420
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %102 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !420
Using taint reachable signature for:   %call183 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %113, %struct.bignum_ctx* %114), !dbg !458
RSINKGEP INSTRUCTION   %114 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !457
RSINKGEP INSTRUCTION   %113 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !454
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %114 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !457
REACHABLE SOURCE:   %113 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !454
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %114 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !457
RSINKGEP INSTRUCTION   %113 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !454
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   %call188 = call i32 @BN_is_bit_set(%struct.bignum_st* %116, i32 %117), !dbg !465
RSINKGEP INSTRUCTION   %116 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !463
REACHABLE SOURCE:   %116 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !463
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %116 = load %struct.bignum_st*, %struct.bignum_st** %p.addr, align 8, !dbg !463
Using taint reachable signature for:   %call198 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %tmp, %struct.bignum_st* %tmp, %struct.bignum_st* %am, %struct.bn_mont_ctx_st* %124, %struct.bignum_ctx* %125), !dbg !483
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %124 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !480
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !482
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %am = alloca %struct.bignum_st, align 8
REACHABLE SOURCE:   %124 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !480
REACHABLE SOURCE:   %125 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !482
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %am = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %124 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !480
RSINKGEP INSTRUCTION   %125 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !482
Using taint reachable signature for:   %call202 = call i32 @BN_from_montgomery(%struct.bignum_st* %126, %struct.bignum_st* %tmp, %struct.bn_mont_ctx_st* %127, %struct.bignum_ctx* %128), !dbg !490
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !486
RSINKGEP INSTRUCTION   %128 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !489
RSINKGEP INSTRUCTION   %127 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !488
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %126 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !486
REACHABLE SOURCE:   %128 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !489
REACHABLE SOURCE:   %127 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !488
REACHABLE SOURCE:   %tmp = alloca %struct.bignum_st, align 8
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %126 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !486
RSINKGEP INSTRUCTION   %128 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !489
RSINKGEP INSTRUCTION   %127 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !488
RSINKGEP INSTRUCTION   %tmp = alloca %struct.bignum_st, align 8
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %130), !dbg !500
RSINKGEP INSTRUCTION   %130 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !499
REACHABLE SOURCE:   %130 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !499
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %130 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !499
Using taint reachable signature for:   call void @OPENSSL_cleanse(i8* %132, i64 %conv213), !dbg !508
RSINKGEP INSTRUCTION   %132 = load i8*, i8** %powerbuf, align 8, !dbg !505
REACHABLE SOURCE:   %132 = load i8*, i8** %powerbuf, align 8, !dbg !505
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %132 = load i8*, i8** %powerbuf, align 8, !dbg !505
Using taint reachable signature for:   call void @CRYPTO_free(i8* %134, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1091), !dbg !509
RSINKGEP INSTRUCTION   %134 = load i8*, i8** %powerbufFree, align 8, !dbg !509
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE:   %134 = load i8*, i8** %powerbufFree, align 8, !dbg !509
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
	Node0x59eccc0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %134 = load i8*, i8** %powerbufFree, align 8, !dbg !509
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %135), !dbg !512
RSINKGEP INSTRUCTION   %135 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !511
REACHABLE SOURCE:   %135 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !511
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %135 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !511
Creating ConsElem Map for :	Node0x59dcc40 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59dcc40:s0 -> Node0x59dc640;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59dc640 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59dcd00 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59dcd00:s0 -> Node0x59dc7c0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
Creating ConsElem Map for :	Node0x59dcdc0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59dcdc0:s0 -> Node0x59dc880;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59dce80 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59dce80:s0 -> Node0x59dc940;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Creating ConsElem Map for :	Node0x59dcf40 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x59dcf40:s0 -> Node0x59dca00;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x59dca00 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59dd000 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x59dd000:s0 -> Node0x59dcac0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59dd240 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59dd740 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x59dd740:s0 -> Node0x59dcac0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x59dcac0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x59dda00 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x59dda00:s0 -> Node0x59de460;
EDGE: [0: tymap-size 1]:i8
	Node0x59de460 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n}"];
Creating ConsElem Map for :	Node0x59ddb80 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59ddcc0 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x59ddcc0:s0 -> Node0x59de460;
EDGE: [0: tymap-size 1]:i8
	Node0x59de460 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n}"];
Creating ConsElem Map for :	Node0x59dcb80 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !127
[Source:]   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 1, !dbg !127
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !126
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
Creating ConsElem Map for :	Node0x59dd600 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59dd180 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59dd380 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59dd8c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !244
[Sink:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !244
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !244
[Sink:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !244
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %d72 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !246
[Source:]   %d72 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !246
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
CONSTRAINING: COLLAPSED: SCMRE2: elem 0:default:0x5eeb370
DSINKGEP INSTRUCTION   %d74 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !249
[Sink:]   %d74 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !249
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %d74 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !249
[Sink:]   %d74 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 0, !dbg !249
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !251
[Sink:]   %top75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !251
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !251
[Sink:]   %top75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 1, !dbg !251
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !253
[Sink:]   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !253
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !253
[Sink:]   %top76 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !253
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !256
[Sink:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !256
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !256
[Sink:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 2, !dbg !256
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !258
[Sink:]   %dmax77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !258
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %dmax77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !258
[Sink:]   %dmax77 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 2, !dbg !258
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 12
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !260
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !260
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !260
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 3, !dbg !260
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !262
[Sink:]   %neg78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !262
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %neg78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !262
[Sink:]   %neg78 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 3, !dbg !262
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 16
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !264
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !264
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !264
[Sink:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %am, i32 0, i32 4, !dbg !264
StructType:::IS STRUCT TY::FINAL:   %am = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !266
[Sink:]   %flags79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !266
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %flags79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !266
[Sink:]   %flags79 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 4, !dbg !266
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 20
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 20
Tainting at offset: 20
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %d81 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %45, i32 0, i32 0, !dbg !272
[Source:]   %d81 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %45, i32 0, i32 0, !dbg !272
StructType: allocation intermediate:   %45 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !271
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %46, i64 %idxprom, !dbg !271
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %46, i64 %idxprom, !dbg !271
DSOURCEGEP INSTRUCTION   %d85 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %48, i32 0, i32 0, !dbg !277
[Source:]   %d85 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %48, i32 0, i32 0, !dbg !277
StructType: allocation intermediate:   %48 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !275
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
DSOURCEGEP INSTRUCTION   %arrayidx86 = getelementptr inbounds i64, i64* %49, i64 0, !dbg !275
[Source:]   %arrayidx86 = getelementptr inbounds i64, i64* %49, i64 0, !dbg !275
 allocation intermediate:   %49 = load i64*, i64** %d85, align 8, !dbg !277
=>  %d85 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %48, i32 0, i32 0, !dbg !277
 allocation intermediate:   %d85 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %48, i32 0, i32 0, !dbg !277
=>  %48 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !275
 allocation intermediate:   %48 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !275
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5a09f80
DSOURCEGEP INSTRUCTION   %d88 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !279
[Source:]   %d88 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !279
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
CONSTRAINING: COLLAPSED: SCMRE2: elem 0:default:0x5eeb370
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !280
[Sink:]   %arrayidx89 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !280
 allocation intermediate:   %51 = load i64*, i64** %d88, align 8, !dbg !279
=>  %d88 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !279
 allocation intermediate:   %d88 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !279
=>  %tmp = alloca %struct.bignum_st, align 8
FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx89 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !280
[Sink:]   %arrayidx89 = getelementptr inbounds i64, i64* %51, i64 0, !dbg !280
 allocation intermediate:   %51 = load i64*, i64** %d88, align 8, !dbg !279
=>  %d88 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !279
 allocation intermediate:   %d88 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !279
=>  %tmp = alloca %struct.bignum_st, align 8
FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 0
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
Creating ConsElem Map for :	Node0x59dd0c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d93 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %55, i32 0, i32 0, !dbg !294
[Source:]   %d93 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %55, i32 0, i32 0, !dbg !294
StructType: allocation intermediate:   %55 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !293
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a09e60
DSOURCEGEP INSTRUCTION   %arrayidx94 = getelementptr inbounds i64, i64* %56, i64 %idxprom92, !dbg !293
[Source:]   %arrayidx94 = getelementptr inbounds i64, i64* %56, i64 %idxprom92, !dbg !293
DSOURCEGEP INSTRUCTION   %d97 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !298
[Source:]   %d97 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 0, !dbg !298
StructType:FINAL:   %tmp = alloca %struct.bignum_st, align 8
Trying to find element at offset 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
CONSTRAINING: COLLAPSED: SCMRE2: elem 0:default:0x5eeb370
DSINKGEP INSTRUCTION   %arrayidx98 = getelementptr inbounds i64, i64* %59, i64 %idxprom96, !dbg !297
[Sink:]   %arrayidx98 = getelementptr inbounds i64, i64* %59, i64 %idxprom96, !dbg !297
DSINKGEP INSTRUCTION   %arrayidx98 = getelementptr inbounds i64, i64* %59, i64 %idxprom96, !dbg !297
[Sink:]   %arrayidx98 = getelementptr inbounds i64, i64* %59, i64 %idxprom96, !dbg !297
DSINKGEP INSTRUCTION   %top99 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !303
[Sink:]   %top99 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !303
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %top99 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !303
[Sink:]   %top99 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %tmp, i32 0, i32 1, !dbg !303
StructType:::IS STRUCT TY::FINAL:   %tmp = alloca %struct.bignum_st, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %neg107 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %64, i32 0, i32 3, !dbg !315
[Source:]   %neg107 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %64, i32 0, i32 3, !dbg !315
StructType: allocation intermediate:   %64 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !313
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x59dc7c0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc7c0:s0 -> Node0x59efb80;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  : CRE: elem 0:default:0x5a04160
Creating ConsElem Map for :	Node0x59dd4c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on MOD_EXP_CTIME_COPY_TO_PREBUF in context [BN_mod_exp_mont_consttime ]
Creating ConsElem Map for :	Node0x59e2190 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59e2190:s0 -> Node0x59e1f50;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59e1f50 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e1f50:s0 -> Node0x59e4840;
Creating ConsElem Map for :	Node0x59e2250 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e2310 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x59e2310:s0 -> Node0x59e4840;
EDGE: [0: tymap-size 1]:i8
	Node0x59e4840 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x59e23d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e2490 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e26d0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e2790 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x59e2790:s0 -> Node0x59e4840;
EDGE: [0: tymap-size 1]:i64
	Node0x59e4840 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !106
[Source:]   %top1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 1, !dbg !106
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !105
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x5b316e0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
DSOURCEGEP INSTRUCTION   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !110
[Source:]   %top2 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !110
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !109
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x5b316e0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
Creating ConsElem Map for :	Node0x59e2550 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e2610 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 0, !dbg !128
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %12, i32 0, i32 0, !dbg !128
StructType: allocation intermediate:   %12 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !127
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x5b31670
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %13, i64 %idxprom, !dbg !127
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %13, i64 %idxprom, !dbg !127
DSINKGEP INSTRUCTION   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !130
[Sink:]   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !130
DSINKGEP INSTRUCTION   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !130
[Sink:]   %arrayidx5 = getelementptr inbounds i64, i64* %16, i64 %idxprom4, !dbg !130
Running on MOD_EXP_CTIME_COPY_FROM_PREBUF in context [BN_mod_exp_mont_consttime ]
Using taint reachable signature for:   %call = call %struct.bignum_st* @bn_wexpand(%struct.bignum_st* %3, i32 %4), !dbg !106
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !103
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %3 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !103
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %3 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !103
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Using taint reachable signature for:   call void @bn_correct_top(%struct.bignum_st* %70), !dbg !290
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !289
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
REACHABLE SOURCE:   %70 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !289
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %70 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !289
Added child elem: 	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x59e3380 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x59e3380:s0 -> Node0x59e3080;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Creating ConsElem Map for :	Node0x59e3440 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3540 [shape=record,shape=Mrecord,label="{0: i8*,  : SMR\n|{<s0>0}}"];
	Node0x59e3540:s0 -> Node0x59efd40;
EDGE: [0: tymap-size 1]:i8
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x59e36c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3800 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3bc0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3d00 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x59e3d00:s0 -> Node0x59efd40;
EDGE: [0: tymap-size 1]:i64
	Node0x59efd40 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x59e32c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3940 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3e80 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e3a80 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %11, i64 %idxprom, !dbg !140
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %11, i64 %idxprom, !dbg !140
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %19, i32 0, i32 0, !dbg !155
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %19, i32 0, i32 0, !dbg !155
StructType: allocation intermediate:   %19 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !154
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !154
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !154
DSINKGEP INSTRUCTION   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !154
[Sink:]   %arrayidx10 = getelementptr inbounds i64, i64* %20, i64 %idxprom9, !dbg !154
Creating ConsElem Map for :	Node0x59e3fc0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e4100 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e4240 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e4380 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e44c0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e4600 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 %idxprom44, !dbg !237
[Source:]   %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 %idxprom44, !dbg !237
DSOURCEGEP INSTRUCTION   %arrayidx50 = getelementptr inbounds i64, i64* %44, i64 %idxprom49, !dbg !244
[Source:]   %arrayidx50 = getelementptr inbounds i64, i64* %44, i64 %idxprom49, !dbg !244
DSOURCEGEP INSTRUCTION   %arrayidx56 = getelementptr inbounds i64, i64* %49, i64 %idxprom55, !dbg !252
[Source:]   %arrayidx56 = getelementptr inbounds i64, i64* %49, i64 %idxprom55, !dbg !252
DSOURCEGEP INSTRUCTION   %arrayidx62 = getelementptr inbounds i64, i64* %54, i64 %idxprom61, !dbg !260
[Source:]   %arrayidx62 = getelementptr inbounds i64, i64* %54, i64 %idxprom61, !dbg !260
DSOURCEGEP INSTRUCTION   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %63, i32 0, i32 0, !dbg !278
[Source:]   %d75 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %63, i32 0, i32 0, !dbg !278
StructType: allocation intermediate:   %63 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !277
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE: elem 0:default:0x5cd0150
DSINKGEP INSTRUCTION   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !277
[Sink:]   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !277
DSINKGEP INSTRUCTION   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !277
[Sink:]   %arrayidx76 = getelementptr inbounds i64, i64* %64, i64 %idxprom74, !dbg !277
DSINKGEP INSTRUCTION   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !287
[Sink:]   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !287
StructType:::IS STRUCT TY:: allocation intermediate:   %69 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !286
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !287
[Sink:]   %top83 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %69, i32 0, i32 1, !dbg !287
StructType:::IS STRUCT TY:: allocation intermediate:   %69 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !286
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x59e3080 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59e3080:s0 -> Node0x59efd40;
Trying to find element at offset 8
Running on constant_time_eq_int in context [MOD_EXP_CTIME_COPY_FROM_PREBUF ]
Creating ConsElem Map for :	Node0x59e5970 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e5af0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_eq in context [constant_time_eq_int ]
Creating ConsElem Map for :	Node0x59e5d80 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x59e5f00 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_is_zero in context [constant_time_eq ]
Creating ConsElem Map for :	Node0x59e6190 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Running on constant_time_msb in context [constant_time_is_zero ]
Creating ConsElem Map for :	Node0x59e64e0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x5a00440
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x5a00440
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x5a00440
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x59dc880 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
FOUND 1 elements from the locsForValue
Number of elements to constrain: 1
VOIDTB==TE: CE: elem 0:default: : addr 0x5a00440
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x59dc940 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x59dc940:s0 -> Node0x59de560;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x59de560 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
#--------------Results------------------
bn_exp.c line 318
bn_exp.c line 319
bn_exp.c line 317
bn_exp.c line 327
bn_exp.c line 332
bn_exp.c line 334
bn_exp.c line 347
bn_exp.c line 347
bn_exp.c line 347
bn_exp.c line 359
bn_exp.c line 363
bn_exp.c line 363
bn_exp.c line 364
bn_exp.c line 369
bn_exp.c line 374
bn_exp.c line 377
bn_exp.c line 377
bn_exp.c line 377
bn_exp.c line 378
bn_exp.c line 379
bn_exp.c line 382
bn_exp.c line 383
bn_exp.c line 383
bn_exp.c line 398
bn_exp.c line 399
bn_exp.c line 403
bn_exp.c line 413
bn_exp.c line 416
bn_exp.c line 418
bn_exp.c line 421
bn_exp.c line 434
bn_exp.c line 435
bn_exp.c line 437
bn_exp.c line 448
bn_exp.c line 449
bn_exp.c line 454
bn_exp.c line 461
bn_exp.c line 475
bn_exp.c line 621
bn_exp.c line 629
bn_exp.c line 631
bn_exp.c line 651
bn_exp.c line 685
bn_exp.c line 685
bn_exp.c line 685
bn_exp.c line 709
bn_exp.c line 712
bn_exp.c line 717
bn_exp.c line 726
bn_exp.c line 740
bn_exp.c line 743
bn_exp.c line 748
bn_exp.c line 752
bn_exp.c line 752
bn_exp.c line 753
bn_exp.c line 755
bn_exp.c line 757
bn_exp.c line 1023
bn_exp.c line 1024
bn_exp.c line 1029
bn_exp.c line 1031
bn_exp.c line 1040
bn_exp.c line 1050
bn_exp.c line 1054
bn_exp.c line 1055
bn_exp.c line 1068
bn_exp.c line 1083
bn_exp.c line 1089
bn_exp.c line 522
bn_exp.c line 525
bn_exp.c line 540
bn_exp.c line 543
bn_exp.c line 544
bn_exp.c line 547
bn_exp.c line 566
bn_exp.c line 569
#--------------Statistics----------------
:: Tainted Branches: 76
:: Branch Instructions: 498
:: Conditional Branches: 218
:: Vulnerable Branches: 15.26% [76/498]
