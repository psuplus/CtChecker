BN_EXP:
BN_MOD_EXP:
BN_MOD_EXP_RECP:
BN_MOD_EXP_MONT:
bn_exp.c line  317 - if (BN_get_flags(p, BN_FLG_CONSTTIME) != 0
bn_exp.c line  318 - || BN_get_flags(a, BN_FLG_CONSTTIME) != 0
bn_exp.c line  319 - || BN_get_flags(m, BN_FLG_CONSTTIME) != 0) {
bn_exp.c line  327 - if (!BN_is_odd(m)) {
bn_exp.c line  332 - if (bits == 0) {
bn_exp.c line  334 - if (BN_is_one(m)) {
bn_exp.c line  347 - if (!d || !r || !val[0])
bn_exp.c line  347 - if (!d || !r || !val[0])
bn_exp.c line  347 - if (!d || !r || !val[0])
bn_exp.c line  357 - if ((mont = BN_MONT_CTX_new()) == NULL)
bn_exp.c line  363 - if (a->neg || BN_ucmp(a, m) >= 0) {
bn_exp.c line  363 - if (a->neg || BN_ucmp(a, m) >= 0) {
bn_exp.c line  364 - if (!BN_nnmod(val[0], a, m, ctx))
bn_exp.c line  369 - if (BN_is_zero(aa)) {
bn_exp.c line  377 - window = BN_window_bits_for_exponent_size(bits);
bn_exp.c line  377 - window = BN_window_bits_for_exponent_size(bits);
bn_exp.c line  377 - window = BN_window_bits_for_exponent_size(bits);
bn_exp.c line  378 - if (window > 1) {
bn_exp.c line  382 - for (i = 1; i < j; i++) {
bn_exp.c line  383 - if (((val[i] = BN_CTX_get(ctx)) == NULL) ||
bn_exp.c line  398 - if (m->d[j - 1] & (((BN_ULONG)1) << (BN_BITS2 - 1))) {
bn_exp.c line  399 - if (bn_wexpand(r, j) == NULL)
bn_exp.c line  403 - for (i = 1; i < j; i++)
bn_exp.c line  416 - if (BN_is_bit_set(p, wstart) == 0) {
bn_exp.c line  421 - if (wstart == 0)
bn_exp.c line  434 - for (i = 1; i < window; i++) {
bn_exp.c line  435 - if (wstart - i < 0)
bn_exp.c line  437 - if (BN_is_bit_set(p, wstart - i)) {
bn_exp.c line  448 - for (i = 0; i < j; i++) {
bn_exp.c line  461 - if (wstart < 0)
BN_MOD_EXP_MONT_CONSTTIME:
bn_exp.c line  621 - if (!BN_is_odd(m)) {
bn_exp.c line  629 - if (bits == 0) {
bn_exp.c line  631 - if (BN_is_one(m)) {
bn_exp.c line  649 - if ((mont = BN_MONT_CTX_new()) == NULL)
bn_exp.c line  685 - window = BN_window_bits_for_ctime_exponent_size(bits);
bn_exp.c line  685 - window = BN_window_bits_for_ctime_exponent_size(bits);
bn_exp.c line  685 - window = BN_window_bits_for_ctime_exponent_size(bits);
bn_exp.c line  709 - ((2 * top) >
bn_exp.c line  712 - if (powerbufLen < 3072)
bn_exp.c line  717 - if ((powerbufFree =
bn_exp.c line  726 - if (powerbufLen < 3072)
bn_exp.c line  740 - if (m->d[top - 1] & (((BN_ULONG)1) << (BN_BITS2 - 1))) {
bn_exp.c line  743 - for (i = 1; i < top; i++)
bn_exp.c line  752 - if (a->neg || BN_ucmp(a, m) >= 0) {
bn_exp.c line  752 - if (a->neg || BN_ucmp(a, m) >= 0) {
bn_exp.c line  753 - if (!BN_mod(&am, a, m, ctx))
bn_exp.c line 1023 - if (window > 1) {
bn_exp.c line 1029 - for (i = 3; i < numPowers; i++) {
bn_exp.c line 1040 - for (wvalue = 0, i = bits % window; i >= 0; i--, bits--)
bn_exp.c line 1050 - while (bits >= 0) {
bn_exp.c line 1054 - for (i = 0; i < window; i++, bits--) {
bn_exp.c line 1089 - if (powerbuf != NULL) {
BN_MOD_EXP_MONT_WORD:
BN_MOD_EXP_SIMPLE:
