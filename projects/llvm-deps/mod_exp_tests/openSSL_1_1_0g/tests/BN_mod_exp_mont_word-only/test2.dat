Args: ../../../..//Debug+Asserts/bin/opt -load ../../../..//projects/poolalloc/Debug+Asserts/lib/LLVMDataStructure.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Constraints.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/sourcesinkanalysis.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/pointstointerface.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Deps.so -load ../../../..//projects/llvm-deps/Debug+Asserts/lib/Security.so -vulnerablebranch -debug 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
Merged 13 call nodes.
Merged 5 call nodes.
Merged 6 call nodes.
Merged 4 call nodes.
Merged 6 call nodes.
Merged 5 call nodes.
Merged 1 call nodes.
Attempting to merge two chunks of the same node together!
Merged 3 call nodes.
Removing llvm.dbg.declare from bn_free_d
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from BN_GENCB_get_arg
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_free
Removing llvm.dbg.declare from BN_GENCB_new
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_is_negative
Removing llvm.dbg.declare from BN_is_odd
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_one
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_zero_ex
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_get_word
Removing llvm.dbg.declare from BN_clear
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from BN_secure_new
Removing llvm.dbg.declare from BN_new
Removing llvm.dbg.declare from bn_init
Removing llvm.dbg.declare from BN_free
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_is_zero
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits_word
Removing llvm.dbg.declare from BN_get_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from bn_free_d
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand_internal
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn_expand
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from bn2binpad
Removing llvm.dbg.declare from BN_GENCB_get_arg
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_set_old
Removing llvm.dbg.declare from BN_GENCB_free
Removing llvm.dbg.declare from BN_GENCB_new
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_with_flags
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_to_montgomery
Removing llvm.dbg.declare from BN_is_negative
Removing llvm.dbg.declare from BN_is_odd
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_word
Removing llvm.dbg.declare from BN_is_one
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_abs_is_word
Removing llvm.dbg.declare from BN_zero_ex
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_security_bits
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from BN_consttime_swap
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_part_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from bn_cmp_words
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_set_negative
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_mask_bits
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_is_bit_set
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_clear_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_set_bit
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_cmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_ucmp
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_bn2lebinpad
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_lebin2bn
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2bin
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from BN_bn2binpad
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from bn_correct_top
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_bin2bn
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_set_word
Removing llvm.dbg.declare from BN_get_word
Removing llvm.dbg.declare from BN_clear
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_swap
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from BN_set_flags
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from bn_wexpand
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_copy
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from BN_dup
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from bn_expand2
Removing llvm.dbg.declare from BN_secure_new
Removing llvm.dbg.declare from BN_new
Removing llvm.dbg.declare from bn_init
Removing llvm.dbg.declare from BN_free
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_get_flags
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_clear_free
Removing llvm.dbg.declare from BN_is_zero
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits
Removing llvm.dbg.declare from BN_num_bits_word
Removing llvm.dbg.declare from BN_get_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from BN_set_params
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_TO_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from MOD_EXP_CTIME_COPY_FROM_PREBUF
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq_int
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_eq
Removing llvm.dbg.declare from constant_time_is_zero
Removing llvm.dbg.declare from constant_time_msb
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_simple
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_mont_consttime
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_recp
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp_mont_word
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_mod_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Removing llvm.dbg.declare from BN_exp
Visiting single node SCC #: 3 fn: BN_get_flags
  [BU] Calculating graph for: BN_get_flags
  [BU] Done inlining: BN_get_flags [3+0]
Visiting single node SCC #: 6 fn: bn_free_d
  [BU] Calculating graph for: bn_free_d
    Inlining graph for BN_get_flags[3+0] into 'bn_free_d' [4+0]
  [BU] Done inlining: bn_free_d [4+0]
Visiting single node SCC #: 7 fn: bn_expand_internal
  [BU] Calculating graph for: bn_expand_internal
    Inlining graph for BN_get_flags[3+0] into 'bn_expand_internal' [15+0]
  [BU] Done inlining: bn_expand_internal [15+0]
Visiting single node SCC #: 5 fn: bn_expand2
  [BU] Calculating graph for: bn_expand2
    Inlining graph for bn_free_d[4+0] into 'bn_expand2' [6+0]
    Inlining graph for bn_expand_internal[15+0] into 'bn_expand2' [6+0]
  [BU] Done inlining: bn_expand2 [6+0]
Visiting single node SCC #: 4 fn: bn_wexpand
  [BU] Calculating graph for: bn_wexpand
    Inlining graph for bn_expand2[6+0] into 'bn_wexpand' [3+0]
  [BU] Done inlining: bn_wexpand [4+0]
Visiting single node SCC #: 8 fn: BN_set_flags
  [BU] Calculating graph for: BN_set_flags
  [BU] Done inlining: BN_set_flags [3+0]
Visiting single node SCC #: 2 fn: BN_copy
  [BU] Calculating graph for: BN_copy
    Inlining graph for BN_get_flags[3+0] into 'BN_copy' [15+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_copy' [15+0]
    Inlining graph for BN_set_flags[3+0] into 'BN_copy' [14+0]
  [BU] Done inlining: BN_copy [14+0]
Visiting single node SCC #: 9 fn: BN_is_odd
  [BU] Calculating graph for: BN_is_odd
  [BU] Done inlining: BN_is_odd [3+0]
Visiting single node SCC #: 11 fn: BN_num_bits_word
  [BU] Calculating graph for: BN_num_bits_word
  [BU] Done inlining: BN_num_bits_word [3+0]
Visiting single node SCC #: 12 fn: BN_is_zero
  [BU] Calculating graph for: BN_is_zero
  [BU] Done inlining: BN_is_zero [2+0]
Visiting single node SCC #: 10 fn: BN_num_bits
  [BU] Calculating graph for: BN_num_bits
    Inlining graph for BN_is_zero[2+0] into 'BN_num_bits' [5+0]
  [BU] Done inlining: BN_num_bits [5+0]
Visiting single node SCC #: 14 fn: bn_expand
  [BU] Calculating graph for: bn_expand
    Inlining graph for bn_expand2[6+0] into 'bn_expand' [4+0]
  [BU] Done inlining: bn_expand [5+0]
Visiting single node SCC #: 13 fn: BN_set_word
  [BU] Calculating graph for: BN_set_word
    Inlining graph for bn_expand[5+0] into 'BN_set_word' [6+0]
  [BU] Done inlining: BN_set_word [5+0]
Visiting single node SCC #: 15 fn: BN_is_bit_set
  [BU] Calculating graph for: BN_is_bit_set
  [BU] Done inlining: BN_is_bit_set [7+0]
Visiting single node SCC #: 1 fn: BN_exp
  [BU] Calculating graph for: BN_exp
    Inlining graph for BN_copy[14+0] into 'BN_exp' [18+0]
    Inlining graph for BN_copy[14+0] into 'BN_exp' [19+0]
    Inlining graph for BN_copy[14+0] into 'BN_exp' [19+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_exp' [18+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_exp' [19+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_exp' [19+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_exp' [19+0]
    Inlining graph for BN_set_word[5+0] into 'BN_exp' [19+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_exp' [19+0]
  [BU] Done inlining: BN_exp [19+0]
Visiting single node SCC #: 19 fn: BN_abs_is_word
  [BU] Calculating graph for: BN_abs_is_word
  [BU] Done inlining: BN_abs_is_word [4+0]
Visiting single node SCC #: 18 fn: BN_is_one
  [BU] Calculating graph for: BN_is_one
    Inlining graph for BN_abs_is_word[4+0] into 'BN_is_one' [2+0]
  [BU] Done inlining: BN_is_one [3+0]
Visiting single node SCC #: 20 fn: BN_to_montgomery
  [BU] Calculating graph for: BN_to_montgomery
  [BU] Done inlining: BN_to_montgomery [8+0]
Visiting single node SCC #: 17 fn: BN_mod_exp_mont_word
  [BU] Calculating graph for: BN_mod_exp_mont_word
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_mont_word' [27+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp_mont_word' [27+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_word' [27+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_mont_word' [27+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont_word' [28+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont_word' [28+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont_word' [28+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont_word' [29+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_mont_word' [30+0]
  [BU] Done inlining: BN_mod_exp_mont_word [30+0]
Visiting single node SCC #: 23 fn: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_TO_PREBUF
  [BU] Done inlining: MOD_EXP_CTIME_COPY_TO_PREBUF [12+0]
Visiting single node SCC #: 28 fn: constant_time_msb
  [BU] Calculating graph for: constant_time_msb
  [BU] Done inlining: constant_time_msb [1+0]
Visiting single node SCC #: 27 fn: constant_time_is_zero
  [BU] Calculating graph for: constant_time_is_zero
  [BU] Done inlining: constant_time_is_zero [1+0]
Visiting single node SCC #: 26 fn: constant_time_eq
  [BU] Calculating graph for: constant_time_eq
  [BU] Done inlining: constant_time_eq [2+0]
Visiting single node SCC #: 25 fn: constant_time_eq_int
  [BU] Calculating graph for: constant_time_eq_int
  [BU] Done inlining: constant_time_eq_int [2+0]
Visiting single node SCC #: 29 fn: bn_correct_top
  [BU] Calculating graph for: bn_correct_top
  [BU] Done inlining: bn_correct_top [5+0]
Visiting single node SCC #: 24 fn: MOD_EXP_CTIME_COPY_FROM_PREBUF
  [BU] Calculating graph for: MOD_EXP_CTIME_COPY_FROM_PREBUF
    Inlining graph for bn_wexpand[4+0] into 'MOD_EXP_CTIME_COPY_FROM_PREBUF' [21+0]
    Inlining graph for bn_correct_top[5+0] into 'MOD_EXP_CTIME_COPY_FROM_PREBUF' [20+0]
  [BU] Done inlining: MOD_EXP_CTIME_COPY_FROM_PREBUF [20+0]
Visiting single node SCC #: 30 fn: BN_value_one
  [BU] Calculating graph for: BN_value_one
  [BU] Done inlining: BN_value_one [2+0]
Visiting single node SCC #: 31 fn: BN_ucmp
  [BU] Calculating graph for: BN_ucmp
  [BU] Done inlining: BN_ucmp [12+0]
Visiting single node SCC #: 22 fn: BN_mod_exp_mont_consttime
  [BU] Calculating graph for: BN_mod_exp_mont_consttime
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_TO_PREBUF[12+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[20+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for MOD_EXP_CTIME_COPY_FROM_PREBUF[20+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for BN_value_one[2+0] into 'BN_mod_exp_mont_consttime' [30+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_mont_consttime' [31+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont_consttime' [32+0]
    Inlining graph for BN_ucmp[12+0] into 'BN_mod_exp_mont_consttime' [33+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_mont_consttime' [34+0]
  [BU] Done inlining: BN_mod_exp_mont_consttime [34+0]
Visiting single node SCC #: 21 fn: BN_mod_exp_mont
  [BU] Calculating graph for: BN_mod_exp_mont
    Inlining graph for BN_mod_exp_mont_consttime[34+0] into 'BN_mod_exp_mont' [34+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_to_montgomery[8+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_value_one[2+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_is_zero[2+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_mod_exp_mont' [38+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for bn_correct_top[5+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_ucmp[12+0] into 'BN_mod_exp_mont' [37+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_mont' [37+0]
  [BU] Done inlining: BN_mod_exp_mont [37+0]
Visiting single node SCC #: 32 fn: BN_mod_exp_recp
  [BU] Calculating graph for: BN_mod_exp_recp
    Inlining graph for BN_copy[14+0] into 'BN_mod_exp_recp' [27+0]
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_recp' [28+0]
    Inlining graph for BN_is_zero[2+0] into 'BN_mod_exp_recp' [29+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_recp' [29+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_recp' [29+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_recp' [29+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_recp' [29+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_recp' [30+0]
  [BU] Done inlining: BN_mod_exp_recp [30+0]
Visiting single node SCC #: 16 fn: BN_mod_exp
  [BU] Calculating graph for: BN_mod_exp
    Inlining graph for BN_mod_exp_mont_word[30+0] into 'BN_mod_exp' [13+0]
    Inlining graph for BN_mod_exp_mont[37+0] into 'BN_mod_exp' [17+0]
    Inlining graph for BN_mod_exp_recp[30+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_is_odd[3+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp' [18+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp' [18+0]
  [BU] Done inlining: BN_mod_exp [16+0]
Visiting single node SCC #: 33 fn: BN_mod_exp_simple
  [BU] Calculating graph for: BN_mod_exp_simple
    Inlining graph for BN_is_one[3+0] into 'BN_mod_exp_simple' [25+0]
    Inlining graph for BN_num_bits[5+0] into 'BN_mod_exp_simple' [26+0]
    Inlining graph for BN_is_zero[2+0] into 'BN_mod_exp_simple' [27+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_simple' [27+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_simple' [27+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_mod_exp_simple' [27+0]
    Inlining graph for BN_set_word[5+0] into 'BN_mod_exp_simple' [27+0]
    Inlining graph for BN_is_bit_set[7+0] into 'BN_mod_exp_simple' [28+0]
  [BU] Done inlining: BN_mod_exp_simple [28+0]
Visiting single node SCC #: 34 fn: BN_set_params
  [BU] Calculating graph for: BN_set_params
  [BU] Done inlining: BN_set_params [4+0]
Visiting single node SCC #: 35 fn: BN_get_params
  [BU] Calculating graph for: BN_get_params
  [BU] Done inlining: BN_get_params [2+0]
Visiting single node SCC #: 36 fn: BN_clear_free
  [BU] Calculating graph for: BN_clear_free
    Inlining graph for BN_get_flags[3+0] into 'BN_clear_free' [5+0]
    Inlining graph for bn_free_d[4+0] into 'BN_clear_free' [5+0]
  [BU] Done inlining: BN_clear_free [5+0]
Visiting single node SCC #: 37 fn: BN_free
  [BU] Calculating graph for: BN_free
    Inlining graph for BN_get_flags[3+0] into 'BN_free' [3+0]
    Inlining graph for bn_free_d[4+0] into 'BN_free' [3+0]
  [BU] Done inlining: BN_free [4+0]
Visiting single node SCC #: 38 fn: bn_init
  [BU] Calculating graph for: bn_init
  [BU] Done inlining: bn_init [2+0]
Visiting single node SCC #: 39 fn: BN_new
  [BU] Calculating graph for: BN_new
  [BU] Done inlining: BN_new [4+0]
Visiting single node SCC #: 40 fn: BN_secure_new
  [BU] Calculating graph for: BN_secure_new
    Inlining graph for BN_new[4+0] into 'BN_secure_new' [2+0]
  [BU] Done inlining: BN_secure_new [2+0]
Visiting single node SCC #: 41 fn: BN_dup
  [BU] Calculating graph for: BN_dup
    Inlining graph for BN_new[4+0] into 'BN_dup' [6+0]
    Inlining graph for BN_secure_new[2+0] into 'BN_dup' [6+0]
    Inlining graph for BN_copy[14+0] into 'BN_dup' [6+0]
    Inlining graph for BN_get_flags[3+0] into 'BN_dup' [7+0]
    Inlining graph for BN_free[4+0] into 'BN_dup' [7+0]
  [BU] Done inlining: BN_dup [7+0]
Visiting single node SCC #: 42 fn: BN_swap
  [BU] Calculating graph for: BN_swap
  [BU] Done inlining: BN_swap [11+0]
Visiting single node SCC #: 43 fn: BN_clear
  [BU] Calculating graph for: BN_clear
  [BU] Done inlining: BN_clear [3+0]
Visiting single node SCC #: 44 fn: BN_get_word
  [BU] Calculating graph for: BN_get_word
  [BU] Done inlining: BN_get_word [4+0]
Visiting single node SCC #: 45 fn: BN_bin2bn
  [BU] Calculating graph for: BN_bin2bn
    Inlining graph for BN_new[4+0] into 'BN_bin2bn' [13+0]
    Inlining graph for BN_free[4+0] into 'BN_bin2bn' [13+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_bin2bn' [13+0]
    Inlining graph for bn_correct_top[5+0] into 'BN_bin2bn' [12+0]
  [BU] Done inlining: BN_bin2bn [12+0]
Visiting single node SCC #: 47 fn: bn2binpad
  [BU] Calculating graph for: bn2binpad
    Inlining graph for BN_num_bits[5+0] into 'bn2binpad' [9+0]
  [BU] Done inlining: bn2binpad [9+0]
Visiting single node SCC #: 46 fn: BN_bn2binpad
  [BU] Calculating graph for: BN_bn2binpad
    Inlining graph for bn2binpad[9+0] into 'BN_bn2binpad' [6+0]
  [BU] Done inlining: BN_bn2binpad [7+0]
Visiting single node SCC #: 48 fn: BN_bn2bin
  [BU] Calculating graph for: BN_bn2bin
    Inlining graph for bn2binpad[9+0] into 'BN_bn2bin' [4+0]
  [BU] Done inlining: BN_bn2bin [5+0]
Visiting single node SCC #: 49 fn: BN_lebin2bn
  [BU] Calculating graph for: BN_lebin2bn
    Inlining graph for BN_new[4+0] into 'BN_lebin2bn' [13+0]
    Inlining graph for BN_free[4+0] into 'BN_lebin2bn' [13+0]
    Inlining graph for bn_wexpand[4+0] into 'BN_lebin2bn' [13+0]
    Inlining graph for bn_correct_top[5+0] into 'BN_lebin2bn' [12+0]
  [BU] Done inlining: BN_lebin2bn [12+0]
Visiting single node SCC #: 50 fn: BN_bn2lebinpad
  [BU] Calculating graph for: BN_bn2lebinpad
    Inlining graph for BN_num_bits[5+0] into 'BN_bn2lebinpad' [9+0]
  [BU] Done inlining: BN_bn2lebinpad [9+0]
Visiting single node SCC #: 51 fn: BN_cmp
  [BU] Calculating graph for: BN_cmp
  [BU] Done inlining: BN_cmp [12+0]
Visiting single node SCC #: 52 fn: BN_set_bit
  [BU] Calculating graph for: BN_set_bit
    Inlining graph for bn_wexpand[4+0] into 'BN_set_bit' [9+0]
  [BU] Done inlining: BN_set_bit [8+0]
Visiting single node SCC #: 53 fn: BN_clear_bit
  [BU] Calculating graph for: BN_clear_bit
    Inlining graph for bn_correct_top[5+0] into 'BN_clear_bit' [7+0]
  [BU] Done inlining: BN_clear_bit [7+0]
Visiting single node SCC #: 54 fn: BN_mask_bits
  [BU] Calculating graph for: BN_mask_bits
    Inlining graph for bn_correct_top[5+0] into 'BN_mask_bits' [7+0]
  [BU] Done inlining: BN_mask_bits [7+0]
Visiting single node SCC #: 55 fn: BN_set_negative
  [BU] Calculating graph for: BN_set_negative
    Inlining graph for BN_is_zero[2+0] into 'BN_set_negative' [3+0]
  [BU] Done inlining: BN_set_negative [3+0]
Visiting single node SCC #: 56 fn: bn_cmp_words
  [BU] Calculating graph for: bn_cmp_words
  [BU] Done inlining: bn_cmp_words [9+0]
Visiting single node SCC #: 57 fn: bn_cmp_part_words
  [BU] Calculating graph for: bn_cmp_part_words
    Inlining graph for bn_cmp_words[9+0] into 'bn_cmp_part_words' [9+0]
  [BU] Done inlining: bn_cmp_part_words [9+0]
Visiting single node SCC #: 58 fn: BN_consttime_swap
  [BU] Calculating graph for: BN_consttime_swap
  [BU] Done inlining: BN_consttime_swap [14+0]
Visiting single node SCC #: 59 fn: BN_security_bits
  [BU] Calculating graph for: BN_security_bits
  [BU] Done inlining: BN_security_bits [5+0]
Visiting single node SCC #: 60 fn: BN_zero_ex
  [BU] Calculating graph for: BN_zero_ex
  [BU] Done inlining: BN_zero_ex [2+0]
Visiting single node SCC #: 61 fn: BN_is_word
  [BU] Calculating graph for: BN_is_word
    Inlining graph for BN_abs_is_word[4+0] into 'BN_is_word' [3+0]
  [BU] Done inlining: BN_is_word [4+0]
Visiting single node SCC #: 62 fn: BN_is_negative
  [BU] Calculating graph for: BN_is_negative
  [BU] Done inlining: BN_is_negative [2+0]
Visiting single node SCC #: 63 fn: BN_with_flags
  [BU] Calculating graph for: BN_with_flags
  [BU] Done inlining: BN_with_flags [6+0]
Visiting single node SCC #: 64 fn: BN_GENCB_new
  [BU] Calculating graph for: BN_GENCB_new
  [BU] Done inlining: BN_GENCB_new [4+0]
Visiting single node SCC #: 65 fn: BN_GENCB_free
  [BU] Calculating graph for: BN_GENCB_free
  [BU] Done inlining: BN_GENCB_free [3+0]
Visiting single node SCC #: 66 fn: BN_GENCB_set_old
  [BU] Calculating graph for: BN_GENCB_set_old
  [BU] Done inlining: BN_GENCB_set_old [7+0]
Visiting single node SCC #: 67 fn: BN_GENCB_set
  [BU] Calculating graph for: BN_GENCB_set
  [BU] Done inlining: BN_GENCB_set [7+0]
Visiting single node SCC #: 68 fn: BN_GENCB_get_arg
  [BU] Calculating graph for: BN_GENCB_get_arg
  [BU] Done inlining: BN_GENCB_get_arg [3+0]
[TD] Inlining callers into 'BN_GENCB_get_arg'
[TD] Inlining callers into 'BN_GENCB_set'
[TD] Inlining callers into 'BN_GENCB_set_old'
[TD] Inlining callers into 'BN_GENCB_free'
[TD] Inlining callers into 'BN_GENCB_new'
[TD] Inlining callers into 'BN_with_flags'
[TD] Inlining callers into 'BN_is_negative'
[TD] Inlining callers into 'BN_is_word'
[TD] Inlining callers into 'BN_zero_ex'
[TD] Inlining callers into 'BN_security_bits'
[TD] Inlining callers into 'BN_consttime_swap'
[TD] Inlining callers into 'bn_cmp_part_words'
[TD] Inlining callers into 'bn_cmp_words'
   [TD] Inlining graph into Fn 'bn_cmp_words' from Fn 'bn_cmp_part_words': 3 args
[TD] Inlining callers into 'BN_set_negative'
[TD] Inlining callers into 'BN_mask_bits'
[TD] Inlining callers into 'BN_clear_bit'
[TD] Inlining callers into 'BN_set_bit'
[TD] Inlining callers into 'BN_cmp'
[TD] Inlining callers into 'BN_bn2lebinpad'
[TD] Inlining callers into 'BN_lebin2bn'
[TD] Inlining callers into 'BN_bn2bin'
[TD] Inlining callers into 'BN_bn2binpad'
[TD] Inlining callers into 'bn2binpad'
   [TD] Inlining graph into Fn 'bn2binpad' from Fn 'BN_bn2bin': 3 args
   [TD] Inlining graph into Fn 'bn2binpad' from Fn 'BN_bn2binpad': 3 args
[TD] Inlining callers into 'BN_bin2bn'
[TD] Inlining callers into 'BN_get_word'
[TD] Inlining callers into 'BN_clear'
[TD] Inlining callers into 'BN_swap'
[TD] Inlining callers into 'BN_dup'
[TD] Inlining callers into 'BN_secure_new'
   [TD] Inlining graph into Fn 'BN_secure_new' from Fn 'BN_dup': 0 args
[TD] Inlining callers into 'BN_new'
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_lebin2bn': 0 args
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_bin2bn': 0 args
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_dup': 0 args
   [TD] Inlining graph into Fn 'BN_new' from Fn 'BN_secure_new': 0 args
[TD] Inlining callers into 'bn_init'
[TD] Inlining callers into 'BN_free'
   [TD] Inlining graph into Fn 'BN_free' from Fn 'BN_lebin2bn': 1 args
   [TD] Inlining graph into Fn 'BN_free' from Fn 'BN_bin2bn': 1 args
   [TD] Inlining graph into Fn 'BN_free' from Fn 'BN_dup': 1 args
[TD] Inlining callers into 'BN_clear_free'
[TD] Inlining callers into 'BN_get_params'
[TD] Inlining callers into 'BN_set_params'
[TD] Inlining callers into 'BN_mod_exp_simple'
[TD] Inlining callers into 'BN_mod_exp'
[TD] Inlining callers into 'BN_mod_exp_recp'
   [TD] Inlining graph into Fn 'BN_mod_exp_recp' from Fn 'BN_mod_exp': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_mod_exp_mont_consttime'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_consttime' from Fn 'BN_mod_exp_mont': 6 args
[TD] Inlining callers into 'BN_ucmp'
   [TD] Inlining graph into Fn 'BN_ucmp' from Fn 'BN_mod_exp_mont_consttime': 2 args
   [TD] Inlining graph into Fn 'BN_ucmp' from Fn 'BN_mod_exp_mont': 2 args
[TD] Inlining callers into 'BN_value_one'
   [TD] Inlining graph into Fn 'BN_value_one' from Fn 'BN_mod_exp_mont_consttime': 0 args
   [TD] Inlining graph into Fn 'BN_value_one' from Fn 'BN_mod_exp_mont': 0 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_FROM_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'bn_correct_top'
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_mask_bits': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_clear_bit': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_lebin2bn': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_bin2bn': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 1 args
   [TD] Inlining graph into Fn 'bn_correct_top' from Fn 'BN_mod_exp_mont': 1 args
[TD] Inlining callers into 'constant_time_eq_int'
   [TD] Inlining graph into Fn 'constant_time_eq_int' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 2 args
[TD] Inlining callers into 'constant_time_eq'
   [TD] Inlining graph into Fn 'constant_time_eq' from Fn 'constant_time_eq_int': 2 args
[TD] Inlining callers into 'constant_time_is_zero'
   [TD] Inlining graph into Fn 'constant_time_is_zero' from Fn 'constant_time_eq': 1 args
[TD] Inlining callers into 'constant_time_msb'
   [TD] Inlining graph into Fn 'constant_time_msb' from Fn 'constant_time_is_zero': 1 args
[TD] Inlining callers into 'MOD_EXP_CTIME_COPY_TO_PREBUF'
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
   [TD] Inlining graph into Fn 'MOD_EXP_CTIME_COPY_TO_PREBUF' from Fn 'BN_mod_exp_mont_consttime': 5 args
[TD] Inlining callers into 'BN_mod_exp_mont_word'
   [TD] Inlining graph into Fn 'BN_mod_exp_mont_word' from Fn 'BN_mod_exp': 6 args
[TD] Inlining callers into 'BN_to_montgomery'
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_consttime': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_consttime': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_consttime': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont': 4 args
   [TD] Inlining graph into Fn 'BN_to_montgomery' from Fn 'BN_mod_exp_mont_word': 4 args
[TD] Inlining callers into 'BN_is_one'
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_simple': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_recp': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_mont_consttime': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_is_one' from Fn 'BN_mod_exp_mont_word': 1 args
[TD] Inlining callers into 'BN_abs_is_word'
   [TD] Inlining graph into Fn 'BN_abs_is_word' from Fn 'BN_is_word': 2 args
   [TD] Inlining graph into Fn 'BN_abs_is_word' from Fn 'BN_is_one': 2 args
[TD] Inlining callers into 'BN_exp'
[TD] Inlining callers into 'BN_is_bit_set'
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_mont_consttime': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_is_bit_set' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'BN_set_word'
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont_consttime': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_set_word' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'bn_expand'
   [TD] Inlining graph into Fn 'bn_expand' from Fn 'BN_set_word': 2 args
[TD] Inlining callers into 'BN_num_bits'
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_bn2lebinpad': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'bn2binpad': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_simple': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_recp': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_mont_consttime': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_mod_exp_mont_word': 1 args
   [TD] Inlining graph into Fn 'BN_num_bits' from Fn 'BN_exp': 1 args
[TD] Inlining callers into 'BN_is_zero'
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_set_negative': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_mod_exp_simple': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_mod_exp_recp': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_is_zero' from Fn 'BN_num_bits': 1 args
[TD] Inlining callers into 'BN_num_bits_word'
   [TD] Inlining graph into Fn 'BN_num_bits_word' from Fn 'BN_num_bits': 1 args
[TD] Inlining callers into 'BN_is_odd'
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp_mont_consttime': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp_mont': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp_mont_word': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_mod_exp': 1 args
   [TD] Inlining graph into Fn 'BN_is_odd' from Fn 'BN_exp': 1 args
[TD] Inlining callers into 'BN_copy'
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_dup': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_exp': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_exp': 2 args
   [TD] Inlining graph into Fn 'BN_copy' from Fn 'BN_exp': 2 args
[TD] Inlining callers into 'BN_set_flags'
   [TD] Inlining graph into Fn 'BN_set_flags' from Fn 'BN_copy': 2 args
[TD] Inlining callers into 'bn_wexpand'
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_set_bit': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_lebin2bn': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_bin2bn': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'MOD_EXP_CTIME_COPY_FROM_PREBUF': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'bn_wexpand' from Fn 'BN_copy': 2 args
[TD] Inlining callers into 'bn_expand2'
   [TD] Inlining graph into Fn 'bn_expand2' from Fn 'bn_expand': 2 args
   [TD] Inlining graph into Fn 'bn_expand2' from Fn 'bn_wexpand': 2 args
[TD] Inlining callers into 'bn_expand_internal'
   [TD] Inlining graph into Fn 'bn_expand_internal' from Fn 'bn_expand2': 2 args
[TD] Inlining callers into 'bn_free_d'
   [TD] Inlining graph into Fn 'bn_free_d' from Fn 'BN_free': 1 args
   [TD] Inlining graph into Fn 'bn_free_d' from Fn 'BN_clear_free': 1 args
   [TD] Inlining graph into Fn 'bn_free_d' from Fn 'bn_expand2': 1 args
[TD] Inlining callers into 'BN_get_flags'
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_dup': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_free': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_clear_free': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_simple': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_recp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp_mont_word': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_mod_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'bn_expand_internal': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'bn_free_d': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_copy': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_exp': 2 args
   [TD] Inlining graph into Fn 'BN_get_flags' from Fn 'BN_exp': 2 args
Running on BN_exp in context []
Running on llvm.dbg.declare in context []
Running on ERR_put_error in context []
Running on BN_CTX_start in context []
Running on BN_CTX_get in context []
Running on BN_sqr in context []
Running on BN_mul in context []
Running on BN_CTX_end in context []
Running on BN_mod_exp in context []
Running on BN_mod_exp_mont_word in context []
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 117, i32 66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1126), !dbg !308
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Creating ConsElem Map for :	Node0x55866a0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x55866a0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 117, i32 102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1134), !dbg !315
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
	Node0x55866a0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str = private unnamed_addr constant [9 x i8] c\"bn_exp.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)
Using taint reachable signature for:   call void @BN_CTX_start(%struct.bignum_ctx* %18), !dbg !358
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !357
Creating ConsElem Map for :	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
REACHABLE SOURCE:   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !357
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !357
Using taint reachable signature for:   %call24 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %19), !dbg !360
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !359
REACHABLE SOURCE:   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !359
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %19 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !359
Using taint reachable signature for:   %call25 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %20), !dbg !363
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !362
REACHABLE SOURCE:   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !362
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !362
Using taint reachable signature for:   %call26 = call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* %21), !dbg !366
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !365
REACHABLE SOURCE:   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !365
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !365
Using taint reachable signature for:   %call37 = call %struct.bn_mont_ctx_st* @BN_MONT_CTX_new(), !dbg !388
Using taint reachable signature for:   %call41 = call i32 @BN_MONT_CTX_set(%struct.bn_mont_ctx_st* %27, %struct.bignum_st* %28, %struct.bignum_ctx* %29), !dbg !399
RSINKGEP INSTRUCTION   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !398
RSINKGEP INSTRUCTION   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !395
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !397
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
EDGE: [0: tymap-size 1]:i64
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Creating ConsElem Map for :	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
REACHABLE SOURCE:   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !398
REACHABLE SOURCE:   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !395
REACHABLE SOURCE:   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !397
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %29 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !398
RSINKGEP INSTRUCTION   %27 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !395
RSINKGEP INSTRUCTION   %28 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !397
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call58 = call i32 @BN_mul_word(%struct.bignum_st* %45, i64 %46), !dbg !441
RSINKGEP INSTRUCTION   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !441
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !441
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %45 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !441
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call61 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %47, %struct.bignum_st* %48, %struct.bignum_st* %49, %struct.bignum_ctx* %50), !dbg !444
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !444
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !444
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !444
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !444
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
REACHABLE SOURCE:   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !444
REACHABLE SOURCE:   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !444
REACHABLE SOURCE:   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !444
REACHABLE SOURCE:   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !444
REACHABLE SOURCE: %struct.bignum_st* null
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %49 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !444
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %50 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !444
RSINKGEP INSTRUCTION   %48 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !444
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %47 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !444
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
Using taint reachable signature for:   %call70 = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %56, %struct.bignum_st* %57, %struct.bignum_st* %58, %struct.bn_mont_ctx_st* %59, %struct.bignum_ctx* %60), !dbg !464
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !460
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !457
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !462
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !463
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !461
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !460
REACHABLE SOURCE:   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !457
REACHABLE SOURCE:   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !462
REACHABLE SOURCE:   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !463
REACHABLE SOURCE:   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !461
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %57 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !460
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %56 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !457
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %59 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !462
RSINKGEP INSTRUCTION   %60 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !463
RSINKGEP INSTRUCTION   %58 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !461
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call92 = call i32 @BN_mul_word(%struct.bignum_st* %75, i64 %76), !dbg !498
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !498
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !498
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %75 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !498
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call95 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %77, %struct.bignum_st* %78, %struct.bignum_st* %79, %struct.bignum_ctx* %80), !dbg !501
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !501
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !501
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !501
RSINKGEP INSTRUCTION   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !501
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !501
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !501
REACHABLE SOURCE:   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !501
REACHABLE SOURCE:   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !501
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %77 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !501
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %79 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !501
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %80 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !501
RSINKGEP INSTRUCTION   %78 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !501
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call115 = call i32 @BN_mul_word(%struct.bignum_st* %95, i64 %96), !dbg !533
RSINKGEP INSTRUCTION   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !533
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !533
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %95 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !533
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call118 = call i32 @BN_div(%struct.bignum_st* null, %struct.bignum_st* %97, %struct.bignum_st* %98, %struct.bignum_st* %99, %struct.bignum_ctx* %100), !dbg !536
RSINKGEP INSTRUCTION   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !536
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !536
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !536
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !536
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !536
REACHABLE SOURCE: %struct.bignum_st* null
REACHABLE SOURCE:   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !536
REACHABLE SOURCE:   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !536
REACHABLE SOURCE:   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !536
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %99 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !536
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION %struct.bignum_st* null
RSINKGEP INSTRUCTION   %98 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !536
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %100 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !536
RSINKGEP INSTRUCTION   %97 = load %struct.bignum_st*, %struct.bignum_st** %t, align 8, !dbg !536
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   %call132 = call i32 @BN_from_montgomery(%struct.bignum_st* %106, %struct.bignum_st* %107, %struct.bn_mont_ctx_st* %108, %struct.bignum_ctx* %109), !dbg !558
RSINKGEP INSTRUCTION   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !552
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !557
RSINKGEP INSTRUCTION   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !556
RSINKGEP INSTRUCTION   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !555
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
REACHABLE SOURCE:   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !552
REACHABLE SOURCE:   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !557
REACHABLE SOURCE:   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !556
REACHABLE SOURCE:   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !555
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %106 = load %struct.bignum_st*, %struct.bignum_st** %rr.addr, align 8, !dbg !552
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %109 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !557
RSINKGEP INSTRUCTION   %108 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !556
RSINKGEP INSTRUCTION   %107 = load %struct.bignum_st*, %struct.bignum_st** %r, align 8, !dbg !555
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Using taint reachable signature for:   call void @BN_MONT_CTX_free(%struct.bn_mont_ctx_st* %111), !dbg !568
RSINKGEP INSTRUCTION   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !567
REACHABLE SOURCE:   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !567
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
RSINKGEP INSTRUCTION   %111 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont, align 8, !dbg !567
Using taint reachable signature for:   call void @BN_CTX_end(%struct.bignum_ctx* %112), !dbg !570
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !569
REACHABLE SOURCE:   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !569
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %112 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !569
Creating ConsElem Map for :	Node0x5563c20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5563c20:s0 -> Node0x5563560;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5563560 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5563560:s0 -> Node0x5565ae0;
Creating ConsElem Map for :	Node0x5563da0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5563ee0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5563ee0:s0 -> Node0x55636e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55636e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55636e0:s0 -> Node0x55659a0;
Creating ConsElem Map for :	Node0x5564060 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5564060:s0 -> Node0x55637a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55637a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55637a0:s0 -> Node0x55654e0;
Creating ConsElem Map for :	Node0x55641e0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x55641e0:s0 -> Node0x55638e0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x55638e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x5564360 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x5564360:s0 -> Node0x55639e0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x55639e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x55644e0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x55644e0:s0 -> Node0x55639e0;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x55639e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x55648e0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5563ae0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !320
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !320
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !318
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x5657c00
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSOURCEGEP INSTRUCTION   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !324
[Source:]   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !324
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !323
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x5657b90
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 0, !dbg !323
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 0, !dbg !323
 allocation intermediate:   %6 = load i64*, i64** %d8, align 8, !dbg !324
=>  %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !324
 allocation intermediate:   %d8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !324
=>  %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !323
 allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %m.addr, align 8, !dbg !323
=>  %m.addr = alloca %struct.bignum_st*, align 8
FINAL:   %m.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x5657b90
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
Creating ConsElem Map for :	Node0x55647a0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5564de0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5564de0:s0 -> Node0x5565620;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5565620 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Creating ConsElem Map for :	Node0x5564f60 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5564f60:s0 -> Node0x5565720;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5565720 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x5565720:s0 -> Node0x5565c20;
Creating ConsElem Map for :	Node0x55650e0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x55650e0:s0 -> Node0x5565720;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5565720 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x5565720:s0 -> Node0x5565c20;
Creating ConsElem Map for :	Node0x5564a20 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5564b60 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5564660 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5564ca0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5565260 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5565260:s0 -> Node0x5565720;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5565720 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0}}"];
	Node0x5565720:s0 -> Node0x5565c20;
Running on BN_mod_exp_mont in context []
Running on BN_mod_exp_recp in context []
Running on BN_RECP_CTX_init in context []
Running on BN_RECP_CTX_set in context []
Running on BN_nnmod in context []
Running on BN_mod_mul_reciprocal in context []
Running on BN_new in context []
Running on CRYPTO_zalloc in context []
Running on BN_secure_new in context []
Running on bn_expand2 in context []
Running on BN_dup in context []
Running on BN_copy in context []
Running on BN_RECP_CTX_free in context []
Running on BN_mod_exp_mont_consttime in context []
Running on BN_MONT_CTX_new in context []
Running on BN_MONT_CTX_set in context []
Running on BN_mod_mul_montgomery in context []
Running on BN_from_montgomery in context []
Running on BN_MONT_CTX_free in context []
Running on CRYPTO_malloc in context []
Running on llvm.memset.p0i8.i64 in context []
Running on BN_div in context []
Running on OPENSSL_cleanse in context []
Running on CRYPTO_free in context []
Running on BN_mul_word in context []
Running on BN_mod_exp_simple in context []
Running on BN_mod_mul in context []
Running on BN_abs_is_word in context []
Running on BN_is_one in context []
Running on BN_is_word in context []
Running on BN_is_odd in context []
Running on BN_is_negative in context []
Running on BN_to_montgomery in context []
Running on BN_with_flags in context []
Running on BN_GENCB_new in context []
Running on BN_set_params in context []
Running on BN_get_params in context []
Running on BN_value_one in context []
Running on BN_num_bits_word in context []
Running on BN_num_bits in context []
Running on BN_is_zero in context []
Running on BN_clear_free in context []
Running on BN_get_flags in context []
Running on BN_free in context []
Running on bn_init in context []
Running on llvm.memcpy.p0i8.p0i8.i64 in context []
Running on bn_wexpand in context []
Running on BN_set_flags in context []
Running on BN_swap in context []
Running on BN_clear in context []
Running on BN_get_word in context []
Running on BN_set_word in context []
Running on BN_bin2bn in context []
Running on bn_correct_top in context []
Running on BN_bn2binpad in context []
Running on BN_bn2bin in context []
Running on BN_lebin2bn in context []
Running on BN_bn2lebinpad in context []
Running on BN_ucmp in context []
Running on BN_cmp in context []
Running on BN_set_bit in context []
Running on BN_clear_bit in context []
Running on BN_is_bit_set in context []
Running on BN_mask_bits in context []
Running on BN_set_negative in context []
Running on bn_cmp_words in context []
Running on bn_cmp_part_words in context []
Running on BN_consttime_swap in context []
Running on __assert_fail in context []
Running on BN_security_bits in context []
Running on BN_zero_ex in context []
Running on BN_GENCB_free in context []
Running on BN_GENCB_set_old in context []
Running on BN_GENCB_set in context []
Running on BN_GENCB_get_arg in context []
Running on CRYPTO_secure_free in context []
Running on CRYPTO_secure_zalloc in context []
Running on BN_get_flags in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x5556560 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5556560:s0 -> Node0x55563e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55563e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55563e0:s0 -> Node0x555a6f0;
Creating ConsElem Map for :	Node0x5556620 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !269
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !269
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !268
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x55f77c0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
Running on BN_is_odd in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x555c320 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x555c320:s0 -> Node0x555c160;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555c160 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555c160:s0 -> Node0x555c4a0;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !267
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !267
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !266
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[8,12]0x56d6240
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !272
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !272
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !270
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x5657ff0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !273
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !272
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !272
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !272
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !270
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !270
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[0,8]0x5657ff0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
Running on BN_num_bits in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x555ccd0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x555ccd0:s0 -> Node0x555c9d0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555c9d0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555c9d0:s0 -> Node0x555cf90;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !269
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !269
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !268
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x566ea80
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
Creating ConsElem Map for :	Node0x555ce50 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x555cb90 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !280
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %5, i32 0, i32 0, !dbg !280
StructType: allocation intermediate:   %5 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !279
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x5685ce0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !279
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !279
Running on BN_is_one in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x5568c00 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5568c00:s0 -> Node0x5568a80;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5568a80 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568a80:s0 -> Node0x5568cc0;
DSOURCEGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !271
[Source:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !271
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !269
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 16
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 16
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE[16,20]0x56bba10
Running on BN_set_word in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x555e860 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x555e860:s0 -> Node0x555e460;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Creating ConsElem Map for :	Node0x555e9e0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
Creating ConsElem Map for :	Node0x555e720 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !275
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !275
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !274
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 16
DSINKGEP INSTRUCTION   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !275
[Sink:]   %neg = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 3, !dbg !275
StructType:::IS STRUCT TY:: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !274
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 16
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Trying to find element at offset 16
Tainting at offset: 16
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 16
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !279
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !279
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !278
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[0,8]0x5671370
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !278
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !278
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !279
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !279
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !279
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !278
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !278
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !278
[Sink:]   %arrayidx = getelementptr inbounds i64, i64* %4, i64 0, !dbg !278
 allocation intermediate:   %4 = load i64*, i64** %d, align 8, !dbg !279
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !279
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 0, !dbg !279
=>  %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !278
 allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !278
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !283
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !283
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
DSINKGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !283
[Sink:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 1, !dbg !283
StructType:::IS STRUCT TY:: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !282
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 8
	Node0x555e460 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555e460:s0 -> Node0x555eb20;
Trying to find element at offset 8
Tainting at offset: 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
Running on BN_to_montgomery in context [BN_mod_exp_mont_word ]
Using taint reachable signature for:   %call = call i32 @BN_mod_mul_montgomery(%struct.bignum_st* %0, %struct.bignum_st* %1, %struct.bignum_st* %RR, %struct.bn_mont_ctx_st* %3, %struct.bignum_ctx* %4), !dbg !278
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !274
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !276
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !272
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !277
REACHABLE SOURCE:   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
REACHABLE SOURCE:   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !276
REACHABLE SOURCE:   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !272
REACHABLE SOURCE:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
REACHABLE SOURCE:   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !277
RSOURCEGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
[Source:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
StructType: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !274
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Trying to find element at offset 8
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
CONSTRAINING: VOIDTB==TE: CE: elem 0:default:0x5677940
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x55721b0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
RSINKGEP INSTRUCTION   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
[Sink:]   %RR = getelementptr inbounds %struct.bn_mont_ctx_st, %struct.bn_mont_ctx_st* %2, i32 0, i32 1, !dbg !275
StructType:::IS STRUCT TY:: allocation intermediate:   %2 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !274
=>  %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
FINAL:   %mont.addr = alloca %struct.bn_mont_ctx_st*, align 8
Tainting at offset: 8
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Trying to find element at offset 8
RSINKGEP INSTRUCTION   %3 = load %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st** %mont.addr, align 8, !dbg !276
RSINKGEP INSTRUCTION   %0 = load %struct.bignum_st*, %struct.bignum_st** %r.addr, align 8, !dbg !272
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !273
Added child elem: 	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %4 = load %struct.bignum_ctx*, %struct.bignum_ctx** %ctx.addr, align 8, !dbg !277
Creating ConsElem Map for :	Node0x5569aa0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5569aa0:s0 -> Node0x55696e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55696e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SGMRE\n@BN_value_one.const_one = internal constant %struct.bignum_st \{ i64* @BN_value_one.data_one, i32 1, i32 1, i32 0, i32 2 \}, align 8\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55696e0:s0 -> Node0x5578390;
Creating ConsElem Map for :	Node0x5569c20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5569c20:s0 -> Node0x55696e0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55696e0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SGMRE\n@BN_value_one.const_one = internal constant %struct.bignum_st \{ i64* @BN_value_one.data_one, i32 1, i32 1, i32 0, i32 2 \}, align 8\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55696e0:s0 -> Node0x5578390;
Creating ConsElem Map for :	Node0x5569da0 [shape=record,shape=Mrecord,label="{0: %struct.bn_mont_ctx_st*,  : SMR\n|{<s0>0}}"];
	Node0x5569da0:s0 -> Node0x5569920;
EDGE: [0: tymap-size 1]:%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
	Node0x5569920 [shape=record,shape=Mrecord,label="{VOID: E\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23|<s24>24|<s25>25|<s26>26|<s27>27|<s28>28|<s29>29|<s30>30|<s31>31|<s32>32|<s33>33|<s34>34|<s35>35|<s36>36|<s37>37|<s38>38|<s39>39|<s40>40|<s41>41|<s42>42|<s43>43|<s44>44|<s45>45|<s46>46|<s47>47|<s48>48|<s49>49|<s50>50|<s51>51|<s52>52|<s53>53|<s54>54|<s55>55|<s56>56|<s57>57|<s58>58|<s59>59|<s60>60|<s61>61|<s62>62|<s63>63|<s64>truncated...}}"];
Creating ConsElem Map for :	Node0x5569f20 [shape=record,shape=Mrecord,label="{0: %struct.bignum_ctx*,  : SMR\n|{<s0>0}}"];
	Node0x5569f20:s0 -> Node0x55699e0;
EDGE: [0: tymap-size 1]:%struct.bignum_ctx = type opaque
	Node0x55699e0 [shape=record,shape=Mrecord,label="{VOID: E\n}"];
Running on BN_is_bit_set in context [BN_mod_exp_mont_word ]
Creating ConsElem Map for :	Node0x55601a0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x55601a0:s0 -> Node0x555ff20;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555ff20 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555ff20:s0 -> Node0x55606e0;
Creating ConsElem Map for :	Node0x5560320 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x55600a0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5560460 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x55605a0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !285
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %3, i32 0, i32 1, !dbg !285
StructType: allocation intermediate:   %3 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !283
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[8,12]0x59f2d50
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !292
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 0, !dbg !292
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !291
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  20: i32,  : CRE[0,8]0x59f2db0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !291
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %8, i64 %idxprom, !dbg !291
Running on BN_is_zero in context [BN_num_bits ]
Creating ConsElem Map for :	Node0x555e030 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x555e030:s0 -> Node0x555deb0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555deb0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555deb0:s0 -> Node0x554f3c0;
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !267
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !267
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !266
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CMRE[8,12]0x5768d10
Running on BN_num_bits_word in context [BN_num_bits ]
Creating ConsElem Map for :	Node0x555d840 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom, !dbg !284
[Source:]   %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom, !dbg !284
Created 256 constraint variable(s) for node of size 1
Creating ConsElem Map for :	Node0x555d6c0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom10, !dbg !290
[Source:]   %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom10, !dbg !290
DSOURCEGEP INSTRUCTION   %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom20, !dbg !302
[Source:]   %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom20, !dbg !302
DSOURCEGEP INSTRUCTION   %arrayidx28 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom27, !dbg !308
[Source:]   %arrayidx28 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom27, !dbg !308
DSOURCEGEP INSTRUCTION   %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom40, !dbg !324
[Source:]   %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom40, !dbg !324
DSOURCEGEP INSTRUCTION   %arrayidx48 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom47, !dbg !330
[Source:]   %arrayidx48 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom47, !dbg !330
DSOURCEGEP INSTRUCTION   %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom57, !dbg !341
[Source:]   %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom57, !dbg !341
DSOURCEGEP INSTRUCTION   %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom63, !dbg !346
[Source:]   %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* @BN_num_bits_word.bits, i32 0, i64 %idxprom63, !dbg !346
Running on BN_abs_is_word in context [BN_is_one ]
Creating ConsElem Map for :	Node0x55690f0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x55690f0:s0 -> Node0x5568f70;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Creating ConsElem Map for :	Node0x55691b0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !269
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 1, !dbg !269
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !268
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !275
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %3, i64 0, !dbg !275
 allocation intermediate:   %3 = load i64*, i64** %d, align 8, !dbg !274
=>  %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
 allocation intermediate:   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 0, !dbg !274
=>  %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
 allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !272
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
DSOURCEGEP INSTRUCTION   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 1, !dbg !286
[Source:]   %top3 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %7, i32 0, i32 1, !dbg !286
StructType: allocation intermediate:   %7 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !284
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
Running on bn_expand in context [BN_set_word ]
Creating ConsElem Map for :	Node0x555f5f0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x555f5f0:s0 -> Node0x555f2b0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555f2b0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555f2b0:s0 -> Node0x555f8b0;
Creating ConsElem Map for :	Node0x555f770 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x555f470 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x555f470:s0 -> Node0x555f2b0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x555f2b0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : MRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x555f2b0:s0 -> Node0x555f8b0;
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 2, !dbg !279
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %2, i32 0, i32 2, !dbg !279
StructType: allocation intermediate:   %2 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !278
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : CMRE[12,16]0x5b30eb0
Running on bn_expand2 in context [bn_expand ]
Using taint reachable signature for:   call void @OPENSSL_cleanse(i8* %10, i64 %mul), !dbg !294
RSINKGEP INSTRUCTION   %10 = bitcast i64* %9 to i8*, !dbg !288
REACHABLE SOURCE:   %10 = bitcast i64* %9 to i8*, !dbg !288
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION   %10 = bitcast i64* %9 to i8*, !dbg !288
Creating ConsElem Map for :	Node0x5557720 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5557720:s0 -> Node0x55573a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55573a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55573a0:s0 -> Node0x5556d50;
Creating ConsElem Map for :	Node0x55578a0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !271
[Source:]   %dmax = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 2, !dbg !271
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !270
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x5939a90
Creating ConsElem Map for :	Node0x55579e0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x55579e0:s0 -> Node0x5556d50;
EDGE: [0: tymap-size 1]:i64
	Node0x5556d50 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x55575a0 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x55575a0:s0 -> Node0x55573a0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55573a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55573a0:s0 -> Node0x5556d50;
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !286
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %6, i32 0, i32 0, !dbg !286
StructType: allocation intermediate:   %6 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !284
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x5b490c0
DSOURCEGEP INSTRUCTION   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !290
[Source:]   %d4 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !290
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !288
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x5b490c0
DSOURCEGEP INSTRUCTION   %dmax5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 2, !dbg !292
[Source:]   %dmax5 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 2, !dbg !292
StructType: allocation intermediate:   %11 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !291
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 12
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 12
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[12,16]0x5939a90
DSINKGEP INSTRUCTION   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !300
[Sink:]   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !300
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !299
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x55573a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55573a0:s0 -> Node0x5556d50;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !300
[Sink:]   %d7 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %15, i32 0, i32 0, !dbg !300
StructType:::IS STRUCT TY:: allocation intermediate:   %15 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !299
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 0
	Node0x55573a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55573a0:s0 -> Node0x5556d50;
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
DSINKGEP INSTRUCTION   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !304
[Sink:]   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !304
StructType:::IS STRUCT TY:: allocation intermediate:   %17 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !303
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 12
	Node0x55573a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55573a0:s0 -> Node0x5556d50;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 12
DSINKGEP INSTRUCTION   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !304
[Sink:]   %dmax8 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %17, i32 0, i32 2, !dbg !304
StructType:::IS STRUCT TY:: allocation intermediate:   %17 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !303
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Tainting at offset: 12
	Node0x55573a0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55573a0:s0 -> Node0x5556d50;
Trying to find element at offset 12
Tainting at offset: 12
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 12
Running on bn_expand_internal in context [bn_expand2 ]
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 120, i32 114, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 255), !dbg !280
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Creating ConsElem Map for :	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 120, i32 105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 259), !dbg !287
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   %call6 = call i8* @CRYPTO_secure_zalloc(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 263), !dbg !294
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   %call9 = call i8* @CRYPTO_zalloc(i64 %mul8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 265), !dbg !298
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Using taint reachable signature for:   call void @ERR_put_error(i32 3, i32 120, i32 65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 267), !dbg !305
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Creating ConsElem Map for :	Node0x5559730 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5559730:s0 -> Node0x55593f0;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x55593f0 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x55593f0:s0 -> Node0x5569860;
Creating ConsElem Map for :	Node0x55598b0 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
Creating ConsElem Map for :	Node0x5559b70 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x5559b70:s0 -> Node0x5569860;
EDGE: [0: tymap-size 1]:i64
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x55595b0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x55595b0:s0 -> Node0x5569860;
EDGE: [0: tymap-size 1]:i64
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Creating ConsElem Map for :	Node0x55599f0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x55599f0:s0 -> Node0x5569860;
EDGE: [0: tymap-size 1]:i64
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !309
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %8, i32 0, i32 0, !dbg !309
StructType: allocation intermediate:   %8 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !308
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x59cbd20
Creating ConsElem Map for :	Node0x5559cf0 [shape=record,shape=Mrecord,label="{0: i64*,  : SMR\n|{<s0>0}}"];
	Node0x5559cf0:s0 -> Node0x5569860;
EDGE: [0: tymap-size 1]:i64
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
DSOURCEGEP INSTRUCTION   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 1, !dbg !318
[Source:]   %top = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %11, i32 0, i32 1, !dbg !318
StructType: allocation intermediate:   %11 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !315
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x59cbd90
Creating ConsElem Map for :	Node0x5559e70 [shape=record,shape=Mrecord,label="{0: i32,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx = getelementptr inbounds i64, i64* %14, i64 0, !dbg !337
[Source:]   %arrayidx = getelementptr inbounds i64, i64* %14, i64 0, !dbg !337
 allocation intermediate:   %14 = load i64*, i64** %B, align 8, !dbg !337
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
Creating ConsElem Map for :	Node0x5559fb0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx20 = getelementptr inbounds i64, i64* %16, i64 1, !dbg !339
[Source:]   %arrayidx20 = getelementptr inbounds i64, i64* %16, i64 1, !dbg !339
 allocation intermediate:   %16 = load i64*, i64** %B, align 8, !dbg !339
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
Creating ConsElem Map for :	Node0x555a0f0 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx21 = getelementptr inbounds i64, i64* %18, i64 2, !dbg !341
[Source:]   %arrayidx21 = getelementptr inbounds i64, i64* %18, i64 2, !dbg !341
 allocation intermediate:   %18 = load i64*, i64** %B, align 8, !dbg !341
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
Creating ConsElem Map for :	Node0x555a230 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSOURCEGEP INSTRUCTION   %arrayidx22 = getelementptr inbounds i64, i64* %20, i64 3, !dbg !343
[Source:]   %arrayidx22 = getelementptr inbounds i64, i64* %20, i64 3, !dbg !343
 allocation intermediate:   %20 = load i64*, i64** %B, align 8, !dbg !343
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
Creating ConsElem Map for :	Node0x555a370 [shape=record,shape=Mrecord,label="{0: i64,  : SMR\n}"];
DSINKGEP INSTRUCTION   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !346
[Sink:]   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !346
 allocation intermediate:   %23 = load i64*, i64** %A, align 8, !dbg !346
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
Created 1 constraint variable(s) for node of size 1
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !346
[Sink:]   %arrayidx23 = getelementptr inbounds i64, i64* %23, i64 0, !dbg !346
 allocation intermediate:   %23 = load i64*, i64** %A, align 8, !dbg !346
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !349
[Sink:]   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !349
 allocation intermediate:   %25 = load i64*, i64** %A, align 8, !dbg !349
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !349
[Sink:]   %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !349
 allocation intermediate:   %25 = load i64*, i64** %A, align 8, !dbg !349
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !352
[Sink:]   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !352
 allocation intermediate:   %27 = load i64*, i64** %A, align 8, !dbg !352
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !352
[Sink:]   %arrayidx25 = getelementptr inbounds i64, i64* %27, i64 2, !dbg !352
 allocation intermediate:   %27 = load i64*, i64** %A, align 8, !dbg !352
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !355
[Sink:]   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !355
 allocation intermediate:   %29 = load i64*, i64** %A, align 8, !dbg !355
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 3
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
Tainting at offset: 3
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !355
[Sink:]   %arrayidx26 = getelementptr inbounds i64, i64* %29, i64 3, !dbg !355
 allocation intermediate:   %29 = load i64*, i64** %A, align 8, !dbg !355
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 3
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 3
Tainting at offset: 3
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %top28 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %33, i32 0, i32 1, !dbg !363
[Source:]   %top28 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %33, i32 0, i32 1, !dbg !363
StructType: allocation intermediate:   %33 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !362
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 8
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 8
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[8,12]0x59cbd90
DSOURCEGEP INSTRUCTION   %arrayidx29 = getelementptr inbounds i64, i64* %35, i64 2, !dbg !366
[Source:]   %arrayidx29 = getelementptr inbounds i64, i64* %35, i64 2, !dbg !366
 allocation intermediate:   %35 = load i64*, i64** %B, align 8, !dbg !366
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 2
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
CONSTRAINING: COLLAPSED: SCMRE2: elem 0::0x5dd40a0
DSINKGEP INSTRUCTION   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !368
[Sink:]   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !368
 allocation intermediate:   %37 = load i64*, i64** %A, align 8, !dbg !368
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !368
[Sink:]   %arrayidx30 = getelementptr inbounds i64, i64* %37, i64 2, !dbg !368
 allocation intermediate:   %37 = load i64*, i64** %A, align 8, !dbg !368
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 2
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 2
Tainting at offset: 2
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %arrayidx32 = getelementptr inbounds i64, i64* %38, i64 1, !dbg !370
[Source:]   %arrayidx32 = getelementptr inbounds i64, i64* %38, i64 1, !dbg !370
 allocation intermediate:   %38 = load i64*, i64** %B, align 8, !dbg !370
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
CONSTRAINING: COLLAPSED: SCMRE2: elem 0::0x5dd40a0
DSINKGEP INSTRUCTION   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !371
[Sink:]   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !371
 allocation intermediate:   %40 = load i64*, i64** %A, align 8, !dbg !371
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !371
[Sink:]   %arrayidx33 = getelementptr inbounds i64, i64* %40, i64 1, !dbg !371
 allocation intermediate:   %40 = load i64*, i64** %A, align 8, !dbg !371
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 1
Tainting at offset: 1
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSOURCEGEP INSTRUCTION   %arrayidx35 = getelementptr inbounds i64, i64* %41, i64 0, !dbg !373
[Source:]   %arrayidx35 = getelementptr inbounds i64, i64* %41, i64 0, !dbg !373
 allocation intermediate:   %41 = load i64*, i64** %B, align 8, !dbg !373
=>  %B = alloca i64*, align 8
FINAL:   %B = alloca i64*, align 8
Trying to find element at offset 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
CONSTRAINING: 0: i64,   array: CRE: elem 0:default:0x5673460
CONSTRAINING: COLLAPSED: SCMRE2: elem 0::0x5dd40a0
DSINKGEP INSTRUCTION   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !374
[Sink:]   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !374
 allocation intermediate:   %43 = load i64*, i64** %A, align 8, !dbg !374
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
DSINKGEP INSTRUCTION   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !374
[Sink:]   %arrayidx36 = getelementptr inbounds i64, i64* %43, i64 0, !dbg !374
 allocation intermediate:   %43 = load i64*, i64** %A, align 8, !dbg !374
=>  %A = alloca i64*, align 8
FINAL:   %A = alloca i64*, align 8
Tainting at offset: 0
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
Trying to find element at offset 0
Tainting at offset: 0
	Node0x5569860 [shape=record,shape=Mrecord,label="{COLLAPSED: SMRE2\n|{<s0>0}}"];
Adding 1 elements
Running on bn_free_d in context [bn_expand2 ]
Using taint reachable signature for:   call void @CRYPTO_secure_free(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 174), !dbg !270
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
RSINKGEP INSTRUCTION   %3 = bitcast i64* %2 to i8*, !dbg !270
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE:   %3 = bitcast i64* %2 to i8*, !dbg !270
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
RSINKGEP INSTRUCTION   %3 = bitcast i64* %2 to i8*, !dbg !270
Using taint reachable signature for:   call void @CRYPTO_free(i8* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0), i32 176), !dbg !271
RSINKGEP INSTRUCTION   %6 = bitcast i64* %5 to i8*, !dbg !271
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
REACHABLE SOURCE:   %6 = bitcast i64* %5 to i8*, !dbg !271
REACHABLE SOURCE: i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
	Node0x555a4b0 [shape=record,shape=Mrecord,label="{VOID array: GE\n@.str27 = private unnamed_addr constant [9 x i8] c\"bn_lib.c\\00\", align 1\n|{<s0>0}}"];
RSINKGEP INSTRUCTION   %6 = bitcast i64* %5 to i8*, !dbg !271
RSINKGEP INSTRUCTION i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str27, i32 0, i32 0)
Creating ConsElem Map for :	Node0x5558910 [shape=record,shape=Mrecord,label="{0: %struct.bignum_st*,  : SMR\n|{<s0>0}}"];
	Node0x5558910:s0 -> Node0x5558790;
EDGE: [0: tymap-size 1]:%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
	Node0x5558790 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SMRE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5558790:s0 -> Node0x555a5b0;
DSOURCEGEP INSTRUCTION   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 0, !dbg !270
[Source:]   %d = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %1, i32 0, i32 0, !dbg !270
StructType: allocation intermediate:   %1 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !270
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x5d7ba30
DSOURCEGEP INSTRUCTION   %d1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !271
[Source:]   %d1 = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %4, i32 0, i32 0, !dbg !271
StructType: allocation intermediate:   %4 = load %struct.bignum_st*, %struct.bignum_st** %a.addr, align 8, !dbg !271
=>  %a.addr = alloca %struct.bignum_st*, align 8
FINAL:   %a.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 0
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[0,8]0x5d7ba30
Running on BN_get_flags in context [bn_expand_internal ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !269
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !269
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !268
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x55f77c0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
Running on BN_get_flags in context [bn_free_d ]
DSOURCEGEP INSTRUCTION   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !269
[Source:]   %flags = getelementptr inbounds %struct.bignum_st, %struct.bignum_st* %0, i32 0, i32 4, !dbg !269
StructType: allocation intermediate:   %0 = load %struct.bignum_st*, %struct.bignum_st** %b.addr, align 8, !dbg !268
=>  %b.addr = alloca %struct.bignum_st*, align 8
FINAL:   %b.addr = alloca %struct.bignum_st*, align 8
Trying to find element at offset 20
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Trying to find element at offset 20
CONSTRAINING: 0: i64*,  8: i32,  12: i32,  16: i32,  20: i32,  : SCMRE[20,24]0x55f77c0
CONSTRAINING: 0: i64*,  8: i32,  16: i32,  20: i32,  : CRE: elem 0:default:0x56737c0
Running on MOD_EXP_CTIME_COPY_TO_PREBUF in context []
Running on MOD_EXP_CTIME_COPY_FROM_PREBUF in context []
Running on constant_time_eq_int in context []
Running on constant_time_eq in context []
Running on constant_time_is_zero in context []
Running on constant_time_msb in context []
Running on bn2binpad in context []
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
Trying to constrain p at 0 for value : p
%struct.bignum_st* %p
%struct.bignum_st* %p
 has 5 elements.
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
Trying to constrain m at 0 for value : m
%struct.bignum_st* %m
%struct.bignum_st* %m
 has 5 elements.
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
Map size does not match number of elements 1
	Node0x5568f70 [shape=record,shape=Mrecord,label="{0: i64*,  8: i32,  16: i32,  20: i32,  : RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7|<s8>8|<s9>9|<s10>10|<s11>11|<s12>12|<s13>13|<s14>14|<s15>15|<s16>16|<s17>17|<s18>18|<s19>19|<s20>20|<s21>21|<s22>22|<s23>23}}"];
	Node0x5568f70:s0 -> Node0x5569270;
Matching Type:%struct.bignum_st*
Map size does not match number of elements 1
	Node0x5569270 [shape=record,shape=Mrecord,label="{0: i64,   array: RE\n|{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>6|<s7>7}}"];
FOUND 0 elements from the locsForValue
Number of elements to constrain: 0
DONE
#--------------Results------------------
bn_exp.c line 1124
bn_exp.c line 1123
bn_exp.c line 1133
bn_exp.c line 1137
bn_exp.c line 1141
bn_exp.c line 1143
bn_exp.c line 1151
bn_exp.c line 1161
bn_exp.c line 1161
bn_exp.c line 1161
bn_exp.c line 1169
bn_exp.c line 1179
bn_exp.c line 1182
bn_exp.c line 1184
bn_exp.c line 1188
bn_exp.c line 1188
bn_exp.c line 1195
bn_exp.c line 1200
bn_exp.c line 1202
bn_exp.c line 1204
bn_exp.c line 1208
bn_exp.c line 1208
bn_exp.c line 1218
bn_exp.c line 1220
bn_exp.c line 1224
bn_exp.c line 1224
bn_exp.c line 1233
bn_lib.c line 111
bn_lib.c line 112
bn_lib.c line 113
bn_lib.c line 118
bn_lib.c line 143
bn_lib.c line 144
bn_lib.c line 152
bn_lib.c line 166
bn_lib.c line 330
bn_lib.c line 332
bn_lib.c line 334
bn_lib.c line 475
bn_lib.c line 746
bn_lib.c line 750
bn_lib.c line 926
bn_lib.c line 926
bn_lib.c line 936
bn_lib.c line 946
bn_lib.c line 173
bn_lib.c line 258
bn_lib.c line 262
bn_lib.c line 266
bn_lib.c line 274
bn_lib.c line 275
include/bn_lcl.h line 679
#--------------Statistics----------------
:: Tainted Branches: 52
:: Branch Instructions: 885
:: Conditional Branches: 357
:: Vulnerable Branches: 5.88% [52/885]
